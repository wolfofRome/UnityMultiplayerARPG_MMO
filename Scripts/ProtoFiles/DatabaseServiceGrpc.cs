// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: database_service.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

public static partial class DatabaseService
{
  static readonly string __ServiceName = "DatabaseService";

  static readonly grpc::Marshaller<global::ValidateUserLoginReq> __Marshaller_ValidateUserLoginReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ValidateUserLoginReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::ValidateUserLoginResp> __Marshaller_ValidateUserLoginResp = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ValidateUserLoginResp.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::ValidateAccessTokenReq> __Marshaller_ValidateAccessTokenReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ValidateAccessTokenReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::ValidateAccessTokenResp> __Marshaller_ValidateAccessTokenResp = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ValidateAccessTokenResp.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::GetUserLevelReq> __Marshaller_GetUserLevelReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GetUserLevelReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::GetUserLevelResp> __Marshaller_GetUserLevelResp = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GetUserLevelResp.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::GetGoldReq> __Marshaller_GetGoldReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GetGoldReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::GoldResp> __Marshaller_GoldResp = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GoldResp.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::ChangeGoldReq> __Marshaller_ChangeGoldReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ChangeGoldReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::GetCashReq> __Marshaller_GetCashReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GetCashReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::CashResp> __Marshaller_CashResp = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::CashResp.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::ChangeCashReq> __Marshaller_ChangeCashReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ChangeCashReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::UpdateAccessTokenReq> __Marshaller_UpdateAccessTokenReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::UpdateAccessTokenReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::VoidResp> __Marshaller_VoidResp = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::VoidResp.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::CreateUserLoginReq> __Marshaller_CreateUserLoginReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::CreateUserLoginReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::FindUsernameReq> __Marshaller_FindUsernameReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::FindUsernameReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::FindUsernameResp> __Marshaller_FindUsernameResp = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::FindUsernameResp.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::CreateCharacterReq> __Marshaller_CreateCharacterReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::CreateCharacterReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::CharacterResp> __Marshaller_CharacterResp = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::CharacterResp.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::ReadCharacterReq> __Marshaller_ReadCharacterReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ReadCharacterReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::ReadCharactersReq> __Marshaller_ReadCharactersReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ReadCharactersReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::CharactersResp> __Marshaller_CharactersResp = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::CharactersResp.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::UpdateCharacterReq> __Marshaller_UpdateCharacterReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::UpdateCharacterReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::DeleteCharacterReq> __Marshaller_DeleteCharacterReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::DeleteCharacterReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::FindCharacterNameReq> __Marshaller_FindCharacterNameReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::FindCharacterNameReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::FindCharacterNameResp> __Marshaller_FindCharacterNameResp = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::FindCharacterNameResp.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::GetIdByCharacterNameReq> __Marshaller_GetIdByCharacterNameReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GetIdByCharacterNameReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::GetIdByCharacterNameResp> __Marshaller_GetIdByCharacterNameResp = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GetIdByCharacterNameResp.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::GetUserIdByCharacterNameReq> __Marshaller_GetUserIdByCharacterNameReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GetUserIdByCharacterNameReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::GetUserIdByCharacterNameResp> __Marshaller_GetUserIdByCharacterNameResp = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GetUserIdByCharacterNameResp.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::FindCharactersReq> __Marshaller_FindCharactersReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::FindCharactersReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::FindCharactersResp> __Marshaller_FindCharactersResp = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::FindCharactersResp.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::CreateFriendReq> __Marshaller_CreateFriendReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::CreateFriendReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::ReadFriendsResp> __Marshaller_ReadFriendsResp = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ReadFriendsResp.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::DeleteFriendReq> __Marshaller_DeleteFriendReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::DeleteFriendReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::ReadFriendsReq> __Marshaller_ReadFriendsReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ReadFriendsReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::CreateBuildingReq> __Marshaller_CreateBuildingReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::CreateBuildingReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::BuildingResp> __Marshaller_BuildingResp = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::BuildingResp.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::UpdateBuildingReq> __Marshaller_UpdateBuildingReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::UpdateBuildingReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::DeleteBuildingReq> __Marshaller_DeleteBuildingReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::DeleteBuildingReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::ReadBuildingsReq> __Marshaller_ReadBuildingsReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ReadBuildingsReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::BuildingsResp> __Marshaller_BuildingsResp = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::BuildingsResp.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::CreatePartyReq> __Marshaller_CreatePartyReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::CreatePartyReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::PartyResp> __Marshaller_PartyResp = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PartyResp.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::UpdatePartyReq> __Marshaller_UpdatePartyReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::UpdatePartyReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::UpdatePartyLeaderReq> __Marshaller_UpdatePartyLeaderReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::UpdatePartyLeaderReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::UpdateCharacterPartyReq> __Marshaller_UpdateCharacterPartyReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::UpdateCharacterPartyReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::ClearCharacterPartyReq> __Marshaller_ClearCharacterPartyReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ClearCharacterPartyReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::DeletePartyReq> __Marshaller_DeletePartyReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::DeletePartyReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::ReadPartyReq> __Marshaller_ReadPartyReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ReadPartyReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::CreateGuildReq> __Marshaller_CreateGuildReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::CreateGuildReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::GuildResp> __Marshaller_GuildResp = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GuildResp.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::IncreaseGuildExpReq> __Marshaller_IncreaseGuildExpReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::IncreaseGuildExpReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::AddGuildSkillReq> __Marshaller_AddGuildSkillReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AddGuildSkillReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::UpdateGuildLeaderReq> __Marshaller_UpdateGuildLeaderReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::UpdateGuildLeaderReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::UpdateGuildMessageReq> __Marshaller_UpdateGuildMessageReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::UpdateGuildMessageReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::UpdateGuildRoleReq> __Marshaller_UpdateGuildRoleReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::UpdateGuildRoleReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::UpdateGuildMemberRoleReq> __Marshaller_UpdateGuildMemberRoleReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::UpdateGuildMemberRoleReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::UpdateCharacterGuildReq> __Marshaller_UpdateCharacterGuildReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::UpdateCharacterGuildReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::ClearCharacterGuildReq> __Marshaller_ClearCharacterGuildReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ClearCharacterGuildReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::DeleteGuildReq> __Marshaller_DeleteGuildReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::DeleteGuildReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::FindGuildNameReq> __Marshaller_FindGuildNameReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::FindGuildNameReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::FindGuildNameResp> __Marshaller_FindGuildNameResp = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::FindGuildNameResp.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::ReadGuildReq> __Marshaller_ReadGuildReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ReadGuildReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::GetGuildGoldReq> __Marshaller_GetGuildGoldReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GetGuildGoldReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::GuildGoldResp> __Marshaller_GuildGoldResp = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GuildGoldResp.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::ChangeGuildGoldReq> __Marshaller_ChangeGuildGoldReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ChangeGuildGoldReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::ReadStorageItemsReq> __Marshaller_ReadStorageItemsReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ReadStorageItemsReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::ReadStorageItemsResp> __Marshaller_ReadStorageItemsResp = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ReadStorageItemsResp.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::MoveItemToStorageReq> __Marshaller_MoveItemToStorageReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MoveItemToStorageReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::MoveItemToStorageResp> __Marshaller_MoveItemToStorageResp = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MoveItemToStorageResp.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::MoveItemFromStorageReq> __Marshaller_MoveItemFromStorageReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MoveItemFromStorageReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::MoveItemFromStorageResp> __Marshaller_MoveItemFromStorageResp = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MoveItemFromStorageResp.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::SwapOrMergeStorageItemReq> __Marshaller_SwapOrMergeStorageItemReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SwapOrMergeStorageItemReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::SwapOrMergeStorageItemResp> __Marshaller_SwapOrMergeStorageItemResp = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SwapOrMergeStorageItemResp.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::IncreaseStorageItemsReq> __Marshaller_IncreaseStorageItemsReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::IncreaseStorageItemsReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::IncreaseStorageItemsResp> __Marshaller_IncreaseStorageItemsResp = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::IncreaseStorageItemsResp.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::DecreaseStorageItemsReq> __Marshaller_DecreaseStorageItemsReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::DecreaseStorageItemsReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::DecreaseStorageItemsResp> __Marshaller_DecreaseStorageItemsResp = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::DecreaseStorageItemsResp.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::MailListReq> __Marshaller_MailListReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MailListReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::MailListResp> __Marshaller_MailListResp = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MailListResp.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::UpdateReadMailStateReq> __Marshaller_UpdateReadMailStateReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::UpdateReadMailStateReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::UpdateReadMailStateResp> __Marshaller_UpdateReadMailStateResp = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::UpdateReadMailStateResp.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::UpdateClaimMailItemsStateReq> __Marshaller_UpdateClaimMailItemsStateReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::UpdateClaimMailItemsStateReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::UpdateClaimMailItemsStateResp> __Marshaller_UpdateClaimMailItemsStateResp = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::UpdateClaimMailItemsStateResp.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::UpdateDeleteMailStateReq> __Marshaller_UpdateDeleteMailStateReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::UpdateDeleteMailStateReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::UpdateDeleteMailStateResp> __Marshaller_UpdateDeleteMailStateResp = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::UpdateDeleteMailStateResp.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::SendMailReq> __Marshaller_SendMailReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SendMailReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::SendMailResp> __Marshaller_SendMailResp = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SendMailResp.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::GetMailReq> __Marshaller_GetMailReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GetMailReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::GetMailResp> __Marshaller_GetMailResp = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GetMailResp.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::CustomReq> __Marshaller_CustomReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::CustomReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::CustomResp> __Marshaller_CustomResp = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::CustomResp.Parser.ParseFrom);

  static readonly grpc::Method<global::ValidateUserLoginReq, global::ValidateUserLoginResp> __Method_ValidateUserLogin = new grpc::Method<global::ValidateUserLoginReq, global::ValidateUserLoginResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "ValidateUserLogin",
      __Marshaller_ValidateUserLoginReq,
      __Marshaller_ValidateUserLoginResp);

  static readonly grpc::Method<global::ValidateAccessTokenReq, global::ValidateAccessTokenResp> __Method_ValidateAccessToken = new grpc::Method<global::ValidateAccessTokenReq, global::ValidateAccessTokenResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "ValidateAccessToken",
      __Marshaller_ValidateAccessTokenReq,
      __Marshaller_ValidateAccessTokenResp);

  static readonly grpc::Method<global::GetUserLevelReq, global::GetUserLevelResp> __Method_GetUserLevel = new grpc::Method<global::GetUserLevelReq, global::GetUserLevelResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "GetUserLevel",
      __Marshaller_GetUserLevelReq,
      __Marshaller_GetUserLevelResp);

  static readonly grpc::Method<global::GetGoldReq, global::GoldResp> __Method_GetGold = new grpc::Method<global::GetGoldReq, global::GoldResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "GetGold",
      __Marshaller_GetGoldReq,
      __Marshaller_GoldResp);

  static readonly grpc::Method<global::ChangeGoldReq, global::GoldResp> __Method_ChangeGold = new grpc::Method<global::ChangeGoldReq, global::GoldResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "ChangeGold",
      __Marshaller_ChangeGoldReq,
      __Marshaller_GoldResp);

  static readonly grpc::Method<global::GetCashReq, global::CashResp> __Method_GetCash = new grpc::Method<global::GetCashReq, global::CashResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "GetCash",
      __Marshaller_GetCashReq,
      __Marshaller_CashResp);

  static readonly grpc::Method<global::ChangeCashReq, global::CashResp> __Method_ChangeCash = new grpc::Method<global::ChangeCashReq, global::CashResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "ChangeCash",
      __Marshaller_ChangeCashReq,
      __Marshaller_CashResp);

  static readonly grpc::Method<global::UpdateAccessTokenReq, global::VoidResp> __Method_UpdateAccessToken = new grpc::Method<global::UpdateAccessTokenReq, global::VoidResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "UpdateAccessToken",
      __Marshaller_UpdateAccessTokenReq,
      __Marshaller_VoidResp);

  static readonly grpc::Method<global::CreateUserLoginReq, global::VoidResp> __Method_CreateUserLogin = new grpc::Method<global::CreateUserLoginReq, global::VoidResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "CreateUserLogin",
      __Marshaller_CreateUserLoginReq,
      __Marshaller_VoidResp);

  static readonly grpc::Method<global::FindUsernameReq, global::FindUsernameResp> __Method_FindUsername = new grpc::Method<global::FindUsernameReq, global::FindUsernameResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "FindUsername",
      __Marshaller_FindUsernameReq,
      __Marshaller_FindUsernameResp);

  static readonly grpc::Method<global::CreateCharacterReq, global::CharacterResp> __Method_CreateCharacter = new grpc::Method<global::CreateCharacterReq, global::CharacterResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "CreateCharacter",
      __Marshaller_CreateCharacterReq,
      __Marshaller_CharacterResp);

  static readonly grpc::Method<global::ReadCharacterReq, global::CharacterResp> __Method_ReadCharacter = new grpc::Method<global::ReadCharacterReq, global::CharacterResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "ReadCharacter",
      __Marshaller_ReadCharacterReq,
      __Marshaller_CharacterResp);

  static readonly grpc::Method<global::ReadCharactersReq, global::CharactersResp> __Method_ReadCharacters = new grpc::Method<global::ReadCharactersReq, global::CharactersResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "ReadCharacters",
      __Marshaller_ReadCharactersReq,
      __Marshaller_CharactersResp);

  static readonly grpc::Method<global::UpdateCharacterReq, global::CharacterResp> __Method_UpdateCharacter = new grpc::Method<global::UpdateCharacterReq, global::CharacterResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "UpdateCharacter",
      __Marshaller_UpdateCharacterReq,
      __Marshaller_CharacterResp);

  static readonly grpc::Method<global::DeleteCharacterReq, global::VoidResp> __Method_DeleteCharacter = new grpc::Method<global::DeleteCharacterReq, global::VoidResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "DeleteCharacter",
      __Marshaller_DeleteCharacterReq,
      __Marshaller_VoidResp);

  static readonly grpc::Method<global::FindCharacterNameReq, global::FindCharacterNameResp> __Method_FindCharacterName = new grpc::Method<global::FindCharacterNameReq, global::FindCharacterNameResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "FindCharacterName",
      __Marshaller_FindCharacterNameReq,
      __Marshaller_FindCharacterNameResp);

  static readonly grpc::Method<global::GetIdByCharacterNameReq, global::GetIdByCharacterNameResp> __Method_GetIdByCharacterName = new grpc::Method<global::GetIdByCharacterNameReq, global::GetIdByCharacterNameResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "GetIdByCharacterName",
      __Marshaller_GetIdByCharacterNameReq,
      __Marshaller_GetIdByCharacterNameResp);

  static readonly grpc::Method<global::GetUserIdByCharacterNameReq, global::GetUserIdByCharacterNameResp> __Method_GetUserIdByCharacterName = new grpc::Method<global::GetUserIdByCharacterNameReq, global::GetUserIdByCharacterNameResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "GetUserIdByCharacterName",
      __Marshaller_GetUserIdByCharacterNameReq,
      __Marshaller_GetUserIdByCharacterNameResp);

  static readonly grpc::Method<global::FindCharactersReq, global::FindCharactersResp> __Method_FindCharacters = new grpc::Method<global::FindCharactersReq, global::FindCharactersResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "FindCharacters",
      __Marshaller_FindCharactersReq,
      __Marshaller_FindCharactersResp);

  static readonly grpc::Method<global::CreateFriendReq, global::ReadFriendsResp> __Method_CreateFriend = new grpc::Method<global::CreateFriendReq, global::ReadFriendsResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "CreateFriend",
      __Marshaller_CreateFriendReq,
      __Marshaller_ReadFriendsResp);

  static readonly grpc::Method<global::DeleteFriendReq, global::ReadFriendsResp> __Method_DeleteFriend = new grpc::Method<global::DeleteFriendReq, global::ReadFriendsResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "DeleteFriend",
      __Marshaller_DeleteFriendReq,
      __Marshaller_ReadFriendsResp);

  static readonly grpc::Method<global::ReadFriendsReq, global::ReadFriendsResp> __Method_ReadFriends = new grpc::Method<global::ReadFriendsReq, global::ReadFriendsResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "ReadFriends",
      __Marshaller_ReadFriendsReq,
      __Marshaller_ReadFriendsResp);

  static readonly grpc::Method<global::CreateBuildingReq, global::BuildingResp> __Method_CreateBuilding = new grpc::Method<global::CreateBuildingReq, global::BuildingResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "CreateBuilding",
      __Marshaller_CreateBuildingReq,
      __Marshaller_BuildingResp);

  static readonly grpc::Method<global::UpdateBuildingReq, global::BuildingResp> __Method_UpdateBuilding = new grpc::Method<global::UpdateBuildingReq, global::BuildingResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "UpdateBuilding",
      __Marshaller_UpdateBuildingReq,
      __Marshaller_BuildingResp);

  static readonly grpc::Method<global::DeleteBuildingReq, global::VoidResp> __Method_DeleteBuilding = new grpc::Method<global::DeleteBuildingReq, global::VoidResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "DeleteBuilding",
      __Marshaller_DeleteBuildingReq,
      __Marshaller_VoidResp);

  static readonly grpc::Method<global::ReadBuildingsReq, global::BuildingsResp> __Method_ReadBuildings = new grpc::Method<global::ReadBuildingsReq, global::BuildingsResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "ReadBuildings",
      __Marshaller_ReadBuildingsReq,
      __Marshaller_BuildingsResp);

  static readonly grpc::Method<global::CreatePartyReq, global::PartyResp> __Method_CreateParty = new grpc::Method<global::CreatePartyReq, global::PartyResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "CreateParty",
      __Marshaller_CreatePartyReq,
      __Marshaller_PartyResp);

  static readonly grpc::Method<global::UpdatePartyReq, global::PartyResp> __Method_UpdateParty = new grpc::Method<global::UpdatePartyReq, global::PartyResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "UpdateParty",
      __Marshaller_UpdatePartyReq,
      __Marshaller_PartyResp);

  static readonly grpc::Method<global::UpdatePartyLeaderReq, global::PartyResp> __Method_UpdatePartyLeader = new grpc::Method<global::UpdatePartyLeaderReq, global::PartyResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "UpdatePartyLeader",
      __Marshaller_UpdatePartyLeaderReq,
      __Marshaller_PartyResp);

  static readonly grpc::Method<global::UpdateCharacterPartyReq, global::PartyResp> __Method_UpdateCharacterParty = new grpc::Method<global::UpdateCharacterPartyReq, global::PartyResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "UpdateCharacterParty",
      __Marshaller_UpdateCharacterPartyReq,
      __Marshaller_PartyResp);

  static readonly grpc::Method<global::ClearCharacterPartyReq, global::VoidResp> __Method_ClearCharacterParty = new grpc::Method<global::ClearCharacterPartyReq, global::VoidResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "ClearCharacterParty",
      __Marshaller_ClearCharacterPartyReq,
      __Marshaller_VoidResp);

  static readonly grpc::Method<global::DeletePartyReq, global::VoidResp> __Method_DeleteParty = new grpc::Method<global::DeletePartyReq, global::VoidResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "DeleteParty",
      __Marshaller_DeletePartyReq,
      __Marshaller_VoidResp);

  static readonly grpc::Method<global::ReadPartyReq, global::PartyResp> __Method_ReadParty = new grpc::Method<global::ReadPartyReq, global::PartyResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "ReadParty",
      __Marshaller_ReadPartyReq,
      __Marshaller_PartyResp);

  static readonly grpc::Method<global::CreateGuildReq, global::GuildResp> __Method_CreateGuild = new grpc::Method<global::CreateGuildReq, global::GuildResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "CreateGuild",
      __Marshaller_CreateGuildReq,
      __Marshaller_GuildResp);

  static readonly grpc::Method<global::IncreaseGuildExpReq, global::GuildResp> __Method_IncreaseGuildExp = new grpc::Method<global::IncreaseGuildExpReq, global::GuildResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "IncreaseGuildExp",
      __Marshaller_IncreaseGuildExpReq,
      __Marshaller_GuildResp);

  static readonly grpc::Method<global::AddGuildSkillReq, global::GuildResp> __Method_AddGuildSkill = new grpc::Method<global::AddGuildSkillReq, global::GuildResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "AddGuildSkill",
      __Marshaller_AddGuildSkillReq,
      __Marshaller_GuildResp);

  static readonly grpc::Method<global::UpdateGuildLeaderReq, global::GuildResp> __Method_UpdateGuildLeader = new grpc::Method<global::UpdateGuildLeaderReq, global::GuildResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "UpdateGuildLeader",
      __Marshaller_UpdateGuildLeaderReq,
      __Marshaller_GuildResp);

  static readonly grpc::Method<global::UpdateGuildMessageReq, global::GuildResp> __Method_UpdateGuildMessage = new grpc::Method<global::UpdateGuildMessageReq, global::GuildResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "UpdateGuildMessage",
      __Marshaller_UpdateGuildMessageReq,
      __Marshaller_GuildResp);

  static readonly grpc::Method<global::UpdateGuildRoleReq, global::GuildResp> __Method_UpdateGuildRole = new grpc::Method<global::UpdateGuildRoleReq, global::GuildResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "UpdateGuildRole",
      __Marshaller_UpdateGuildRoleReq,
      __Marshaller_GuildResp);

  static readonly grpc::Method<global::UpdateGuildMemberRoleReq, global::GuildResp> __Method_UpdateGuildMemberRole = new grpc::Method<global::UpdateGuildMemberRoleReq, global::GuildResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "UpdateGuildMemberRole",
      __Marshaller_UpdateGuildMemberRoleReq,
      __Marshaller_GuildResp);

  static readonly grpc::Method<global::UpdateCharacterGuildReq, global::GuildResp> __Method_UpdateCharacterGuild = new grpc::Method<global::UpdateCharacterGuildReq, global::GuildResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "UpdateCharacterGuild",
      __Marshaller_UpdateCharacterGuildReq,
      __Marshaller_GuildResp);

  static readonly grpc::Method<global::ClearCharacterGuildReq, global::VoidResp> __Method_ClearCharacterGuild = new grpc::Method<global::ClearCharacterGuildReq, global::VoidResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "ClearCharacterGuild",
      __Marshaller_ClearCharacterGuildReq,
      __Marshaller_VoidResp);

  static readonly grpc::Method<global::DeleteGuildReq, global::VoidResp> __Method_DeleteGuild = new grpc::Method<global::DeleteGuildReq, global::VoidResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "DeleteGuild",
      __Marshaller_DeleteGuildReq,
      __Marshaller_VoidResp);

  static readonly grpc::Method<global::FindGuildNameReq, global::FindGuildNameResp> __Method_FindGuildName = new grpc::Method<global::FindGuildNameReq, global::FindGuildNameResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "FindGuildName",
      __Marshaller_FindGuildNameReq,
      __Marshaller_FindGuildNameResp);

  static readonly grpc::Method<global::ReadGuildReq, global::GuildResp> __Method_ReadGuild = new grpc::Method<global::ReadGuildReq, global::GuildResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "ReadGuild",
      __Marshaller_ReadGuildReq,
      __Marshaller_GuildResp);

  static readonly grpc::Method<global::GetGuildGoldReq, global::GuildGoldResp> __Method_GetGuildGold = new grpc::Method<global::GetGuildGoldReq, global::GuildGoldResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "GetGuildGold",
      __Marshaller_GetGuildGoldReq,
      __Marshaller_GuildGoldResp);

  static readonly grpc::Method<global::ChangeGuildGoldReq, global::GuildGoldResp> __Method_ChangeGuildGold = new grpc::Method<global::ChangeGuildGoldReq, global::GuildGoldResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "ChangeGuildGold",
      __Marshaller_ChangeGuildGoldReq,
      __Marshaller_GuildGoldResp);

  static readonly grpc::Method<global::ReadStorageItemsReq, global::ReadStorageItemsResp> __Method_ReadStorageItems = new grpc::Method<global::ReadStorageItemsReq, global::ReadStorageItemsResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "ReadStorageItems",
      __Marshaller_ReadStorageItemsReq,
      __Marshaller_ReadStorageItemsResp);

  static readonly grpc::Method<global::MoveItemToStorageReq, global::MoveItemToStorageResp> __Method_MoveItemToStorage = new grpc::Method<global::MoveItemToStorageReq, global::MoveItemToStorageResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "MoveItemToStorage",
      __Marshaller_MoveItemToStorageReq,
      __Marshaller_MoveItemToStorageResp);

  static readonly grpc::Method<global::MoveItemFromStorageReq, global::MoveItemFromStorageResp> __Method_MoveItemFromStorage = new grpc::Method<global::MoveItemFromStorageReq, global::MoveItemFromStorageResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "MoveItemFromStorage",
      __Marshaller_MoveItemFromStorageReq,
      __Marshaller_MoveItemFromStorageResp);

  static readonly grpc::Method<global::SwapOrMergeStorageItemReq, global::SwapOrMergeStorageItemResp> __Method_SwapOrMergeStorageItem = new grpc::Method<global::SwapOrMergeStorageItemReq, global::SwapOrMergeStorageItemResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "SwapOrMergeStorageItem",
      __Marshaller_SwapOrMergeStorageItemReq,
      __Marshaller_SwapOrMergeStorageItemResp);

  static readonly grpc::Method<global::IncreaseStorageItemsReq, global::IncreaseStorageItemsResp> __Method_IncreaseStorageItems = new grpc::Method<global::IncreaseStorageItemsReq, global::IncreaseStorageItemsResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "IncreaseStorageItems",
      __Marshaller_IncreaseStorageItemsReq,
      __Marshaller_IncreaseStorageItemsResp);

  static readonly grpc::Method<global::DecreaseStorageItemsReq, global::DecreaseStorageItemsResp> __Method_DecreaseStorageItems = new grpc::Method<global::DecreaseStorageItemsReq, global::DecreaseStorageItemsResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "DecreaseStorageItems",
      __Marshaller_DecreaseStorageItemsReq,
      __Marshaller_DecreaseStorageItemsResp);

  static readonly grpc::Method<global::MailListReq, global::MailListResp> __Method_MailList = new grpc::Method<global::MailListReq, global::MailListResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "MailList",
      __Marshaller_MailListReq,
      __Marshaller_MailListResp);

  static readonly grpc::Method<global::UpdateReadMailStateReq, global::UpdateReadMailStateResp> __Method_UpdateReadMailState = new grpc::Method<global::UpdateReadMailStateReq, global::UpdateReadMailStateResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "UpdateReadMailState",
      __Marshaller_UpdateReadMailStateReq,
      __Marshaller_UpdateReadMailStateResp);

  static readonly grpc::Method<global::UpdateClaimMailItemsStateReq, global::UpdateClaimMailItemsStateResp> __Method_UpdateClaimMailItemsState = new grpc::Method<global::UpdateClaimMailItemsStateReq, global::UpdateClaimMailItemsStateResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "UpdateClaimMailItemsState",
      __Marshaller_UpdateClaimMailItemsStateReq,
      __Marshaller_UpdateClaimMailItemsStateResp);

  static readonly grpc::Method<global::UpdateDeleteMailStateReq, global::UpdateDeleteMailStateResp> __Method_UpdateDeleteMailState = new grpc::Method<global::UpdateDeleteMailStateReq, global::UpdateDeleteMailStateResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "UpdateDeleteMailState",
      __Marshaller_UpdateDeleteMailStateReq,
      __Marshaller_UpdateDeleteMailStateResp);

  static readonly grpc::Method<global::SendMailReq, global::SendMailResp> __Method_SendMail = new grpc::Method<global::SendMailReq, global::SendMailResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "SendMail",
      __Marshaller_SendMailReq,
      __Marshaller_SendMailResp);

  static readonly grpc::Method<global::GetMailReq, global::GetMailResp> __Method_GetMail = new grpc::Method<global::GetMailReq, global::GetMailResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "GetMail",
      __Marshaller_GetMailReq,
      __Marshaller_GetMailResp);

  static readonly grpc::Method<global::CustomReq, global::CustomResp> __Method_Custom = new grpc::Method<global::CustomReq, global::CustomResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "Custom",
      __Marshaller_CustomReq,
      __Marshaller_CustomResp);

  /// <summary>Service descriptor</summary>
  public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
  {
    get { return global::DatabaseServiceReflection.Descriptor.Services[0]; }
  }

  /// <summary>Base class for server-side implementations of DatabaseService</summary>
  [grpc::BindServiceMethod(typeof(DatabaseService), "BindService")]
  public abstract partial class DatabaseServiceBase
  {
    public virtual global::System.Threading.Tasks.Task<global::ValidateUserLoginResp> ValidateUserLogin(global::ValidateUserLoginReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::ValidateAccessTokenResp> ValidateAccessToken(global::ValidateAccessTokenReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::GetUserLevelResp> GetUserLevel(global::GetUserLevelReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::GoldResp> GetGold(global::GetGoldReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::GoldResp> ChangeGold(global::ChangeGoldReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::CashResp> GetCash(global::GetCashReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::CashResp> ChangeCash(global::ChangeCashReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::VoidResp> UpdateAccessToken(global::UpdateAccessTokenReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::VoidResp> CreateUserLogin(global::CreateUserLoginReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::FindUsernameResp> FindUsername(global::FindUsernameReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    /// <summary>
    /// Character
    /// </summary>
    /// <param name="request">The request received from the client.</param>
    /// <param name="context">The context of the server-side call handler being invoked.</param>
    /// <returns>The response to send back to the client (wrapped by a task).</returns>
    public virtual global::System.Threading.Tasks.Task<global::CharacterResp> CreateCharacter(global::CreateCharacterReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::CharacterResp> ReadCharacter(global::ReadCharacterReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::CharactersResp> ReadCharacters(global::ReadCharactersReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::CharacterResp> UpdateCharacter(global::UpdateCharacterReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::VoidResp> DeleteCharacter(global::DeleteCharacterReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::FindCharacterNameResp> FindCharacterName(global::FindCharacterNameReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::GetIdByCharacterNameResp> GetIdByCharacterName(global::GetIdByCharacterNameReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::GetUserIdByCharacterNameResp> GetUserIdByCharacterName(global::GetUserIdByCharacterNameReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::FindCharactersResp> FindCharacters(global::FindCharactersReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    /// <summary>
    /// Friend
    /// </summary>
    /// <param name="request">The request received from the client.</param>
    /// <param name="context">The context of the server-side call handler being invoked.</param>
    /// <returns>The response to send back to the client (wrapped by a task).</returns>
    public virtual global::System.Threading.Tasks.Task<global::ReadFriendsResp> CreateFriend(global::CreateFriendReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::ReadFriendsResp> DeleteFriend(global::DeleteFriendReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::ReadFriendsResp> ReadFriends(global::ReadFriendsReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    /// <summary>
    /// Building
    /// </summary>
    /// <param name="request">The request received from the client.</param>
    /// <param name="context">The context of the server-side call handler being invoked.</param>
    /// <returns>The response to send back to the client (wrapped by a task).</returns>
    public virtual global::System.Threading.Tasks.Task<global::BuildingResp> CreateBuilding(global::CreateBuildingReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::BuildingResp> UpdateBuilding(global::UpdateBuildingReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::VoidResp> DeleteBuilding(global::DeleteBuildingReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::BuildingsResp> ReadBuildings(global::ReadBuildingsReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    /// <summary>
    /// Party
    /// </summary>
    /// <param name="request">The request received from the client.</param>
    /// <param name="context">The context of the server-side call handler being invoked.</param>
    /// <returns>The response to send back to the client (wrapped by a task).</returns>
    public virtual global::System.Threading.Tasks.Task<global::PartyResp> CreateParty(global::CreatePartyReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::PartyResp> UpdateParty(global::UpdatePartyReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::PartyResp> UpdatePartyLeader(global::UpdatePartyLeaderReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::PartyResp> UpdateCharacterParty(global::UpdateCharacterPartyReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::VoidResp> ClearCharacterParty(global::ClearCharacterPartyReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::VoidResp> DeleteParty(global::DeletePartyReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::PartyResp> ReadParty(global::ReadPartyReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    /// <summary>
    /// Guild
    /// </summary>
    /// <param name="request">The request received from the client.</param>
    /// <param name="context">The context of the server-side call handler being invoked.</param>
    /// <returns>The response to send back to the client (wrapped by a task).</returns>
    public virtual global::System.Threading.Tasks.Task<global::GuildResp> CreateGuild(global::CreateGuildReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::GuildResp> IncreaseGuildExp(global::IncreaseGuildExpReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::GuildResp> AddGuildSkill(global::AddGuildSkillReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::GuildResp> UpdateGuildLeader(global::UpdateGuildLeaderReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::GuildResp> UpdateGuildMessage(global::UpdateGuildMessageReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::GuildResp> UpdateGuildRole(global::UpdateGuildRoleReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::GuildResp> UpdateGuildMemberRole(global::UpdateGuildMemberRoleReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::GuildResp> UpdateCharacterGuild(global::UpdateCharacterGuildReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::VoidResp> ClearCharacterGuild(global::ClearCharacterGuildReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::VoidResp> DeleteGuild(global::DeleteGuildReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::FindGuildNameResp> FindGuildName(global::FindGuildNameReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::GuildResp> ReadGuild(global::ReadGuildReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::GuildGoldResp> GetGuildGold(global::GetGuildGoldReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::GuildGoldResp> ChangeGuildGold(global::ChangeGuildGoldReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    /// <summary>
    /// Storage
    /// </summary>
    /// <param name="request">The request received from the client.</param>
    /// <param name="context">The context of the server-side call handler being invoked.</param>
    /// <returns>The response to send back to the client (wrapped by a task).</returns>
    public virtual global::System.Threading.Tasks.Task<global::ReadStorageItemsResp> ReadStorageItems(global::ReadStorageItemsReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::MoveItemToStorageResp> MoveItemToStorage(global::MoveItemToStorageReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::MoveItemFromStorageResp> MoveItemFromStorage(global::MoveItemFromStorageReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::SwapOrMergeStorageItemResp> SwapOrMergeStorageItem(global::SwapOrMergeStorageItemReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::IncreaseStorageItemsResp> IncreaseStorageItems(global::IncreaseStorageItemsReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::DecreaseStorageItemsResp> DecreaseStorageItems(global::DecreaseStorageItemsReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    /// <summary>
    /// Mail
    /// </summary>
    /// <param name="request">The request received from the client.</param>
    /// <param name="context">The context of the server-side call handler being invoked.</param>
    /// <returns>The response to send back to the client (wrapped by a task).</returns>
    public virtual global::System.Threading.Tasks.Task<global::MailListResp> MailList(global::MailListReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::UpdateReadMailStateResp> UpdateReadMailState(global::UpdateReadMailStateReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::UpdateClaimMailItemsStateResp> UpdateClaimMailItemsState(global::UpdateClaimMailItemsStateReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::UpdateDeleteMailStateResp> UpdateDeleteMailState(global::UpdateDeleteMailStateReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::SendMailResp> SendMail(global::SendMailReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::GetMailResp> GetMail(global::GetMailReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    /// <summary>
    /// Other
    /// </summary>
    /// <param name="request">The request received from the client.</param>
    /// <param name="context">The context of the server-side call handler being invoked.</param>
    /// <returns>The response to send back to the client (wrapped by a task).</returns>
    public virtual global::System.Threading.Tasks.Task<global::CustomResp> Custom(global::CustomReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

  }

  /// <summary>Client for DatabaseService</summary>
  public partial class DatabaseServiceClient : grpc::ClientBase<DatabaseServiceClient>
  {
    /// <summary>Creates a new client for DatabaseService</summary>
    /// <param name="channel">The channel to use to make remote calls.</param>
    public DatabaseServiceClient(grpc::ChannelBase channel) : base(channel)
    {
    }
    /// <summary>Creates a new client for DatabaseService that uses a custom <c>CallInvoker</c>.</summary>
    /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
    public DatabaseServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
    {
    }
    /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
    protected DatabaseServiceClient() : base()
    {
    }
    /// <summary>Protected constructor to allow creation of configured clients.</summary>
    /// <param name="configuration">The client configuration.</param>
    protected DatabaseServiceClient(ClientBaseConfiguration configuration) : base(configuration)
    {
    }

    public virtual global::ValidateUserLoginResp ValidateUserLogin(global::ValidateUserLoginReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return ValidateUserLogin(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::ValidateUserLoginResp ValidateUserLogin(global::ValidateUserLoginReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_ValidateUserLogin, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::ValidateUserLoginResp> ValidateUserLoginAsync(global::ValidateUserLoginReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return ValidateUserLoginAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::ValidateUserLoginResp> ValidateUserLoginAsync(global::ValidateUserLoginReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_ValidateUserLogin, null, options, request);
    }
    public virtual global::ValidateAccessTokenResp ValidateAccessToken(global::ValidateAccessTokenReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return ValidateAccessToken(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::ValidateAccessTokenResp ValidateAccessToken(global::ValidateAccessTokenReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_ValidateAccessToken, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::ValidateAccessTokenResp> ValidateAccessTokenAsync(global::ValidateAccessTokenReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return ValidateAccessTokenAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::ValidateAccessTokenResp> ValidateAccessTokenAsync(global::ValidateAccessTokenReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_ValidateAccessToken, null, options, request);
    }
    public virtual global::GetUserLevelResp GetUserLevel(global::GetUserLevelReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return GetUserLevel(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::GetUserLevelResp GetUserLevel(global::GetUserLevelReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_GetUserLevel, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::GetUserLevelResp> GetUserLevelAsync(global::GetUserLevelReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return GetUserLevelAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::GetUserLevelResp> GetUserLevelAsync(global::GetUserLevelReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_GetUserLevel, null, options, request);
    }
    public virtual global::GoldResp GetGold(global::GetGoldReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return GetGold(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::GoldResp GetGold(global::GetGoldReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_GetGold, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::GoldResp> GetGoldAsync(global::GetGoldReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return GetGoldAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::GoldResp> GetGoldAsync(global::GetGoldReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_GetGold, null, options, request);
    }
    public virtual global::GoldResp ChangeGold(global::ChangeGoldReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return ChangeGold(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::GoldResp ChangeGold(global::ChangeGoldReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_ChangeGold, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::GoldResp> ChangeGoldAsync(global::ChangeGoldReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return ChangeGoldAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::GoldResp> ChangeGoldAsync(global::ChangeGoldReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_ChangeGold, null, options, request);
    }
    public virtual global::CashResp GetCash(global::GetCashReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return GetCash(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::CashResp GetCash(global::GetCashReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_GetCash, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::CashResp> GetCashAsync(global::GetCashReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return GetCashAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::CashResp> GetCashAsync(global::GetCashReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_GetCash, null, options, request);
    }
    public virtual global::CashResp ChangeCash(global::ChangeCashReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return ChangeCash(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::CashResp ChangeCash(global::ChangeCashReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_ChangeCash, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::CashResp> ChangeCashAsync(global::ChangeCashReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return ChangeCashAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::CashResp> ChangeCashAsync(global::ChangeCashReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_ChangeCash, null, options, request);
    }
    public virtual global::VoidResp UpdateAccessToken(global::UpdateAccessTokenReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return UpdateAccessToken(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::VoidResp UpdateAccessToken(global::UpdateAccessTokenReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_UpdateAccessToken, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::VoidResp> UpdateAccessTokenAsync(global::UpdateAccessTokenReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return UpdateAccessTokenAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::VoidResp> UpdateAccessTokenAsync(global::UpdateAccessTokenReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_UpdateAccessToken, null, options, request);
    }
    public virtual global::VoidResp CreateUserLogin(global::CreateUserLoginReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return CreateUserLogin(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::VoidResp CreateUserLogin(global::CreateUserLoginReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_CreateUserLogin, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::VoidResp> CreateUserLoginAsync(global::CreateUserLoginReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return CreateUserLoginAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::VoidResp> CreateUserLoginAsync(global::CreateUserLoginReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_CreateUserLogin, null, options, request);
    }
    public virtual global::FindUsernameResp FindUsername(global::FindUsernameReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return FindUsername(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::FindUsernameResp FindUsername(global::FindUsernameReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_FindUsername, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::FindUsernameResp> FindUsernameAsync(global::FindUsernameReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return FindUsernameAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::FindUsernameResp> FindUsernameAsync(global::FindUsernameReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_FindUsername, null, options, request);
    }
    /// <summary>
    /// Character
    /// </summary>
    /// <param name="request">The request to send to the server.</param>
    /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
    /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
    /// <param name="cancellationToken">An optional token for canceling the call.</param>
    /// <returns>The response received from the server.</returns>
    public virtual global::CharacterResp CreateCharacter(global::CreateCharacterReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return CreateCharacter(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    /// <summary>
    /// Character
    /// </summary>
    /// <param name="request">The request to send to the server.</param>
    /// <param name="options">The options for the call.</param>
    /// <returns>The response received from the server.</returns>
    public virtual global::CharacterResp CreateCharacter(global::CreateCharacterReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_CreateCharacter, null, options, request);
    }
    /// <summary>
    /// Character
    /// </summary>
    /// <param name="request">The request to send to the server.</param>
    /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
    /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
    /// <param name="cancellationToken">An optional token for canceling the call.</param>
    /// <returns>The call object.</returns>
    public virtual grpc::AsyncUnaryCall<global::CharacterResp> CreateCharacterAsync(global::CreateCharacterReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return CreateCharacterAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    /// <summary>
    /// Character
    /// </summary>
    /// <param name="request">The request to send to the server.</param>
    /// <param name="options">The options for the call.</param>
    /// <returns>The call object.</returns>
    public virtual grpc::AsyncUnaryCall<global::CharacterResp> CreateCharacterAsync(global::CreateCharacterReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_CreateCharacter, null, options, request);
    }
    public virtual global::CharacterResp ReadCharacter(global::ReadCharacterReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return ReadCharacter(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::CharacterResp ReadCharacter(global::ReadCharacterReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_ReadCharacter, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::CharacterResp> ReadCharacterAsync(global::ReadCharacterReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return ReadCharacterAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::CharacterResp> ReadCharacterAsync(global::ReadCharacterReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_ReadCharacter, null, options, request);
    }
    public virtual global::CharactersResp ReadCharacters(global::ReadCharactersReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return ReadCharacters(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::CharactersResp ReadCharacters(global::ReadCharactersReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_ReadCharacters, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::CharactersResp> ReadCharactersAsync(global::ReadCharactersReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return ReadCharactersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::CharactersResp> ReadCharactersAsync(global::ReadCharactersReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_ReadCharacters, null, options, request);
    }
    public virtual global::CharacterResp UpdateCharacter(global::UpdateCharacterReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return UpdateCharacter(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::CharacterResp UpdateCharacter(global::UpdateCharacterReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_UpdateCharacter, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::CharacterResp> UpdateCharacterAsync(global::UpdateCharacterReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return UpdateCharacterAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::CharacterResp> UpdateCharacterAsync(global::UpdateCharacterReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_UpdateCharacter, null, options, request);
    }
    public virtual global::VoidResp DeleteCharacter(global::DeleteCharacterReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return DeleteCharacter(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::VoidResp DeleteCharacter(global::DeleteCharacterReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_DeleteCharacter, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::VoidResp> DeleteCharacterAsync(global::DeleteCharacterReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return DeleteCharacterAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::VoidResp> DeleteCharacterAsync(global::DeleteCharacterReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_DeleteCharacter, null, options, request);
    }
    public virtual global::FindCharacterNameResp FindCharacterName(global::FindCharacterNameReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return FindCharacterName(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::FindCharacterNameResp FindCharacterName(global::FindCharacterNameReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_FindCharacterName, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::FindCharacterNameResp> FindCharacterNameAsync(global::FindCharacterNameReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return FindCharacterNameAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::FindCharacterNameResp> FindCharacterNameAsync(global::FindCharacterNameReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_FindCharacterName, null, options, request);
    }
    public virtual global::GetIdByCharacterNameResp GetIdByCharacterName(global::GetIdByCharacterNameReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return GetIdByCharacterName(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::GetIdByCharacterNameResp GetIdByCharacterName(global::GetIdByCharacterNameReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_GetIdByCharacterName, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::GetIdByCharacterNameResp> GetIdByCharacterNameAsync(global::GetIdByCharacterNameReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return GetIdByCharacterNameAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::GetIdByCharacterNameResp> GetIdByCharacterNameAsync(global::GetIdByCharacterNameReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_GetIdByCharacterName, null, options, request);
    }
    public virtual global::GetUserIdByCharacterNameResp GetUserIdByCharacterName(global::GetUserIdByCharacterNameReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return GetUserIdByCharacterName(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::GetUserIdByCharacterNameResp GetUserIdByCharacterName(global::GetUserIdByCharacterNameReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_GetUserIdByCharacterName, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::GetUserIdByCharacterNameResp> GetUserIdByCharacterNameAsync(global::GetUserIdByCharacterNameReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return GetUserIdByCharacterNameAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::GetUserIdByCharacterNameResp> GetUserIdByCharacterNameAsync(global::GetUserIdByCharacterNameReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_GetUserIdByCharacterName, null, options, request);
    }
    public virtual global::FindCharactersResp FindCharacters(global::FindCharactersReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return FindCharacters(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::FindCharactersResp FindCharacters(global::FindCharactersReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_FindCharacters, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::FindCharactersResp> FindCharactersAsync(global::FindCharactersReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return FindCharactersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::FindCharactersResp> FindCharactersAsync(global::FindCharactersReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_FindCharacters, null, options, request);
    }
    /// <summary>
    /// Friend
    /// </summary>
    /// <param name="request">The request to send to the server.</param>
    /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
    /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
    /// <param name="cancellationToken">An optional token for canceling the call.</param>
    /// <returns>The response received from the server.</returns>
    public virtual global::ReadFriendsResp CreateFriend(global::CreateFriendReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return CreateFriend(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    /// <summary>
    /// Friend
    /// </summary>
    /// <param name="request">The request to send to the server.</param>
    /// <param name="options">The options for the call.</param>
    /// <returns>The response received from the server.</returns>
    public virtual global::ReadFriendsResp CreateFriend(global::CreateFriendReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_CreateFriend, null, options, request);
    }
    /// <summary>
    /// Friend
    /// </summary>
    /// <param name="request">The request to send to the server.</param>
    /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
    /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
    /// <param name="cancellationToken">An optional token for canceling the call.</param>
    /// <returns>The call object.</returns>
    public virtual grpc::AsyncUnaryCall<global::ReadFriendsResp> CreateFriendAsync(global::CreateFriendReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return CreateFriendAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    /// <summary>
    /// Friend
    /// </summary>
    /// <param name="request">The request to send to the server.</param>
    /// <param name="options">The options for the call.</param>
    /// <returns>The call object.</returns>
    public virtual grpc::AsyncUnaryCall<global::ReadFriendsResp> CreateFriendAsync(global::CreateFriendReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_CreateFriend, null, options, request);
    }
    public virtual global::ReadFriendsResp DeleteFriend(global::DeleteFriendReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return DeleteFriend(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::ReadFriendsResp DeleteFriend(global::DeleteFriendReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_DeleteFriend, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::ReadFriendsResp> DeleteFriendAsync(global::DeleteFriendReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return DeleteFriendAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::ReadFriendsResp> DeleteFriendAsync(global::DeleteFriendReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_DeleteFriend, null, options, request);
    }
    public virtual global::ReadFriendsResp ReadFriends(global::ReadFriendsReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return ReadFriends(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::ReadFriendsResp ReadFriends(global::ReadFriendsReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_ReadFriends, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::ReadFriendsResp> ReadFriendsAsync(global::ReadFriendsReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return ReadFriendsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::ReadFriendsResp> ReadFriendsAsync(global::ReadFriendsReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_ReadFriends, null, options, request);
    }
    /// <summary>
    /// Building
    /// </summary>
    /// <param name="request">The request to send to the server.</param>
    /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
    /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
    /// <param name="cancellationToken">An optional token for canceling the call.</param>
    /// <returns>The response received from the server.</returns>
    public virtual global::BuildingResp CreateBuilding(global::CreateBuildingReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return CreateBuilding(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    /// <summary>
    /// Building
    /// </summary>
    /// <param name="request">The request to send to the server.</param>
    /// <param name="options">The options for the call.</param>
    /// <returns>The response received from the server.</returns>
    public virtual global::BuildingResp CreateBuilding(global::CreateBuildingReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_CreateBuilding, null, options, request);
    }
    /// <summary>
    /// Building
    /// </summary>
    /// <param name="request">The request to send to the server.</param>
    /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
    /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
    /// <param name="cancellationToken">An optional token for canceling the call.</param>
    /// <returns>The call object.</returns>
    public virtual grpc::AsyncUnaryCall<global::BuildingResp> CreateBuildingAsync(global::CreateBuildingReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return CreateBuildingAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    /// <summary>
    /// Building
    /// </summary>
    /// <param name="request">The request to send to the server.</param>
    /// <param name="options">The options for the call.</param>
    /// <returns>The call object.</returns>
    public virtual grpc::AsyncUnaryCall<global::BuildingResp> CreateBuildingAsync(global::CreateBuildingReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_CreateBuilding, null, options, request);
    }
    public virtual global::BuildingResp UpdateBuilding(global::UpdateBuildingReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return UpdateBuilding(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::BuildingResp UpdateBuilding(global::UpdateBuildingReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_UpdateBuilding, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::BuildingResp> UpdateBuildingAsync(global::UpdateBuildingReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return UpdateBuildingAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::BuildingResp> UpdateBuildingAsync(global::UpdateBuildingReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_UpdateBuilding, null, options, request);
    }
    public virtual global::VoidResp DeleteBuilding(global::DeleteBuildingReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return DeleteBuilding(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::VoidResp DeleteBuilding(global::DeleteBuildingReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_DeleteBuilding, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::VoidResp> DeleteBuildingAsync(global::DeleteBuildingReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return DeleteBuildingAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::VoidResp> DeleteBuildingAsync(global::DeleteBuildingReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_DeleteBuilding, null, options, request);
    }
    public virtual global::BuildingsResp ReadBuildings(global::ReadBuildingsReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return ReadBuildings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::BuildingsResp ReadBuildings(global::ReadBuildingsReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_ReadBuildings, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::BuildingsResp> ReadBuildingsAsync(global::ReadBuildingsReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return ReadBuildingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::BuildingsResp> ReadBuildingsAsync(global::ReadBuildingsReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_ReadBuildings, null, options, request);
    }
    /// <summary>
    /// Party
    /// </summary>
    /// <param name="request">The request to send to the server.</param>
    /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
    /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
    /// <param name="cancellationToken">An optional token for canceling the call.</param>
    /// <returns>The response received from the server.</returns>
    public virtual global::PartyResp CreateParty(global::CreatePartyReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return CreateParty(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    /// <summary>
    /// Party
    /// </summary>
    /// <param name="request">The request to send to the server.</param>
    /// <param name="options">The options for the call.</param>
    /// <returns>The response received from the server.</returns>
    public virtual global::PartyResp CreateParty(global::CreatePartyReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_CreateParty, null, options, request);
    }
    /// <summary>
    /// Party
    /// </summary>
    /// <param name="request">The request to send to the server.</param>
    /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
    /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
    /// <param name="cancellationToken">An optional token for canceling the call.</param>
    /// <returns>The call object.</returns>
    public virtual grpc::AsyncUnaryCall<global::PartyResp> CreatePartyAsync(global::CreatePartyReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return CreatePartyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    /// <summary>
    /// Party
    /// </summary>
    /// <param name="request">The request to send to the server.</param>
    /// <param name="options">The options for the call.</param>
    /// <returns>The call object.</returns>
    public virtual grpc::AsyncUnaryCall<global::PartyResp> CreatePartyAsync(global::CreatePartyReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_CreateParty, null, options, request);
    }
    public virtual global::PartyResp UpdateParty(global::UpdatePartyReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return UpdateParty(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::PartyResp UpdateParty(global::UpdatePartyReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_UpdateParty, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::PartyResp> UpdatePartyAsync(global::UpdatePartyReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return UpdatePartyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::PartyResp> UpdatePartyAsync(global::UpdatePartyReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_UpdateParty, null, options, request);
    }
    public virtual global::PartyResp UpdatePartyLeader(global::UpdatePartyLeaderReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return UpdatePartyLeader(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::PartyResp UpdatePartyLeader(global::UpdatePartyLeaderReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_UpdatePartyLeader, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::PartyResp> UpdatePartyLeaderAsync(global::UpdatePartyLeaderReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return UpdatePartyLeaderAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::PartyResp> UpdatePartyLeaderAsync(global::UpdatePartyLeaderReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_UpdatePartyLeader, null, options, request);
    }
    public virtual global::PartyResp UpdateCharacterParty(global::UpdateCharacterPartyReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return UpdateCharacterParty(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::PartyResp UpdateCharacterParty(global::UpdateCharacterPartyReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_UpdateCharacterParty, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::PartyResp> UpdateCharacterPartyAsync(global::UpdateCharacterPartyReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return UpdateCharacterPartyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::PartyResp> UpdateCharacterPartyAsync(global::UpdateCharacterPartyReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_UpdateCharacterParty, null, options, request);
    }
    public virtual global::VoidResp ClearCharacterParty(global::ClearCharacterPartyReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return ClearCharacterParty(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::VoidResp ClearCharacterParty(global::ClearCharacterPartyReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_ClearCharacterParty, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::VoidResp> ClearCharacterPartyAsync(global::ClearCharacterPartyReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return ClearCharacterPartyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::VoidResp> ClearCharacterPartyAsync(global::ClearCharacterPartyReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_ClearCharacterParty, null, options, request);
    }
    public virtual global::VoidResp DeleteParty(global::DeletePartyReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return DeleteParty(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::VoidResp DeleteParty(global::DeletePartyReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_DeleteParty, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::VoidResp> DeletePartyAsync(global::DeletePartyReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return DeletePartyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::VoidResp> DeletePartyAsync(global::DeletePartyReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_DeleteParty, null, options, request);
    }
    public virtual global::PartyResp ReadParty(global::ReadPartyReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return ReadParty(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::PartyResp ReadParty(global::ReadPartyReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_ReadParty, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::PartyResp> ReadPartyAsync(global::ReadPartyReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return ReadPartyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::PartyResp> ReadPartyAsync(global::ReadPartyReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_ReadParty, null, options, request);
    }
    /// <summary>
    /// Guild
    /// </summary>
    /// <param name="request">The request to send to the server.</param>
    /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
    /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
    /// <param name="cancellationToken">An optional token for canceling the call.</param>
    /// <returns>The response received from the server.</returns>
    public virtual global::GuildResp CreateGuild(global::CreateGuildReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return CreateGuild(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    /// <summary>
    /// Guild
    /// </summary>
    /// <param name="request">The request to send to the server.</param>
    /// <param name="options">The options for the call.</param>
    /// <returns>The response received from the server.</returns>
    public virtual global::GuildResp CreateGuild(global::CreateGuildReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_CreateGuild, null, options, request);
    }
    /// <summary>
    /// Guild
    /// </summary>
    /// <param name="request">The request to send to the server.</param>
    /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
    /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
    /// <param name="cancellationToken">An optional token for canceling the call.</param>
    /// <returns>The call object.</returns>
    public virtual grpc::AsyncUnaryCall<global::GuildResp> CreateGuildAsync(global::CreateGuildReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return CreateGuildAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    /// <summary>
    /// Guild
    /// </summary>
    /// <param name="request">The request to send to the server.</param>
    /// <param name="options">The options for the call.</param>
    /// <returns>The call object.</returns>
    public virtual grpc::AsyncUnaryCall<global::GuildResp> CreateGuildAsync(global::CreateGuildReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_CreateGuild, null, options, request);
    }
    public virtual global::GuildResp IncreaseGuildExp(global::IncreaseGuildExpReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return IncreaseGuildExp(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::GuildResp IncreaseGuildExp(global::IncreaseGuildExpReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_IncreaseGuildExp, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::GuildResp> IncreaseGuildExpAsync(global::IncreaseGuildExpReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return IncreaseGuildExpAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::GuildResp> IncreaseGuildExpAsync(global::IncreaseGuildExpReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_IncreaseGuildExp, null, options, request);
    }
    public virtual global::GuildResp AddGuildSkill(global::AddGuildSkillReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return AddGuildSkill(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::GuildResp AddGuildSkill(global::AddGuildSkillReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_AddGuildSkill, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::GuildResp> AddGuildSkillAsync(global::AddGuildSkillReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return AddGuildSkillAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::GuildResp> AddGuildSkillAsync(global::AddGuildSkillReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_AddGuildSkill, null, options, request);
    }
    public virtual global::GuildResp UpdateGuildLeader(global::UpdateGuildLeaderReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return UpdateGuildLeader(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::GuildResp UpdateGuildLeader(global::UpdateGuildLeaderReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_UpdateGuildLeader, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::GuildResp> UpdateGuildLeaderAsync(global::UpdateGuildLeaderReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return UpdateGuildLeaderAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::GuildResp> UpdateGuildLeaderAsync(global::UpdateGuildLeaderReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_UpdateGuildLeader, null, options, request);
    }
    public virtual global::GuildResp UpdateGuildMessage(global::UpdateGuildMessageReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return UpdateGuildMessage(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::GuildResp UpdateGuildMessage(global::UpdateGuildMessageReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_UpdateGuildMessage, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::GuildResp> UpdateGuildMessageAsync(global::UpdateGuildMessageReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return UpdateGuildMessageAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::GuildResp> UpdateGuildMessageAsync(global::UpdateGuildMessageReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_UpdateGuildMessage, null, options, request);
    }
    public virtual global::GuildResp UpdateGuildRole(global::UpdateGuildRoleReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return UpdateGuildRole(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::GuildResp UpdateGuildRole(global::UpdateGuildRoleReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_UpdateGuildRole, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::GuildResp> UpdateGuildRoleAsync(global::UpdateGuildRoleReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return UpdateGuildRoleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::GuildResp> UpdateGuildRoleAsync(global::UpdateGuildRoleReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_UpdateGuildRole, null, options, request);
    }
    public virtual global::GuildResp UpdateGuildMemberRole(global::UpdateGuildMemberRoleReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return UpdateGuildMemberRole(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::GuildResp UpdateGuildMemberRole(global::UpdateGuildMemberRoleReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_UpdateGuildMemberRole, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::GuildResp> UpdateGuildMemberRoleAsync(global::UpdateGuildMemberRoleReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return UpdateGuildMemberRoleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::GuildResp> UpdateGuildMemberRoleAsync(global::UpdateGuildMemberRoleReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_UpdateGuildMemberRole, null, options, request);
    }
    public virtual global::GuildResp UpdateCharacterGuild(global::UpdateCharacterGuildReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return UpdateCharacterGuild(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::GuildResp UpdateCharacterGuild(global::UpdateCharacterGuildReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_UpdateCharacterGuild, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::GuildResp> UpdateCharacterGuildAsync(global::UpdateCharacterGuildReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return UpdateCharacterGuildAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::GuildResp> UpdateCharacterGuildAsync(global::UpdateCharacterGuildReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_UpdateCharacterGuild, null, options, request);
    }
    public virtual global::VoidResp ClearCharacterGuild(global::ClearCharacterGuildReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return ClearCharacterGuild(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::VoidResp ClearCharacterGuild(global::ClearCharacterGuildReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_ClearCharacterGuild, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::VoidResp> ClearCharacterGuildAsync(global::ClearCharacterGuildReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return ClearCharacterGuildAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::VoidResp> ClearCharacterGuildAsync(global::ClearCharacterGuildReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_ClearCharacterGuild, null, options, request);
    }
    public virtual global::VoidResp DeleteGuild(global::DeleteGuildReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return DeleteGuild(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::VoidResp DeleteGuild(global::DeleteGuildReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_DeleteGuild, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::VoidResp> DeleteGuildAsync(global::DeleteGuildReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return DeleteGuildAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::VoidResp> DeleteGuildAsync(global::DeleteGuildReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_DeleteGuild, null, options, request);
    }
    public virtual global::FindGuildNameResp FindGuildName(global::FindGuildNameReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return FindGuildName(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::FindGuildNameResp FindGuildName(global::FindGuildNameReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_FindGuildName, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::FindGuildNameResp> FindGuildNameAsync(global::FindGuildNameReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return FindGuildNameAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::FindGuildNameResp> FindGuildNameAsync(global::FindGuildNameReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_FindGuildName, null, options, request);
    }
    public virtual global::GuildResp ReadGuild(global::ReadGuildReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return ReadGuild(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::GuildResp ReadGuild(global::ReadGuildReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_ReadGuild, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::GuildResp> ReadGuildAsync(global::ReadGuildReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return ReadGuildAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::GuildResp> ReadGuildAsync(global::ReadGuildReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_ReadGuild, null, options, request);
    }
    public virtual global::GuildGoldResp GetGuildGold(global::GetGuildGoldReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return GetGuildGold(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::GuildGoldResp GetGuildGold(global::GetGuildGoldReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_GetGuildGold, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::GuildGoldResp> GetGuildGoldAsync(global::GetGuildGoldReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return GetGuildGoldAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::GuildGoldResp> GetGuildGoldAsync(global::GetGuildGoldReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_GetGuildGold, null, options, request);
    }
    public virtual global::GuildGoldResp ChangeGuildGold(global::ChangeGuildGoldReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return ChangeGuildGold(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::GuildGoldResp ChangeGuildGold(global::ChangeGuildGoldReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_ChangeGuildGold, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::GuildGoldResp> ChangeGuildGoldAsync(global::ChangeGuildGoldReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return ChangeGuildGoldAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::GuildGoldResp> ChangeGuildGoldAsync(global::ChangeGuildGoldReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_ChangeGuildGold, null, options, request);
    }
    /// <summary>
    /// Storage
    /// </summary>
    /// <param name="request">The request to send to the server.</param>
    /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
    /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
    /// <param name="cancellationToken">An optional token for canceling the call.</param>
    /// <returns>The response received from the server.</returns>
    public virtual global::ReadStorageItemsResp ReadStorageItems(global::ReadStorageItemsReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return ReadStorageItems(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    /// <summary>
    /// Storage
    /// </summary>
    /// <param name="request">The request to send to the server.</param>
    /// <param name="options">The options for the call.</param>
    /// <returns>The response received from the server.</returns>
    public virtual global::ReadStorageItemsResp ReadStorageItems(global::ReadStorageItemsReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_ReadStorageItems, null, options, request);
    }
    /// <summary>
    /// Storage
    /// </summary>
    /// <param name="request">The request to send to the server.</param>
    /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
    /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
    /// <param name="cancellationToken">An optional token for canceling the call.</param>
    /// <returns>The call object.</returns>
    public virtual grpc::AsyncUnaryCall<global::ReadStorageItemsResp> ReadStorageItemsAsync(global::ReadStorageItemsReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return ReadStorageItemsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    /// <summary>
    /// Storage
    /// </summary>
    /// <param name="request">The request to send to the server.</param>
    /// <param name="options">The options for the call.</param>
    /// <returns>The call object.</returns>
    public virtual grpc::AsyncUnaryCall<global::ReadStorageItemsResp> ReadStorageItemsAsync(global::ReadStorageItemsReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_ReadStorageItems, null, options, request);
    }
    public virtual global::MoveItemToStorageResp MoveItemToStorage(global::MoveItemToStorageReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return MoveItemToStorage(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::MoveItemToStorageResp MoveItemToStorage(global::MoveItemToStorageReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_MoveItemToStorage, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::MoveItemToStorageResp> MoveItemToStorageAsync(global::MoveItemToStorageReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return MoveItemToStorageAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::MoveItemToStorageResp> MoveItemToStorageAsync(global::MoveItemToStorageReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_MoveItemToStorage, null, options, request);
    }
    public virtual global::MoveItemFromStorageResp MoveItemFromStorage(global::MoveItemFromStorageReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return MoveItemFromStorage(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::MoveItemFromStorageResp MoveItemFromStorage(global::MoveItemFromStorageReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_MoveItemFromStorage, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::MoveItemFromStorageResp> MoveItemFromStorageAsync(global::MoveItemFromStorageReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return MoveItemFromStorageAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::MoveItemFromStorageResp> MoveItemFromStorageAsync(global::MoveItemFromStorageReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_MoveItemFromStorage, null, options, request);
    }
    public virtual global::SwapOrMergeStorageItemResp SwapOrMergeStorageItem(global::SwapOrMergeStorageItemReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return SwapOrMergeStorageItem(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::SwapOrMergeStorageItemResp SwapOrMergeStorageItem(global::SwapOrMergeStorageItemReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_SwapOrMergeStorageItem, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::SwapOrMergeStorageItemResp> SwapOrMergeStorageItemAsync(global::SwapOrMergeStorageItemReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return SwapOrMergeStorageItemAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::SwapOrMergeStorageItemResp> SwapOrMergeStorageItemAsync(global::SwapOrMergeStorageItemReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_SwapOrMergeStorageItem, null, options, request);
    }
    public virtual global::IncreaseStorageItemsResp IncreaseStorageItems(global::IncreaseStorageItemsReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return IncreaseStorageItems(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::IncreaseStorageItemsResp IncreaseStorageItems(global::IncreaseStorageItemsReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_IncreaseStorageItems, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::IncreaseStorageItemsResp> IncreaseStorageItemsAsync(global::IncreaseStorageItemsReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return IncreaseStorageItemsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::IncreaseStorageItemsResp> IncreaseStorageItemsAsync(global::IncreaseStorageItemsReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_IncreaseStorageItems, null, options, request);
    }
    public virtual global::DecreaseStorageItemsResp DecreaseStorageItems(global::DecreaseStorageItemsReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return DecreaseStorageItems(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::DecreaseStorageItemsResp DecreaseStorageItems(global::DecreaseStorageItemsReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_DecreaseStorageItems, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::DecreaseStorageItemsResp> DecreaseStorageItemsAsync(global::DecreaseStorageItemsReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return DecreaseStorageItemsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::DecreaseStorageItemsResp> DecreaseStorageItemsAsync(global::DecreaseStorageItemsReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_DecreaseStorageItems, null, options, request);
    }
    /// <summary>
    /// Mail
    /// </summary>
    /// <param name="request">The request to send to the server.</param>
    /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
    /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
    /// <param name="cancellationToken">An optional token for canceling the call.</param>
    /// <returns>The response received from the server.</returns>
    public virtual global::MailListResp MailList(global::MailListReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return MailList(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    /// <summary>
    /// Mail
    /// </summary>
    /// <param name="request">The request to send to the server.</param>
    /// <param name="options">The options for the call.</param>
    /// <returns>The response received from the server.</returns>
    public virtual global::MailListResp MailList(global::MailListReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_MailList, null, options, request);
    }
    /// <summary>
    /// Mail
    /// </summary>
    /// <param name="request">The request to send to the server.</param>
    /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
    /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
    /// <param name="cancellationToken">An optional token for canceling the call.</param>
    /// <returns>The call object.</returns>
    public virtual grpc::AsyncUnaryCall<global::MailListResp> MailListAsync(global::MailListReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return MailListAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    /// <summary>
    /// Mail
    /// </summary>
    /// <param name="request">The request to send to the server.</param>
    /// <param name="options">The options for the call.</param>
    /// <returns>The call object.</returns>
    public virtual grpc::AsyncUnaryCall<global::MailListResp> MailListAsync(global::MailListReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_MailList, null, options, request);
    }
    public virtual global::UpdateReadMailStateResp UpdateReadMailState(global::UpdateReadMailStateReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return UpdateReadMailState(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::UpdateReadMailStateResp UpdateReadMailState(global::UpdateReadMailStateReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_UpdateReadMailState, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::UpdateReadMailStateResp> UpdateReadMailStateAsync(global::UpdateReadMailStateReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return UpdateReadMailStateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::UpdateReadMailStateResp> UpdateReadMailStateAsync(global::UpdateReadMailStateReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_UpdateReadMailState, null, options, request);
    }
    public virtual global::UpdateClaimMailItemsStateResp UpdateClaimMailItemsState(global::UpdateClaimMailItemsStateReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return UpdateClaimMailItemsState(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::UpdateClaimMailItemsStateResp UpdateClaimMailItemsState(global::UpdateClaimMailItemsStateReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_UpdateClaimMailItemsState, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::UpdateClaimMailItemsStateResp> UpdateClaimMailItemsStateAsync(global::UpdateClaimMailItemsStateReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return UpdateClaimMailItemsStateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::UpdateClaimMailItemsStateResp> UpdateClaimMailItemsStateAsync(global::UpdateClaimMailItemsStateReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_UpdateClaimMailItemsState, null, options, request);
    }
    public virtual global::UpdateDeleteMailStateResp UpdateDeleteMailState(global::UpdateDeleteMailStateReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return UpdateDeleteMailState(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::UpdateDeleteMailStateResp UpdateDeleteMailState(global::UpdateDeleteMailStateReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_UpdateDeleteMailState, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::UpdateDeleteMailStateResp> UpdateDeleteMailStateAsync(global::UpdateDeleteMailStateReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return UpdateDeleteMailStateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::UpdateDeleteMailStateResp> UpdateDeleteMailStateAsync(global::UpdateDeleteMailStateReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_UpdateDeleteMailState, null, options, request);
    }
    public virtual global::SendMailResp SendMail(global::SendMailReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return SendMail(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::SendMailResp SendMail(global::SendMailReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_SendMail, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::SendMailResp> SendMailAsync(global::SendMailReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return SendMailAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::SendMailResp> SendMailAsync(global::SendMailReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_SendMail, null, options, request);
    }
    public virtual global::GetMailResp GetMail(global::GetMailReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return GetMail(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::GetMailResp GetMail(global::GetMailReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_GetMail, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::GetMailResp> GetMailAsync(global::GetMailReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return GetMailAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::GetMailResp> GetMailAsync(global::GetMailReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_GetMail, null, options, request);
    }
    /// <summary>
    /// Other
    /// </summary>
    /// <param name="request">The request to send to the server.</param>
    /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
    /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
    /// <param name="cancellationToken">An optional token for canceling the call.</param>
    /// <returns>The response received from the server.</returns>
    public virtual global::CustomResp Custom(global::CustomReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return Custom(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    /// <summary>
    /// Other
    /// </summary>
    /// <param name="request">The request to send to the server.</param>
    /// <param name="options">The options for the call.</param>
    /// <returns>The response received from the server.</returns>
    public virtual global::CustomResp Custom(global::CustomReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_Custom, null, options, request);
    }
    /// <summary>
    /// Other
    /// </summary>
    /// <param name="request">The request to send to the server.</param>
    /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
    /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
    /// <param name="cancellationToken">An optional token for canceling the call.</param>
    /// <returns>The call object.</returns>
    public virtual grpc::AsyncUnaryCall<global::CustomResp> CustomAsync(global::CustomReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return CustomAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    /// <summary>
    /// Other
    /// </summary>
    /// <param name="request">The request to send to the server.</param>
    /// <param name="options">The options for the call.</param>
    /// <returns>The call object.</returns>
    public virtual grpc::AsyncUnaryCall<global::CustomResp> CustomAsync(global::CustomReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_Custom, null, options, request);
    }
    /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
    protected override DatabaseServiceClient NewInstance(ClientBaseConfiguration configuration)
    {
      return new DatabaseServiceClient(configuration);
    }
  }

  /// <summary>Creates service definition that can be registered with a server</summary>
  /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
  public static grpc::ServerServiceDefinition BindService(DatabaseServiceBase serviceImpl)
  {
    return grpc::ServerServiceDefinition.CreateBuilder()
        .AddMethod(__Method_ValidateUserLogin, serviceImpl.ValidateUserLogin)
        .AddMethod(__Method_ValidateAccessToken, serviceImpl.ValidateAccessToken)
        .AddMethod(__Method_GetUserLevel, serviceImpl.GetUserLevel)
        .AddMethod(__Method_GetGold, serviceImpl.GetGold)
        .AddMethod(__Method_ChangeGold, serviceImpl.ChangeGold)
        .AddMethod(__Method_GetCash, serviceImpl.GetCash)
        .AddMethod(__Method_ChangeCash, serviceImpl.ChangeCash)
        .AddMethod(__Method_UpdateAccessToken, serviceImpl.UpdateAccessToken)
        .AddMethod(__Method_CreateUserLogin, serviceImpl.CreateUserLogin)
        .AddMethod(__Method_FindUsername, serviceImpl.FindUsername)
        .AddMethod(__Method_CreateCharacter, serviceImpl.CreateCharacter)
        .AddMethod(__Method_ReadCharacter, serviceImpl.ReadCharacter)
        .AddMethod(__Method_ReadCharacters, serviceImpl.ReadCharacters)
        .AddMethod(__Method_UpdateCharacter, serviceImpl.UpdateCharacter)
        .AddMethod(__Method_DeleteCharacter, serviceImpl.DeleteCharacter)
        .AddMethod(__Method_FindCharacterName, serviceImpl.FindCharacterName)
        .AddMethod(__Method_GetIdByCharacterName, serviceImpl.GetIdByCharacterName)
        .AddMethod(__Method_GetUserIdByCharacterName, serviceImpl.GetUserIdByCharacterName)
        .AddMethod(__Method_FindCharacters, serviceImpl.FindCharacters)
        .AddMethod(__Method_CreateFriend, serviceImpl.CreateFriend)
        .AddMethod(__Method_DeleteFriend, serviceImpl.DeleteFriend)
        .AddMethod(__Method_ReadFriends, serviceImpl.ReadFriends)
        .AddMethod(__Method_CreateBuilding, serviceImpl.CreateBuilding)
        .AddMethod(__Method_UpdateBuilding, serviceImpl.UpdateBuilding)
        .AddMethod(__Method_DeleteBuilding, serviceImpl.DeleteBuilding)
        .AddMethod(__Method_ReadBuildings, serviceImpl.ReadBuildings)
        .AddMethod(__Method_CreateParty, serviceImpl.CreateParty)
        .AddMethod(__Method_UpdateParty, serviceImpl.UpdateParty)
        .AddMethod(__Method_UpdatePartyLeader, serviceImpl.UpdatePartyLeader)
        .AddMethod(__Method_UpdateCharacterParty, serviceImpl.UpdateCharacterParty)
        .AddMethod(__Method_ClearCharacterParty, serviceImpl.ClearCharacterParty)
        .AddMethod(__Method_DeleteParty, serviceImpl.DeleteParty)
        .AddMethod(__Method_ReadParty, serviceImpl.ReadParty)
        .AddMethod(__Method_CreateGuild, serviceImpl.CreateGuild)
        .AddMethod(__Method_IncreaseGuildExp, serviceImpl.IncreaseGuildExp)
        .AddMethod(__Method_AddGuildSkill, serviceImpl.AddGuildSkill)
        .AddMethod(__Method_UpdateGuildLeader, serviceImpl.UpdateGuildLeader)
        .AddMethod(__Method_UpdateGuildMessage, serviceImpl.UpdateGuildMessage)
        .AddMethod(__Method_UpdateGuildRole, serviceImpl.UpdateGuildRole)
        .AddMethod(__Method_UpdateGuildMemberRole, serviceImpl.UpdateGuildMemberRole)
        .AddMethod(__Method_UpdateCharacterGuild, serviceImpl.UpdateCharacterGuild)
        .AddMethod(__Method_ClearCharacterGuild, serviceImpl.ClearCharacterGuild)
        .AddMethod(__Method_DeleteGuild, serviceImpl.DeleteGuild)
        .AddMethod(__Method_FindGuildName, serviceImpl.FindGuildName)
        .AddMethod(__Method_ReadGuild, serviceImpl.ReadGuild)
        .AddMethod(__Method_GetGuildGold, serviceImpl.GetGuildGold)
        .AddMethod(__Method_ChangeGuildGold, serviceImpl.ChangeGuildGold)
        .AddMethod(__Method_ReadStorageItems, serviceImpl.ReadStorageItems)
        .AddMethod(__Method_MoveItemToStorage, serviceImpl.MoveItemToStorage)
        .AddMethod(__Method_MoveItemFromStorage, serviceImpl.MoveItemFromStorage)
        .AddMethod(__Method_SwapOrMergeStorageItem, serviceImpl.SwapOrMergeStorageItem)
        .AddMethod(__Method_IncreaseStorageItems, serviceImpl.IncreaseStorageItems)
        .AddMethod(__Method_DecreaseStorageItems, serviceImpl.DecreaseStorageItems)
        .AddMethod(__Method_MailList, serviceImpl.MailList)
        .AddMethod(__Method_UpdateReadMailState, serviceImpl.UpdateReadMailState)
        .AddMethod(__Method_UpdateClaimMailItemsState, serviceImpl.UpdateClaimMailItemsState)
        .AddMethod(__Method_UpdateDeleteMailState, serviceImpl.UpdateDeleteMailState)
        .AddMethod(__Method_SendMail, serviceImpl.SendMail)
        .AddMethod(__Method_GetMail, serviceImpl.GetMail)
        .AddMethod(__Method_Custom, serviceImpl.Custom).Build();
  }

  /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
  /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
  /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
  /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
  public static void BindService(grpc::ServiceBinderBase serviceBinder, DatabaseServiceBase serviceImpl)
  {
    serviceBinder.AddMethod(__Method_ValidateUserLogin, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::ValidateUserLoginReq, global::ValidateUserLoginResp>(serviceImpl.ValidateUserLogin));
    serviceBinder.AddMethod(__Method_ValidateAccessToken, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::ValidateAccessTokenReq, global::ValidateAccessTokenResp>(serviceImpl.ValidateAccessToken));
    serviceBinder.AddMethod(__Method_GetUserLevel, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GetUserLevelReq, global::GetUserLevelResp>(serviceImpl.GetUserLevel));
    serviceBinder.AddMethod(__Method_GetGold, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GetGoldReq, global::GoldResp>(serviceImpl.GetGold));
    serviceBinder.AddMethod(__Method_ChangeGold, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::ChangeGoldReq, global::GoldResp>(serviceImpl.ChangeGold));
    serviceBinder.AddMethod(__Method_GetCash, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GetCashReq, global::CashResp>(serviceImpl.GetCash));
    serviceBinder.AddMethod(__Method_ChangeCash, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::ChangeCashReq, global::CashResp>(serviceImpl.ChangeCash));
    serviceBinder.AddMethod(__Method_UpdateAccessToken, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::UpdateAccessTokenReq, global::VoidResp>(serviceImpl.UpdateAccessToken));
    serviceBinder.AddMethod(__Method_CreateUserLogin, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::CreateUserLoginReq, global::VoidResp>(serviceImpl.CreateUserLogin));
    serviceBinder.AddMethod(__Method_FindUsername, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::FindUsernameReq, global::FindUsernameResp>(serviceImpl.FindUsername));
    serviceBinder.AddMethod(__Method_CreateCharacter, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::CreateCharacterReq, global::CharacterResp>(serviceImpl.CreateCharacter));
    serviceBinder.AddMethod(__Method_ReadCharacter, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::ReadCharacterReq, global::CharacterResp>(serviceImpl.ReadCharacter));
    serviceBinder.AddMethod(__Method_ReadCharacters, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::ReadCharactersReq, global::CharactersResp>(serviceImpl.ReadCharacters));
    serviceBinder.AddMethod(__Method_UpdateCharacter, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::UpdateCharacterReq, global::CharacterResp>(serviceImpl.UpdateCharacter));
    serviceBinder.AddMethod(__Method_DeleteCharacter, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::DeleteCharacterReq, global::VoidResp>(serviceImpl.DeleteCharacter));
    serviceBinder.AddMethod(__Method_FindCharacterName, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::FindCharacterNameReq, global::FindCharacterNameResp>(serviceImpl.FindCharacterName));
    serviceBinder.AddMethod(__Method_GetIdByCharacterName, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GetIdByCharacterNameReq, global::GetIdByCharacterNameResp>(serviceImpl.GetIdByCharacterName));
    serviceBinder.AddMethod(__Method_GetUserIdByCharacterName, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GetUserIdByCharacterNameReq, global::GetUserIdByCharacterNameResp>(serviceImpl.GetUserIdByCharacterName));
    serviceBinder.AddMethod(__Method_FindCharacters, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::FindCharactersReq, global::FindCharactersResp>(serviceImpl.FindCharacters));
    serviceBinder.AddMethod(__Method_CreateFriend, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::CreateFriendReq, global::ReadFriendsResp>(serviceImpl.CreateFriend));
    serviceBinder.AddMethod(__Method_DeleteFriend, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::DeleteFriendReq, global::ReadFriendsResp>(serviceImpl.DeleteFriend));
    serviceBinder.AddMethod(__Method_ReadFriends, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::ReadFriendsReq, global::ReadFriendsResp>(serviceImpl.ReadFriends));
    serviceBinder.AddMethod(__Method_CreateBuilding, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::CreateBuildingReq, global::BuildingResp>(serviceImpl.CreateBuilding));
    serviceBinder.AddMethod(__Method_UpdateBuilding, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::UpdateBuildingReq, global::BuildingResp>(serviceImpl.UpdateBuilding));
    serviceBinder.AddMethod(__Method_DeleteBuilding, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::DeleteBuildingReq, global::VoidResp>(serviceImpl.DeleteBuilding));
    serviceBinder.AddMethod(__Method_ReadBuildings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::ReadBuildingsReq, global::BuildingsResp>(serviceImpl.ReadBuildings));
    serviceBinder.AddMethod(__Method_CreateParty, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::CreatePartyReq, global::PartyResp>(serviceImpl.CreateParty));
    serviceBinder.AddMethod(__Method_UpdateParty, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::UpdatePartyReq, global::PartyResp>(serviceImpl.UpdateParty));
    serviceBinder.AddMethod(__Method_UpdatePartyLeader, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::UpdatePartyLeaderReq, global::PartyResp>(serviceImpl.UpdatePartyLeader));
    serviceBinder.AddMethod(__Method_UpdateCharacterParty, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::UpdateCharacterPartyReq, global::PartyResp>(serviceImpl.UpdateCharacterParty));
    serviceBinder.AddMethod(__Method_ClearCharacterParty, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::ClearCharacterPartyReq, global::VoidResp>(serviceImpl.ClearCharacterParty));
    serviceBinder.AddMethod(__Method_DeleteParty, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::DeletePartyReq, global::VoidResp>(serviceImpl.DeleteParty));
    serviceBinder.AddMethod(__Method_ReadParty, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::ReadPartyReq, global::PartyResp>(serviceImpl.ReadParty));
    serviceBinder.AddMethod(__Method_CreateGuild, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::CreateGuildReq, global::GuildResp>(serviceImpl.CreateGuild));
    serviceBinder.AddMethod(__Method_IncreaseGuildExp, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::IncreaseGuildExpReq, global::GuildResp>(serviceImpl.IncreaseGuildExp));
    serviceBinder.AddMethod(__Method_AddGuildSkill, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::AddGuildSkillReq, global::GuildResp>(serviceImpl.AddGuildSkill));
    serviceBinder.AddMethod(__Method_UpdateGuildLeader, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::UpdateGuildLeaderReq, global::GuildResp>(serviceImpl.UpdateGuildLeader));
    serviceBinder.AddMethod(__Method_UpdateGuildMessage, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::UpdateGuildMessageReq, global::GuildResp>(serviceImpl.UpdateGuildMessage));
    serviceBinder.AddMethod(__Method_UpdateGuildRole, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::UpdateGuildRoleReq, global::GuildResp>(serviceImpl.UpdateGuildRole));
    serviceBinder.AddMethod(__Method_UpdateGuildMemberRole, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::UpdateGuildMemberRoleReq, global::GuildResp>(serviceImpl.UpdateGuildMemberRole));
    serviceBinder.AddMethod(__Method_UpdateCharacterGuild, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::UpdateCharacterGuildReq, global::GuildResp>(serviceImpl.UpdateCharacterGuild));
    serviceBinder.AddMethod(__Method_ClearCharacterGuild, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::ClearCharacterGuildReq, global::VoidResp>(serviceImpl.ClearCharacterGuild));
    serviceBinder.AddMethod(__Method_DeleteGuild, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::DeleteGuildReq, global::VoidResp>(serviceImpl.DeleteGuild));
    serviceBinder.AddMethod(__Method_FindGuildName, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::FindGuildNameReq, global::FindGuildNameResp>(serviceImpl.FindGuildName));
    serviceBinder.AddMethod(__Method_ReadGuild, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::ReadGuildReq, global::GuildResp>(serviceImpl.ReadGuild));
    serviceBinder.AddMethod(__Method_GetGuildGold, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GetGuildGoldReq, global::GuildGoldResp>(serviceImpl.GetGuildGold));
    serviceBinder.AddMethod(__Method_ChangeGuildGold, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::ChangeGuildGoldReq, global::GuildGoldResp>(serviceImpl.ChangeGuildGold));
    serviceBinder.AddMethod(__Method_ReadStorageItems, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::ReadStorageItemsReq, global::ReadStorageItemsResp>(serviceImpl.ReadStorageItems));
    serviceBinder.AddMethod(__Method_MoveItemToStorage, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::MoveItemToStorageReq, global::MoveItemToStorageResp>(serviceImpl.MoveItemToStorage));
    serviceBinder.AddMethod(__Method_MoveItemFromStorage, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::MoveItemFromStorageReq, global::MoveItemFromStorageResp>(serviceImpl.MoveItemFromStorage));
    serviceBinder.AddMethod(__Method_SwapOrMergeStorageItem, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SwapOrMergeStorageItemReq, global::SwapOrMergeStorageItemResp>(serviceImpl.SwapOrMergeStorageItem));
    serviceBinder.AddMethod(__Method_IncreaseStorageItems, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::IncreaseStorageItemsReq, global::IncreaseStorageItemsResp>(serviceImpl.IncreaseStorageItems));
    serviceBinder.AddMethod(__Method_DecreaseStorageItems, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::DecreaseStorageItemsReq, global::DecreaseStorageItemsResp>(serviceImpl.DecreaseStorageItems));
    serviceBinder.AddMethod(__Method_MailList, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::MailListReq, global::MailListResp>(serviceImpl.MailList));
    serviceBinder.AddMethod(__Method_UpdateReadMailState, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::UpdateReadMailStateReq, global::UpdateReadMailStateResp>(serviceImpl.UpdateReadMailState));
    serviceBinder.AddMethod(__Method_UpdateClaimMailItemsState, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::UpdateClaimMailItemsStateReq, global::UpdateClaimMailItemsStateResp>(serviceImpl.UpdateClaimMailItemsState));
    serviceBinder.AddMethod(__Method_UpdateDeleteMailState, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::UpdateDeleteMailStateReq, global::UpdateDeleteMailStateResp>(serviceImpl.UpdateDeleteMailState));
    serviceBinder.AddMethod(__Method_SendMail, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SendMailReq, global::SendMailResp>(serviceImpl.SendMail));
    serviceBinder.AddMethod(__Method_GetMail, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GetMailReq, global::GetMailResp>(serviceImpl.GetMail));
    serviceBinder.AddMethod(__Method_Custom, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::CustomReq, global::CustomResp>(serviceImpl.Custom));
  }

}
#endregion
