// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: database_service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from database_service.proto</summary>
public static partial class DatabaseServiceReflection {

  #region Descriptor
  /// <summary>File descriptor for database_service.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static DatabaseServiceReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChZkYXRhYmFzZV9zZXJ2aWNlLnByb3RvIgoKCFZvaWRSZXNwIhgKCEdvbGRS",
          "ZXNwEgwKBGdvbGQYASABKAUiGAoIQ2FzaFJlc3ASDAoEY2FzaBgBIAEoBSIj",
          "Cg1HdWlsZEdvbGRSZXNwEhIKCmd1aWxkX2dvbGQYASABKAUiOgoUVmFsaWRh",
          "dGVVc2VyTG9naW5SZXESEAoIdXNlcm5hbWUYASABKAkSEAoIcGFzc3dvcmQY",
          "AiABKAkiKAoVVmFsaWRhdGVVc2VyTG9naW5SZXNwEg8KB3VzZXJfaWQYASAB",
          "KAkiPwoWVmFsaWRhdGVBY2Nlc3NUb2tlblJlcRIPCgd1c2VyX2lkGAEgASgJ",
          "EhQKDGFjY2Vzc190b2tlbhgCIAEoCSIqChdWYWxpZGF0ZUFjY2Vzc1Rva2Vu",
          "UmVzcBIPCgdpc19wYXNzGAEgASgIIiIKD0dldFVzZXJMZXZlbFJlcRIPCgd1",
          "c2VyX2lkGAEgASgJIiYKEEdldFVzZXJMZXZlbFJlc3ASEgoKdXNlcl9sZXZl",
          "bBgBIAEoDSIdCgpHZXRHb2xkUmVxEg8KB3VzZXJfaWQYASABKAkiMgoPSW5j",
          "cmVhc2VHb2xkUmVxEg8KB3VzZXJfaWQYASABKAkSDgoGYW1vdW50GAIgASgF",
          "IjIKD0RlY3JlYXNlR29sZFJlcRIPCgd1c2VyX2lkGAEgASgJEg4KBmFtb3Vu",
          "dBgCIAEoBSIdCgpHZXRDYXNoUmVxEg8KB3VzZXJfaWQYASABKAkiMgoPSW5j",
          "cmVhc2VDYXNoUmVxEg8KB3VzZXJfaWQYASABKAkSDgoGYW1vdW50GAIgASgF",
          "IjIKD0RlY3JlYXNlQ2FzaFJlcRIPCgd1c2VyX2lkGAEgASgJEg4KBmFtb3Vu",
          "dBgCIAEoBSI9ChRVcGRhdGVBY2Nlc3NUb2tlblJlcRIPCgd1c2VyX2lkGAEg",
          "ASgJEhQKDGFjY2Vzc190b2tlbhgCIAEoCSI4ChJDcmVhdGVVc2VyTG9naW5S",
          "ZXESEAoIdXNlcm5hbWUYASABKAkSEAoIcGFzc3dvcmQYAiABKAkiIwoPRmlu",
          "ZFVzZXJuYW1lUmVxEhAKCHVzZXJuYW1lGAEgASgJIigKEEZpbmRVc2VybmFt",
          "ZVJlc3ASFAoMZm91bmRfYW1vdW50GAEgASgDIj0KEkNyZWF0ZUNoYXJhY3Rl",
          "clJlcRIPCgd1c2VyX2lkGAEgASgJEhYKDmNoYXJhY3Rlcl9kYXRhGAIgASgM",
          "IqsCChBSZWFkQ2hhcmFjdGVyUmVxEg8KB3VzZXJfaWQYASABKAkSFAoMY2hh",
          "cmFjdGVyX2lkGAIgASgJEhoKEndpdGhfZXF1aXBfd2VhcG9ucxgDIAEoCBIX",
          "Cg93aXRoX2F0dHJpYnV0ZXMYBCABKAgSEwoLd2l0aF9za2lsbHMYBSABKAgS",
          "GQoRd2l0aF9za2lsbF91c2FnZXMYBiABKAgSEgoKd2l0aF9idWZmcxgHIAEo",
          "CBIYChB3aXRoX2VxdWlwX2l0ZW1zGAggASgIEhwKFHdpdGhfbm9uX2VxdWlw",
          "X2l0ZW1zGAkgASgIEhQKDHdpdGhfc3VtbW9ucxgKIAEoCBIUCgx3aXRoX2hv",
          "dGtleXMYCyABKAgSEwoLd2l0aF9xdWVzdHMYDCABKAgiKwoRUmVhZENoYXJh",
          "Y3RlclJlc3ASFgoOY2hhcmFjdGVyX2RhdGEYASABKAwiJAoRUmVhZENoYXJh",
          "Y3RlcnNSZXESDwoHdXNlcl9pZBgBIAEoCSIsChJSZWFkQ2hhcmFjdGVyc1Jl",
          "c3ASFgoOY2hhcmFjdGVyX2RhdGEYASADKAwiLAoSVXBkYXRlQ2hhcmFjdGVy",
          "UmVxEhYKDmNoYXJhY3Rlcl9kYXRhGAEgASgMIjsKEkRlbGV0ZUNoYXJhY3Rl",
          "clJlcRIPCgd1c2VyX2lkGAEgASgJEhQKDGNoYXJhY3Rlcl9pZBgCIAEoCSIu",
          "ChRGaW5kQ2hhcmFjdGVyTmFtZVJlcRIWCg5jaGFyYWN0ZXJfbmFtZRgBIAEo",
          "CSItChVGaW5kQ2hhcmFjdGVyTmFtZVJlc3ASFAoMZm91bmRfYW1vdW50GAEg",
          "ASgDIisKEUZpbmRDaGFyYWN0ZXJzUmVxEhYKDmNoYXJhY3Rlcl9uYW1lGAEg",
          "ASgJIjMKEkZpbmRDaGFyYWN0ZXJzUmVzcBIdChVzb2NpYWxfY2hhcmFjdGVy",
          "X2RhdGEYASADKAwiQQoPQ3JlYXRlRnJpZW5kUmVxEhYKDmNoYXJhY3Rlcl9p",
          "ZF8xGAEgASgJEhYKDmNoYXJhY3Rlcl9pZF8yGAIgASgJIkEKD0RlbGV0ZUZy",
          "aWVuZFJlcRIWCg5jaGFyYWN0ZXJfaWRfMRgBIAEoCRIWCg5jaGFyYWN0ZXJf",
          "aWRfMhgCIAEoCSImCg5SZWFkRnJpZW5kc1JlcRIUCgxjaGFyYWN0ZXJfaWQY",
          "ASABKAkiMAoPUmVhZEZyaWVuZHNSZXNwEh0KFXNvY2lhbF9jaGFyYWN0ZXJf",
          "ZGF0YRgBIAMoDCI8ChFDcmVhdGVCdWlsZGluZ1JlcRIQCghtYXBfbmFtZRgB",
          "IAEoCRIVCg1idWlsZGluZ19kYXRhGAIgASgMIjwKEVVwZGF0ZUJ1aWxkaW5n",
          "UmVxEhAKCG1hcF9uYW1lGAEgASgJEhUKDWJ1aWxkaW5nX2RhdGEYAiABKAwi",
          "OgoRRGVsZXRlQnVpbGRpbmdSZXESEAoIbWFwX25hbWUYASABKAkSEwoLYnVp",
          "bGRpbmdfaWQYAiABKAkiJAoQUmVhZEJ1aWxkaW5nc1JlcRIQCghtYXBfbmFt",
          "ZRgBIAEoCSIqChFSZWFkQnVpbGRpbmdzUmVzcBIVCg1idWlsZGluZ19kYXRh",
          "GAEgAygMIlQKDkNyZWF0ZVBhcnR5UmVxEhEKCXNoYXJlX2V4cBgBIAEoCBIS",
          "CgpzaGFyZV9pdGVtGAIgASgIEhsKE2xlYWRlcl9jaGFyYWN0ZXJfaWQYAyAB",
          "KAkiIwoPQ3JlYXRlUGFydHlSZXNwEhAKCHBhcnR5X2lkGAEgASgFIkkKDlVw",
          "ZGF0ZVBhcnR5UmVxEhAKCHBhcnR5X2lkGAEgASgFEhEKCXNoYXJlX2V4cBgC",
          "IAEoCBISCgpzaGFyZV9pdGVtGAMgASgIIkUKFFVwZGF0ZVBhcnR5TGVhZGVy",
          "UmVxEhAKCHBhcnR5X2lkGAEgASgFEhsKE2xlYWRlcl9jaGFyYWN0ZXJfaWQY",
          "AiABKAkiIgoORGVsZXRlUGFydHlSZXESEAoIcGFydHlfaWQYASABKAUiQQoX",
          "VXBkYXRlQ2hhcmFjdGVyUGFydHlSZXESFAoMY2hhcmFjdGVyX2lkGAEgASgJ",
          "EhAKCHBhcnR5X2lkGAIgASgFIiAKDFJlYWRQYXJ0eVJlcRIQCghwYXJ0eV9p",
          "ZBgBIAEoBSIhCg1SZWFkUGFydHlSZXNwEhAKCHBhcnR5X2lkGAEgASgMIkEK",
          "DkNyZWF0ZUd1aWxkUmVxEhIKCmd1aWxkX25hbWUYASABKAkSGwoTbGVhZGVy",
          "X2NoYXJhY3Rlcl9pZBgCIAEoCSIjCg9DcmVhdGVHdWlsZFJlc3ASEAoIZ3Vp",
          "bGRfaWQYASABKAUiTwoTSW5jcmVhc2VHdWlsZEV4cFJlcRIQCghndWlsZF9p",
          "ZBgBIAEoBRIUCgxpbmNyZWFzZV9leHAYAiABKAUSEAoIZXhwX3RyZWUYAyAD",
          "KAUicAoUSW5jcmVhc2VHdWlsZEV4cFJlc3ASEgoKaXNfc3VjY2VzcxgBIAEo",
          "CBIUCgxyZXN1bHRfbGV2ZWwYAiABKAUSEgoKcmVzdWx0X2V4cBgDIAEoBRIa",
          "ChJyZXN1bHRfc2tpbGxfcG9pbnQYBCABKAUiRQoUVXBkYXRlR3VpbGRMZWFk",
          "ZXJSZXESEAoIZ3VpbGRfaWQYASABKAUSGwoTbGVhZGVyX2NoYXJhY3Rlcl9p",
          "ZBgCIAEoCSJAChVVcGRhdGVHdWlsZE1lc3NhZ2VSZXESEAoIZ3VpbGRfaWQY",
          "ASABKAUSFQoNZ3VpbGRfbWVzc2FnZRgCIAEoCSKRAQoSVXBkYXRlR3VpbGRS",
          "b2xlUmVxEhAKCGd1aWxkX2lkGAEgASgFEhIKCmd1aWxkX3JvbGUYAiABKA0S",
          "EQoJcm9sZV9uYW1lGAMgASgJEhIKCmNhbl9pbnZpdGUYBCABKAgSEAoIY2Fu",
          "X2tpY2sYBSABKAgSHAoUc2hhcmVfZXhwX3BlcmNlbnRhZ2UYBiABKA0iSwoY",
          "VXBkYXRlR3VpbGRNZW1iZXJSb2xlUmVxEhsKE21lbWJlcl9jaGFyYWN0ZXJf",
          "aWQYASABKAkSEgoKZ3VpbGRfcm9sZRgCIAEoDSJhChhVcGRhdGVHdWlsZFNr",
          "aWxsTGV2ZWxSZXESEAoIZ3VpbGRfaWQYASABKAUSDwoHZGF0YV9pZBgCIAEo",
          "BRINCgVsZXZlbBgDIAEoBRITCgtza2lsbF9wb2ludBgEIAEoBSJVChdVcGRh",
          "dGVDaGFyYWN0ZXJHdWlsZFJlcRIUCgxjaGFyYWN0ZXJfaWQYASABKAkSEAoI",
          "Z3VpbGRfaWQYAiABKAUSEgoKZ3VpbGRfcm9sZRgDIAEoDSIiCg5EZWxldGVH",
          "dWlsZFJlcRIQCghndWlsZF9pZBgBIAEoBSImChBGaW5kR3VpbGROYW1lUmVx",
          "EhIKCmd1aWxkX25hbWUYASABKAkiKQoRRmluZEd1aWxkTmFtZVJlc3ASFAoM",
          "Zm91bmRfYW1vdW50GAEgASgDIj0KDFJlYWRHdWlsZFJlcRIQCghndWlsZF9p",
          "ZBgBIAEoBRIbChNkZWZhdWx0X2d1aWxkX3JvbGVzGAIgAygMIiMKDVJlYWRH",
          "dWlsZFJlc3ASEgoKZ3VpbGRfZGF0YRgBIAEoDCIjCg9HZXRHdWlsZEdvbGRS",
          "ZXESEAoIZ3VpbGRfaWQYASABKAUiOAoUSW5jcmVhc2VHdWlsZEdvbGRSZXES",
          "EAoIZ3VpbGRfaWQYASABKAUSDgoGYW1vdW50GAIgASgFIjgKFERlY3JlYXNl",
          "R3VpbGRHb2xkUmVxEhAKCGd1aWxkX2lkGAEgASgFEg4KBmFtb3VudBgCIAEo",
          "BSJ3ChVVcGRhdGVTdG9yYWdlSXRlbXNSZXESIwoMc3RvcmFnZV90eXBlGAEg",
          "ASgOMg0uRVN0b3JhZ2VUeXBlEhgKEHN0b3JhZ2Vfb3duZXJfaWQYAiABKAkS",
          "HwoXc3RvcmFnZV9jaGFyYWN0ZXJfaXRlbXMYAyADKAwiVAoTUmVhZFN0b3Jh",
          "Z2VJdGVtc1JlcRIjCgxzdG9yYWdlX3R5cGUYASABKA4yDS5FU3RvcmFnZVR5",
          "cGUSGAoQc3RvcmFnZV9vd25lcl9pZBgCIAEoCSI3ChRSZWFkU3RvcmFnZUl0",
          "ZW1zUmVzcBIfChdzdG9yYWdlX2NoYXJhY3Rlcl9pdGVtcxgBIAMoDCo9CgxF",
          "U3RvcmFnZVR5cGUSCAoETk9ORRAAEgoKBlBMQVlFUhABEgkKBUdVSUxEEAIS",
          "DAoIQlVJTERJTkcQAzL7EwoPRGF0YWJhc2VTZXJ2aWNlEkIKEVZhbGlkYXRl",
          "VXNlckxvZ2luEhUuVmFsaWRhdGVVc2VyTG9naW5SZXEaFi5WYWxpZGF0ZVVz",
          "ZXJMb2dpblJlc3ASSAoTVmFsaWRhdGVBY2Nlc3NUb2tlbhIXLlZhbGlkYXRl",
          "QWNjZXNzVG9rZW5SZXEaGC5WYWxpZGF0ZUFjY2Vzc1Rva2VuUmVzcBIzCgxH",
          "ZXRVc2VyTGV2ZWwSEC5HZXRVc2VyTGV2ZWxSZXEaES5HZXRVc2VyTGV2ZWxS",
          "ZXNwEiEKB0dldEdvbGQSCy5HZXRHb2xkUmVxGgkuR29sZFJlc3ASKwoMSW5j",
          "cmVhc2VHb2xkEhAuSW5jcmVhc2VHb2xkUmVxGgkuR29sZFJlc3ASKwoMRGVj",
          "cmVhc2VHb2xkEhAuRGVjcmVhc2VHb2xkUmVxGgkuR29sZFJlc3ASIQoHR2V0",
          "Q2FzaBILLkdldENhc2hSZXEaCS5DYXNoUmVzcBIrCgxJbmNyZWFzZUNhc2gS",
          "EC5JbmNyZWFzZUNhc2hSZXEaCS5DYXNoUmVzcBIrCgxEZWNyZWFzZUNhc2gS",
          "EC5EZWNyZWFzZUNhc2hSZXEaCS5DYXNoUmVzcBI1ChFVcGRhdGVBY2Nlc3NU",
          "b2tlbhIVLlVwZGF0ZUFjY2Vzc1Rva2VuUmVxGgkuVm9pZFJlc3ASMQoPQ3Jl",
          "YXRlVXNlckxvZ2luEhMuQ3JlYXRlVXNlckxvZ2luUmVxGgkuVm9pZFJlc3AS",
          "MwoMRmluZFVzZXJuYW1lEhAuRmluZFVzZXJuYW1lUmVxGhEuRmluZFVzZXJu",
          "YW1lUmVzcBIxCg9DcmVhdGVDaGFyYWN0ZXISEy5DcmVhdGVDaGFyYWN0ZXJS",
          "ZXEaCS5Wb2lkUmVzcBI2Cg1SZWFkQ2hhcmFjdGVyEhEuUmVhZENoYXJhY3Rl",
          "clJlcRoSLlJlYWRDaGFyYWN0ZXJSZXNwEjkKDlJlYWRDaGFyYWN0ZXJzEhIu",
          "UmVhZENoYXJhY3RlcnNSZXEaEy5SZWFkQ2hhcmFjdGVyc1Jlc3ASMQoPVXBk",
          "YXRlQ2hhcmFjdGVyEhMuVXBkYXRlQ2hhcmFjdGVyUmVxGgkuVm9pZFJlc3AS",
          "MQoPRGVsZXRlQ2hhcmFjdGVyEhMuRGVsZXRlQ2hhcmFjdGVyUmVxGgkuVm9p",
          "ZFJlc3ASQgoRRmluZENoYXJhY3Rlck5hbWUSFS5GaW5kQ2hhcmFjdGVyTmFt",
          "ZVJlcRoWLkZpbmRDaGFyYWN0ZXJOYW1lUmVzcBI5Cg5GaW5kQ2hhcmFjdGVy",
          "cxISLkZpbmRDaGFyYWN0ZXJzUmVxGhMuRmluZENoYXJhY3RlcnNSZXNwEisK",
          "DENyZWF0ZUZyaWVuZBIQLkNyZWF0ZUZyaWVuZFJlcRoJLlZvaWRSZXNwEisK",
          "DERlbGV0ZUZyaWVuZBIQLkRlbGV0ZUZyaWVuZFJlcRoJLlZvaWRSZXNwEjAK",
          "C1JlYWRGcmllbmRzEg8uUmVhZEZyaWVuZHNSZXEaEC5SZWFkRnJpZW5kc1Jl",
          "c3ASLwoOQ3JlYXRlQnVpbGRpbmcSEi5DcmVhdGVCdWlsZGluZ1JlcRoJLlZv",
          "aWRSZXNwEi8KDlVwZGF0ZUJ1aWxkaW5nEhIuVXBkYXRlQnVpbGRpbmdSZXEa",
          "CS5Wb2lkUmVzcBIvCg5EZWxldGVCdWlsZGluZxISLkRlbGV0ZUJ1aWxkaW5n",
          "UmVxGgkuVm9pZFJlc3ASNgoNUmVhZEJ1aWxkaW5ncxIRLlJlYWRCdWlsZGlu",
          "Z3NSZXEaEi5SZWFkQnVpbGRpbmdzUmVzcBIwCgtDcmVhdGVQYXJ0eRIPLkNy",
          "ZWF0ZVBhcnR5UmVxGhAuQ3JlYXRlUGFydHlSZXNwEikKC1VwZGF0ZVBhcnR5",
          "Eg8uVXBkYXRlUGFydHlSZXEaCS5Wb2lkUmVzcBI1ChFVcGRhdGVQYXJ0eUxl",
          "YWRlchIVLlVwZGF0ZVBhcnR5TGVhZGVyUmVxGgkuVm9pZFJlc3ASKQoLRGVs",
          "ZXRlUGFydHkSDy5EZWxldGVQYXJ0eVJlcRoJLlZvaWRSZXNwEjsKFFVwZGF0",
          "ZUNoYXJhY3RlclBhcnR5EhguVXBkYXRlQ2hhcmFjdGVyUGFydHlSZXEaCS5W",
          "b2lkUmVzcBIqCglSZWFkUGFydHkSDS5SZWFkUGFydHlSZXEaDi5SZWFkUGFy",
          "dHlSZXNwEjAKC0NyZWF0ZUd1aWxkEg8uQ3JlYXRlR3VpbGRSZXEaEC5DcmVh",
          "dGVHdWlsZFJlc3ASPwoQSW5jcmVhc2VHdWlsZEV4cBIULkluY3JlYXNlR3Vp",
          "bGRFeHBSZXEaFS5JbmNyZWFzZUd1aWxkRXhwUmVzcBI1ChFVcGRhdGVHdWls",
          "ZExlYWRlchIVLlVwZGF0ZUd1aWxkTGVhZGVyUmVxGgkuVm9pZFJlc3ASNwoS",
          "VXBkYXRlR3VpbGRNZXNzYWdlEhYuVXBkYXRlR3VpbGRNZXNzYWdlUmVxGgku",
          "Vm9pZFJlc3ASMQoPVXBkYXRlR3VpbGRSb2xlEhMuVXBkYXRlR3VpbGRSb2xl",
          "UmVxGgkuVm9pZFJlc3ASPQoVVXBkYXRlR3VpbGRNZW1iZXJSb2xlEhkuVXBk",
          "YXRlR3VpbGRNZW1iZXJSb2xlUmVxGgkuVm9pZFJlc3ASPQoVVXBkYXRlR3Vp",
          "bGRTa2lsbExldmVsEhkuVXBkYXRlR3VpbGRTa2lsbExldmVsUmVxGgkuVm9p",
          "ZFJlc3ASOwoUVXBkYXRlQ2hhcmFjdGVyR3VpbGQSGC5VcGRhdGVDaGFyYWN0",
          "ZXJHdWlsZFJlcRoJLlZvaWRSZXNwEikKC0RlbGV0ZUd1aWxkEg8uRGVsZXRl",
          "R3VpbGRSZXEaCS5Wb2lkUmVzcBI2Cg1GaW5kR3VpbGROYW1lEhEuRmluZEd1",
          "aWxkTmFtZVJlcRoSLkZpbmRHdWlsZE5hbWVSZXNwEioKCVJlYWRHdWlsZBIN",
          "LlJlYWRHdWlsZFJlcRoOLlJlYWRHdWlsZFJlc3ASMAoMR2V0R3VpbGRHb2xk",
          "EhAuR2V0R3VpbGRHb2xkUmVxGg4uR3VpbGRHb2xkUmVzcBI6ChFJbmNyZWFz",
          "ZUd1aWxkR29sZBIVLkluY3JlYXNlR3VpbGRHb2xkUmVxGg4uR3VpbGRHb2xk",
          "UmVzcBI6ChFEZWNyZWFzZUd1aWxkR29sZBIVLkRlY3JlYXNlR3VpbGRHb2xk",
          "UmVxGg4uR3VpbGRHb2xkUmVzcBI3ChJVcGRhdGVTdG9yYWdlSXRlbXMSFi5V",
          "cGRhdGVTdG9yYWdlSXRlbXNSZXEaCS5Wb2lkUmVzcBI/ChBSZWFkU3RvcmFn",
          "ZUl0ZW1zEhQuUmVhZFN0b3JhZ2VJdGVtc1JlcRoVLlJlYWRTdG9yYWdlSXRl",
          "bXNSZXNwYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::EStorageType), }, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::VoidResp), global::VoidResp.Parser, null, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GoldResp), global::GoldResp.Parser, new[]{ "Gold" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CashResp), global::CashResp.Parser, new[]{ "Cash" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GuildGoldResp), global::GuildGoldResp.Parser, new[]{ "GuildGold" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ValidateUserLoginReq), global::ValidateUserLoginReq.Parser, new[]{ "Username", "Password" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ValidateUserLoginResp), global::ValidateUserLoginResp.Parser, new[]{ "UserId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ValidateAccessTokenReq), global::ValidateAccessTokenReq.Parser, new[]{ "UserId", "AccessToken" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ValidateAccessTokenResp), global::ValidateAccessTokenResp.Parser, new[]{ "IsPass" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetUserLevelReq), global::GetUserLevelReq.Parser, new[]{ "UserId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetUserLevelResp), global::GetUserLevelResp.Parser, new[]{ "UserLevel" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetGoldReq), global::GetGoldReq.Parser, new[]{ "UserId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::IncreaseGoldReq), global::IncreaseGoldReq.Parser, new[]{ "UserId", "Amount" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DecreaseGoldReq), global::DecreaseGoldReq.Parser, new[]{ "UserId", "Amount" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetCashReq), global::GetCashReq.Parser, new[]{ "UserId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::IncreaseCashReq), global::IncreaseCashReq.Parser, new[]{ "UserId", "Amount" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DecreaseCashReq), global::DecreaseCashReq.Parser, new[]{ "UserId", "Amount" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateAccessTokenReq), global::UpdateAccessTokenReq.Parser, new[]{ "UserId", "AccessToken" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CreateUserLoginReq), global::CreateUserLoginReq.Parser, new[]{ "Username", "Password" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::FindUsernameReq), global::FindUsernameReq.Parser, new[]{ "Username" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::FindUsernameResp), global::FindUsernameResp.Parser, new[]{ "FoundAmount" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CreateCharacterReq), global::CreateCharacterReq.Parser, new[]{ "UserId", "CharacterData" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ReadCharacterReq), global::ReadCharacterReq.Parser, new[]{ "UserId", "CharacterId", "WithEquipWeapons", "WithAttributes", "WithSkills", "WithSkillUsages", "WithBuffs", "WithEquipItems", "WithNonEquipItems", "WithSummons", "WithHotkeys", "WithQuests" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ReadCharacterResp), global::ReadCharacterResp.Parser, new[]{ "CharacterData" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ReadCharactersReq), global::ReadCharactersReq.Parser, new[]{ "UserId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ReadCharactersResp), global::ReadCharactersResp.Parser, new[]{ "CharacterData" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateCharacterReq), global::UpdateCharacterReq.Parser, new[]{ "CharacterData" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DeleteCharacterReq), global::DeleteCharacterReq.Parser, new[]{ "UserId", "CharacterId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::FindCharacterNameReq), global::FindCharacterNameReq.Parser, new[]{ "CharacterName" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::FindCharacterNameResp), global::FindCharacterNameResp.Parser, new[]{ "FoundAmount" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::FindCharactersReq), global::FindCharactersReq.Parser, new[]{ "CharacterName" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::FindCharactersResp), global::FindCharactersResp.Parser, new[]{ "SocialCharacterData" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CreateFriendReq), global::CreateFriendReq.Parser, new[]{ "CharacterId1", "CharacterId2" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DeleteFriendReq), global::DeleteFriendReq.Parser, new[]{ "CharacterId1", "CharacterId2" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ReadFriendsReq), global::ReadFriendsReq.Parser, new[]{ "CharacterId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ReadFriendsResp), global::ReadFriendsResp.Parser, new[]{ "SocialCharacterData" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CreateBuildingReq), global::CreateBuildingReq.Parser, new[]{ "MapName", "BuildingData" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateBuildingReq), global::UpdateBuildingReq.Parser, new[]{ "MapName", "BuildingData" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DeleteBuildingReq), global::DeleteBuildingReq.Parser, new[]{ "MapName", "BuildingId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ReadBuildingsReq), global::ReadBuildingsReq.Parser, new[]{ "MapName" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ReadBuildingsResp), global::ReadBuildingsResp.Parser, new[]{ "BuildingData" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CreatePartyReq), global::CreatePartyReq.Parser, new[]{ "ShareExp", "ShareItem", "LeaderCharacterId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CreatePartyResp), global::CreatePartyResp.Parser, new[]{ "PartyId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdatePartyReq), global::UpdatePartyReq.Parser, new[]{ "PartyId", "ShareExp", "ShareItem" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdatePartyLeaderReq), global::UpdatePartyLeaderReq.Parser, new[]{ "PartyId", "LeaderCharacterId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DeletePartyReq), global::DeletePartyReq.Parser, new[]{ "PartyId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateCharacterPartyReq), global::UpdateCharacterPartyReq.Parser, new[]{ "CharacterId", "PartyId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ReadPartyReq), global::ReadPartyReq.Parser, new[]{ "PartyId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ReadPartyResp), global::ReadPartyResp.Parser, new[]{ "PartyId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CreateGuildReq), global::CreateGuildReq.Parser, new[]{ "GuildName", "LeaderCharacterId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CreateGuildResp), global::CreateGuildResp.Parser, new[]{ "GuildId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::IncreaseGuildExpReq), global::IncreaseGuildExpReq.Parser, new[]{ "GuildId", "IncreaseExp", "ExpTree" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::IncreaseGuildExpResp), global::IncreaseGuildExpResp.Parser, new[]{ "IsSuccess", "ResultLevel", "ResultExp", "ResultSkillPoint" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateGuildLeaderReq), global::UpdateGuildLeaderReq.Parser, new[]{ "GuildId", "LeaderCharacterId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateGuildMessageReq), global::UpdateGuildMessageReq.Parser, new[]{ "GuildId", "GuildMessage" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateGuildRoleReq), global::UpdateGuildRoleReq.Parser, new[]{ "GuildId", "GuildRole", "RoleName", "CanInvite", "CanKick", "ShareExpPercentage" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateGuildMemberRoleReq), global::UpdateGuildMemberRoleReq.Parser, new[]{ "MemberCharacterId", "GuildRole" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateGuildSkillLevelReq), global::UpdateGuildSkillLevelReq.Parser, new[]{ "GuildId", "DataId", "Level", "SkillPoint" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateCharacterGuildReq), global::UpdateCharacterGuildReq.Parser, new[]{ "CharacterId", "GuildId", "GuildRole" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DeleteGuildReq), global::DeleteGuildReq.Parser, new[]{ "GuildId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::FindGuildNameReq), global::FindGuildNameReq.Parser, new[]{ "GuildName" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::FindGuildNameResp), global::FindGuildNameResp.Parser, new[]{ "FoundAmount" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ReadGuildReq), global::ReadGuildReq.Parser, new[]{ "GuildId", "DefaultGuildRoles" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ReadGuildResp), global::ReadGuildResp.Parser, new[]{ "GuildData" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetGuildGoldReq), global::GetGuildGoldReq.Parser, new[]{ "GuildId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::IncreaseGuildGoldReq), global::IncreaseGuildGoldReq.Parser, new[]{ "GuildId", "Amount" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DecreaseGuildGoldReq), global::DecreaseGuildGoldReq.Parser, new[]{ "GuildId", "Amount" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateStorageItemsReq), global::UpdateStorageItemsReq.Parser, new[]{ "StorageType", "StorageOwnerId", "StorageCharacterItems" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ReadStorageItemsReq), global::ReadStorageItemsReq.Parser, new[]{ "StorageType", "StorageOwnerId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ReadStorageItemsResp), global::ReadStorageItemsResp.Parser, new[]{ "StorageCharacterItems" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Enums
public enum EStorageType {
  [pbr::OriginalName("NONE")] None = 0,
  [pbr::OriginalName("PLAYER")] Player = 1,
  [pbr::OriginalName("GUILD")] Guild = 2,
  [pbr::OriginalName("BUILDING")] Building = 3,
}

#endregion

#region Messages
/// <summary>
/// Generic response
/// </summary>
public sealed partial class VoidResp : pb::IMessage<VoidResp> {
  private static readonly pb::MessageParser<VoidResp> _parser = new pb::MessageParser<VoidResp>(() => new VoidResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<VoidResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public VoidResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public VoidResp(VoidResp other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public VoidResp Clone() {
    return new VoidResp(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as VoidResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(VoidResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(VoidResp other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class GoldResp : pb::IMessage<GoldResp> {
  private static readonly pb::MessageParser<GoldResp> _parser = new pb::MessageParser<GoldResp>(() => new GoldResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GoldResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GoldResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GoldResp(GoldResp other) : this() {
    gold_ = other.gold_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GoldResp Clone() {
    return new GoldResp(this);
  }

  /// <summary>Field number for the "gold" field.</summary>
  public const int GoldFieldNumber = 1;
  private int gold_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Gold {
    get { return gold_; }
    set {
      gold_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GoldResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GoldResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Gold != other.Gold) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Gold != 0) hash ^= Gold.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Gold != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Gold);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Gold != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Gold);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GoldResp other) {
    if (other == null) {
      return;
    }
    if (other.Gold != 0) {
      Gold = other.Gold;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Gold = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class CashResp : pb::IMessage<CashResp> {
  private static readonly pb::MessageParser<CashResp> _parser = new pb::MessageParser<CashResp>(() => new CashResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CashResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CashResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CashResp(CashResp other) : this() {
    cash_ = other.cash_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CashResp Clone() {
    return new CashResp(this);
  }

  /// <summary>Field number for the "cash" field.</summary>
  public const int CashFieldNumber = 1;
  private int cash_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Cash {
    get { return cash_; }
    set {
      cash_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CashResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CashResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Cash != other.Cash) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Cash != 0) hash ^= Cash.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Cash != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Cash);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Cash != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cash);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CashResp other) {
    if (other == null) {
      return;
    }
    if (other.Cash != 0) {
      Cash = other.Cash;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Cash = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class GuildGoldResp : pb::IMessage<GuildGoldResp> {
  private static readonly pb::MessageParser<GuildGoldResp> _parser = new pb::MessageParser<GuildGoldResp>(() => new GuildGoldResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GuildGoldResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GuildGoldResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GuildGoldResp(GuildGoldResp other) : this() {
    guildGold_ = other.guildGold_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GuildGoldResp Clone() {
    return new GuildGoldResp(this);
  }

  /// <summary>Field number for the "guild_gold" field.</summary>
  public const int GuildGoldFieldNumber = 1;
  private int guildGold_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int GuildGold {
    get { return guildGold_; }
    set {
      guildGold_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GuildGoldResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GuildGoldResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GuildGold != other.GuildGold) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GuildGold != 0) hash ^= GuildGold.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GuildGold != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(GuildGold);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GuildGold != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(GuildGold);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GuildGoldResp other) {
    if (other == null) {
      return;
    }
    if (other.GuildGold != 0) {
      GuildGold = other.GuildGold;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          GuildGold = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Validate user login
/// </summary>
public sealed partial class ValidateUserLoginReq : pb::IMessage<ValidateUserLoginReq> {
  private static readonly pb::MessageParser<ValidateUserLoginReq> _parser = new pb::MessageParser<ValidateUserLoginReq>(() => new ValidateUserLoginReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ValidateUserLoginReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ValidateUserLoginReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ValidateUserLoginReq(ValidateUserLoginReq other) : this() {
    username_ = other.username_;
    password_ = other.password_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ValidateUserLoginReq Clone() {
    return new ValidateUserLoginReq(this);
  }

  /// <summary>Field number for the "username" field.</summary>
  public const int UsernameFieldNumber = 1;
  private string username_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Username {
    get { return username_; }
    set {
      username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "password" field.</summary>
  public const int PasswordFieldNumber = 2;
  private string password_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Password {
    get { return password_; }
    set {
      password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ValidateUserLoginReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ValidateUserLoginReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Username != other.Username) return false;
    if (Password != other.Password) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Username.Length != 0) hash ^= Username.GetHashCode();
    if (Password.Length != 0) hash ^= Password.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Username.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Username);
    }
    if (Password.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Password);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Username.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
    }
    if (Password.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ValidateUserLoginReq other) {
    if (other == null) {
      return;
    }
    if (other.Username.Length != 0) {
      Username = other.Username;
    }
    if (other.Password.Length != 0) {
      Password = other.Password;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Username = input.ReadString();
          break;
        }
        case 18: {
          Password = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class ValidateUserLoginResp : pb::IMessage<ValidateUserLoginResp> {
  private static readonly pb::MessageParser<ValidateUserLoginResp> _parser = new pb::MessageParser<ValidateUserLoginResp>(() => new ValidateUserLoginResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ValidateUserLoginResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ValidateUserLoginResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ValidateUserLoginResp(ValidateUserLoginResp other) : this() {
    userId_ = other.userId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ValidateUserLoginResp Clone() {
    return new ValidateUserLoginResp(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ValidateUserLoginResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ValidateUserLoginResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ValidateUserLoginResp other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Validate access token
/// </summary>
public sealed partial class ValidateAccessTokenReq : pb::IMessage<ValidateAccessTokenReq> {
  private static readonly pb::MessageParser<ValidateAccessTokenReq> _parser = new pb::MessageParser<ValidateAccessTokenReq>(() => new ValidateAccessTokenReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ValidateAccessTokenReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ValidateAccessTokenReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ValidateAccessTokenReq(ValidateAccessTokenReq other) : this() {
    userId_ = other.userId_;
    accessToken_ = other.accessToken_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ValidateAccessTokenReq Clone() {
    return new ValidateAccessTokenReq(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "access_token" field.</summary>
  public const int AccessTokenFieldNumber = 2;
  private string accessToken_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string AccessToken {
    get { return accessToken_; }
    set {
      accessToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ValidateAccessTokenReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ValidateAccessTokenReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (AccessToken != other.AccessToken) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (AccessToken.Length != 0) hash ^= AccessToken.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (AccessToken.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(AccessToken);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (AccessToken.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessToken);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ValidateAccessTokenReq other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    if (other.AccessToken.Length != 0) {
      AccessToken = other.AccessToken;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
        case 18: {
          AccessToken = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class ValidateAccessTokenResp : pb::IMessage<ValidateAccessTokenResp> {
  private static readonly pb::MessageParser<ValidateAccessTokenResp> _parser = new pb::MessageParser<ValidateAccessTokenResp>(() => new ValidateAccessTokenResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ValidateAccessTokenResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ValidateAccessTokenResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ValidateAccessTokenResp(ValidateAccessTokenResp other) : this() {
    isPass_ = other.isPass_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ValidateAccessTokenResp Clone() {
    return new ValidateAccessTokenResp(this);
  }

  /// <summary>Field number for the "is_pass" field.</summary>
  public const int IsPassFieldNumber = 1;
  private bool isPass_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsPass {
    get { return isPass_; }
    set {
      isPass_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ValidateAccessTokenResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ValidateAccessTokenResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (IsPass != other.IsPass) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (IsPass != false) hash ^= IsPass.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (IsPass != false) {
      output.WriteRawTag(8);
      output.WriteBool(IsPass);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (IsPass != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ValidateAccessTokenResp other) {
    if (other == null) {
      return;
    }
    if (other.IsPass != false) {
      IsPass = other.IsPass;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          IsPass = input.ReadBool();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Get user level
/// </summary>
public sealed partial class GetUserLevelReq : pb::IMessage<GetUserLevelReq> {
  private static readonly pb::MessageParser<GetUserLevelReq> _parser = new pb::MessageParser<GetUserLevelReq>(() => new GetUserLevelReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetUserLevelReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetUserLevelReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetUserLevelReq(GetUserLevelReq other) : this() {
    userId_ = other.userId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetUserLevelReq Clone() {
    return new GetUserLevelReq(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetUserLevelReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetUserLevelReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetUserLevelReq other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class GetUserLevelResp : pb::IMessage<GetUserLevelResp> {
  private static readonly pb::MessageParser<GetUserLevelResp> _parser = new pb::MessageParser<GetUserLevelResp>(() => new GetUserLevelResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetUserLevelResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[9]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetUserLevelResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetUserLevelResp(GetUserLevelResp other) : this() {
    userLevel_ = other.userLevel_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetUserLevelResp Clone() {
    return new GetUserLevelResp(this);
  }

  /// <summary>Field number for the "user_level" field.</summary>
  public const int UserLevelFieldNumber = 1;
  private uint userLevel_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint UserLevel {
    get { return userLevel_; }
    set {
      userLevel_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetUserLevelResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetUserLevelResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserLevel != other.UserLevel) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserLevel != 0) hash ^= UserLevel.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserLevel != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(UserLevel);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserLevel != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UserLevel);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetUserLevelResp other) {
    if (other == null) {
      return;
    }
    if (other.UserLevel != 0) {
      UserLevel = other.UserLevel;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          UserLevel = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Get gold
/// </summary>
public sealed partial class GetGoldReq : pb::IMessage<GetGoldReq> {
  private static readonly pb::MessageParser<GetGoldReq> _parser = new pb::MessageParser<GetGoldReq>(() => new GetGoldReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetGoldReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[10]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetGoldReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetGoldReq(GetGoldReq other) : this() {
    userId_ = other.userId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetGoldReq Clone() {
    return new GetGoldReq(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetGoldReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetGoldReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetGoldReq other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Increase gold
/// </summary>
public sealed partial class IncreaseGoldReq : pb::IMessage<IncreaseGoldReq> {
  private static readonly pb::MessageParser<IncreaseGoldReq> _parser = new pb::MessageParser<IncreaseGoldReq>(() => new IncreaseGoldReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<IncreaseGoldReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[11]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public IncreaseGoldReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public IncreaseGoldReq(IncreaseGoldReq other) : this() {
    userId_ = other.userId_;
    amount_ = other.amount_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public IncreaseGoldReq Clone() {
    return new IncreaseGoldReq(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "amount" field.</summary>
  public const int AmountFieldNumber = 2;
  private int amount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Amount {
    get { return amount_; }
    set {
      amount_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as IncreaseGoldReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(IncreaseGoldReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (Amount != other.Amount) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (Amount != 0) hash ^= Amount.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (Amount != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Amount);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (Amount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Amount);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(IncreaseGoldReq other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    if (other.Amount != 0) {
      Amount = other.Amount;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
        case 16: {
          Amount = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Decrease gold
/// </summary>
public sealed partial class DecreaseGoldReq : pb::IMessage<DecreaseGoldReq> {
  private static readonly pb::MessageParser<DecreaseGoldReq> _parser = new pb::MessageParser<DecreaseGoldReq>(() => new DecreaseGoldReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DecreaseGoldReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[12]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DecreaseGoldReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DecreaseGoldReq(DecreaseGoldReq other) : this() {
    userId_ = other.userId_;
    amount_ = other.amount_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DecreaseGoldReq Clone() {
    return new DecreaseGoldReq(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "amount" field.</summary>
  public const int AmountFieldNumber = 2;
  private int amount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Amount {
    get { return amount_; }
    set {
      amount_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DecreaseGoldReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DecreaseGoldReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (Amount != other.Amount) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (Amount != 0) hash ^= Amount.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (Amount != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Amount);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (Amount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Amount);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DecreaseGoldReq other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    if (other.Amount != 0) {
      Amount = other.Amount;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
        case 16: {
          Amount = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Get cash
/// </summary>
public sealed partial class GetCashReq : pb::IMessage<GetCashReq> {
  private static readonly pb::MessageParser<GetCashReq> _parser = new pb::MessageParser<GetCashReq>(() => new GetCashReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetCashReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[13]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCashReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCashReq(GetCashReq other) : this() {
    userId_ = other.userId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCashReq Clone() {
    return new GetCashReq(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetCashReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetCashReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetCashReq other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Increase cash
/// </summary>
public sealed partial class IncreaseCashReq : pb::IMessage<IncreaseCashReq> {
  private static readonly pb::MessageParser<IncreaseCashReq> _parser = new pb::MessageParser<IncreaseCashReq>(() => new IncreaseCashReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<IncreaseCashReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[14]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public IncreaseCashReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public IncreaseCashReq(IncreaseCashReq other) : this() {
    userId_ = other.userId_;
    amount_ = other.amount_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public IncreaseCashReq Clone() {
    return new IncreaseCashReq(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "amount" field.</summary>
  public const int AmountFieldNumber = 2;
  private int amount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Amount {
    get { return amount_; }
    set {
      amount_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as IncreaseCashReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(IncreaseCashReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (Amount != other.Amount) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (Amount != 0) hash ^= Amount.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (Amount != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Amount);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (Amount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Amount);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(IncreaseCashReq other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    if (other.Amount != 0) {
      Amount = other.Amount;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
        case 16: {
          Amount = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Decrease cash
/// </summary>
public sealed partial class DecreaseCashReq : pb::IMessage<DecreaseCashReq> {
  private static readonly pb::MessageParser<DecreaseCashReq> _parser = new pb::MessageParser<DecreaseCashReq>(() => new DecreaseCashReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DecreaseCashReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[15]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DecreaseCashReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DecreaseCashReq(DecreaseCashReq other) : this() {
    userId_ = other.userId_;
    amount_ = other.amount_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DecreaseCashReq Clone() {
    return new DecreaseCashReq(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "amount" field.</summary>
  public const int AmountFieldNumber = 2;
  private int amount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Amount {
    get { return amount_; }
    set {
      amount_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DecreaseCashReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DecreaseCashReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (Amount != other.Amount) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (Amount != 0) hash ^= Amount.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (Amount != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Amount);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (Amount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Amount);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DecreaseCashReq other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    if (other.Amount != 0) {
      Amount = other.Amount;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
        case 16: {
          Amount = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Update access token
/// </summary>
public sealed partial class UpdateAccessTokenReq : pb::IMessage<UpdateAccessTokenReq> {
  private static readonly pb::MessageParser<UpdateAccessTokenReq> _parser = new pb::MessageParser<UpdateAccessTokenReq>(() => new UpdateAccessTokenReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateAccessTokenReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[16]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateAccessTokenReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateAccessTokenReq(UpdateAccessTokenReq other) : this() {
    userId_ = other.userId_;
    accessToken_ = other.accessToken_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateAccessTokenReq Clone() {
    return new UpdateAccessTokenReq(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "access_token" field.</summary>
  public const int AccessTokenFieldNumber = 2;
  private string accessToken_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string AccessToken {
    get { return accessToken_; }
    set {
      accessToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateAccessTokenReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateAccessTokenReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (AccessToken != other.AccessToken) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (AccessToken.Length != 0) hash ^= AccessToken.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (AccessToken.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(AccessToken);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (AccessToken.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessToken);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateAccessTokenReq other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    if (other.AccessToken.Length != 0) {
      AccessToken = other.AccessToken;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
        case 18: {
          AccessToken = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Create user login
/// </summary>
public sealed partial class CreateUserLoginReq : pb::IMessage<CreateUserLoginReq> {
  private static readonly pb::MessageParser<CreateUserLoginReq> _parser = new pb::MessageParser<CreateUserLoginReq>(() => new CreateUserLoginReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CreateUserLoginReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[17]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CreateUserLoginReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CreateUserLoginReq(CreateUserLoginReq other) : this() {
    username_ = other.username_;
    password_ = other.password_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CreateUserLoginReq Clone() {
    return new CreateUserLoginReq(this);
  }

  /// <summary>Field number for the "username" field.</summary>
  public const int UsernameFieldNumber = 1;
  private string username_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Username {
    get { return username_; }
    set {
      username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "password" field.</summary>
  public const int PasswordFieldNumber = 2;
  private string password_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Password {
    get { return password_; }
    set {
      password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CreateUserLoginReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CreateUserLoginReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Username != other.Username) return false;
    if (Password != other.Password) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Username.Length != 0) hash ^= Username.GetHashCode();
    if (Password.Length != 0) hash ^= Password.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Username.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Username);
    }
    if (Password.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Password);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Username.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
    }
    if (Password.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CreateUserLoginReq other) {
    if (other == null) {
      return;
    }
    if (other.Username.Length != 0) {
      Username = other.Username;
    }
    if (other.Password.Length != 0) {
      Password = other.Password;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Username = input.ReadString();
          break;
        }
        case 18: {
          Password = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Find username
/// </summary>
public sealed partial class FindUsernameReq : pb::IMessage<FindUsernameReq> {
  private static readonly pb::MessageParser<FindUsernameReq> _parser = new pb::MessageParser<FindUsernameReq>(() => new FindUsernameReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<FindUsernameReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[18]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FindUsernameReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FindUsernameReq(FindUsernameReq other) : this() {
    username_ = other.username_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FindUsernameReq Clone() {
    return new FindUsernameReq(this);
  }

  /// <summary>Field number for the "username" field.</summary>
  public const int UsernameFieldNumber = 1;
  private string username_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Username {
    get { return username_; }
    set {
      username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as FindUsernameReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(FindUsernameReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Username != other.Username) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Username.Length != 0) hash ^= Username.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Username.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Username);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Username.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(FindUsernameReq other) {
    if (other == null) {
      return;
    }
    if (other.Username.Length != 0) {
      Username = other.Username;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Username = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class FindUsernameResp : pb::IMessage<FindUsernameResp> {
  private static readonly pb::MessageParser<FindUsernameResp> _parser = new pb::MessageParser<FindUsernameResp>(() => new FindUsernameResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<FindUsernameResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[19]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FindUsernameResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FindUsernameResp(FindUsernameResp other) : this() {
    foundAmount_ = other.foundAmount_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FindUsernameResp Clone() {
    return new FindUsernameResp(this);
  }

  /// <summary>Field number for the "found_amount" field.</summary>
  public const int FoundAmountFieldNumber = 1;
  private long foundAmount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long FoundAmount {
    get { return foundAmount_; }
    set {
      foundAmount_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as FindUsernameResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(FindUsernameResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (FoundAmount != other.FoundAmount) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (FoundAmount != 0L) hash ^= FoundAmount.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (FoundAmount != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(FoundAmount);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (FoundAmount != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(FoundAmount);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(FindUsernameResp other) {
    if (other == null) {
      return;
    }
    if (other.FoundAmount != 0L) {
      FoundAmount = other.FoundAmount;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          FoundAmount = input.ReadInt64();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Create character
/// </summary>
public sealed partial class CreateCharacterReq : pb::IMessage<CreateCharacterReq> {
  private static readonly pb::MessageParser<CreateCharacterReq> _parser = new pb::MessageParser<CreateCharacterReq>(() => new CreateCharacterReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CreateCharacterReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[20]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CreateCharacterReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CreateCharacterReq(CreateCharacterReq other) : this() {
    userId_ = other.userId_;
    characterData_ = other.characterData_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CreateCharacterReq Clone() {
    return new CreateCharacterReq(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "character_data" field.</summary>
  public const int CharacterDataFieldNumber = 2;
  private pb::ByteString characterData_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString CharacterData {
    get { return characterData_; }
    set {
      characterData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CreateCharacterReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CreateCharacterReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (CharacterData != other.CharacterData) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (CharacterData.Length != 0) hash ^= CharacterData.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (CharacterData.Length != 0) {
      output.WriteRawTag(18);
      output.WriteBytes(CharacterData);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (CharacterData.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(CharacterData);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CreateCharacterReq other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    if (other.CharacterData.Length != 0) {
      CharacterData = other.CharacterData;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
        case 18: {
          CharacterData = input.ReadBytes();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Read character
/// </summary>
public sealed partial class ReadCharacterReq : pb::IMessage<ReadCharacterReq> {
  private static readonly pb::MessageParser<ReadCharacterReq> _parser = new pb::MessageParser<ReadCharacterReq>(() => new ReadCharacterReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ReadCharacterReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[21]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadCharacterReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadCharacterReq(ReadCharacterReq other) : this() {
    userId_ = other.userId_;
    characterId_ = other.characterId_;
    withEquipWeapons_ = other.withEquipWeapons_;
    withAttributes_ = other.withAttributes_;
    withSkills_ = other.withSkills_;
    withSkillUsages_ = other.withSkillUsages_;
    withBuffs_ = other.withBuffs_;
    withEquipItems_ = other.withEquipItems_;
    withNonEquipItems_ = other.withNonEquipItems_;
    withSummons_ = other.withSummons_;
    withHotkeys_ = other.withHotkeys_;
    withQuests_ = other.withQuests_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadCharacterReq Clone() {
    return new ReadCharacterReq(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "character_id" field.</summary>
  public const int CharacterIdFieldNumber = 2;
  private string characterId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CharacterId {
    get { return characterId_; }
    set {
      characterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "with_equip_weapons" field.</summary>
  public const int WithEquipWeaponsFieldNumber = 3;
  private bool withEquipWeapons_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool WithEquipWeapons {
    get { return withEquipWeapons_; }
    set {
      withEquipWeapons_ = value;
    }
  }

  /// <summary>Field number for the "with_attributes" field.</summary>
  public const int WithAttributesFieldNumber = 4;
  private bool withAttributes_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool WithAttributes {
    get { return withAttributes_; }
    set {
      withAttributes_ = value;
    }
  }

  /// <summary>Field number for the "with_skills" field.</summary>
  public const int WithSkillsFieldNumber = 5;
  private bool withSkills_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool WithSkills {
    get { return withSkills_; }
    set {
      withSkills_ = value;
    }
  }

  /// <summary>Field number for the "with_skill_usages" field.</summary>
  public const int WithSkillUsagesFieldNumber = 6;
  private bool withSkillUsages_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool WithSkillUsages {
    get { return withSkillUsages_; }
    set {
      withSkillUsages_ = value;
    }
  }

  /// <summary>Field number for the "with_buffs" field.</summary>
  public const int WithBuffsFieldNumber = 7;
  private bool withBuffs_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool WithBuffs {
    get { return withBuffs_; }
    set {
      withBuffs_ = value;
    }
  }

  /// <summary>Field number for the "with_equip_items" field.</summary>
  public const int WithEquipItemsFieldNumber = 8;
  private bool withEquipItems_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool WithEquipItems {
    get { return withEquipItems_; }
    set {
      withEquipItems_ = value;
    }
  }

  /// <summary>Field number for the "with_non_equip_items" field.</summary>
  public const int WithNonEquipItemsFieldNumber = 9;
  private bool withNonEquipItems_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool WithNonEquipItems {
    get { return withNonEquipItems_; }
    set {
      withNonEquipItems_ = value;
    }
  }

  /// <summary>Field number for the "with_summons" field.</summary>
  public const int WithSummonsFieldNumber = 10;
  private bool withSummons_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool WithSummons {
    get { return withSummons_; }
    set {
      withSummons_ = value;
    }
  }

  /// <summary>Field number for the "with_hotkeys" field.</summary>
  public const int WithHotkeysFieldNumber = 11;
  private bool withHotkeys_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool WithHotkeys {
    get { return withHotkeys_; }
    set {
      withHotkeys_ = value;
    }
  }

  /// <summary>Field number for the "with_quests" field.</summary>
  public const int WithQuestsFieldNumber = 12;
  private bool withQuests_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool WithQuests {
    get { return withQuests_; }
    set {
      withQuests_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ReadCharacterReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ReadCharacterReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (CharacterId != other.CharacterId) return false;
    if (WithEquipWeapons != other.WithEquipWeapons) return false;
    if (WithAttributes != other.WithAttributes) return false;
    if (WithSkills != other.WithSkills) return false;
    if (WithSkillUsages != other.WithSkillUsages) return false;
    if (WithBuffs != other.WithBuffs) return false;
    if (WithEquipItems != other.WithEquipItems) return false;
    if (WithNonEquipItems != other.WithNonEquipItems) return false;
    if (WithSummons != other.WithSummons) return false;
    if (WithHotkeys != other.WithHotkeys) return false;
    if (WithQuests != other.WithQuests) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (CharacterId.Length != 0) hash ^= CharacterId.GetHashCode();
    if (WithEquipWeapons != false) hash ^= WithEquipWeapons.GetHashCode();
    if (WithAttributes != false) hash ^= WithAttributes.GetHashCode();
    if (WithSkills != false) hash ^= WithSkills.GetHashCode();
    if (WithSkillUsages != false) hash ^= WithSkillUsages.GetHashCode();
    if (WithBuffs != false) hash ^= WithBuffs.GetHashCode();
    if (WithEquipItems != false) hash ^= WithEquipItems.GetHashCode();
    if (WithNonEquipItems != false) hash ^= WithNonEquipItems.GetHashCode();
    if (WithSummons != false) hash ^= WithSummons.GetHashCode();
    if (WithHotkeys != false) hash ^= WithHotkeys.GetHashCode();
    if (WithQuests != false) hash ^= WithQuests.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (CharacterId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(CharacterId);
    }
    if (WithEquipWeapons != false) {
      output.WriteRawTag(24);
      output.WriteBool(WithEquipWeapons);
    }
    if (WithAttributes != false) {
      output.WriteRawTag(32);
      output.WriteBool(WithAttributes);
    }
    if (WithSkills != false) {
      output.WriteRawTag(40);
      output.WriteBool(WithSkills);
    }
    if (WithSkillUsages != false) {
      output.WriteRawTag(48);
      output.WriteBool(WithSkillUsages);
    }
    if (WithBuffs != false) {
      output.WriteRawTag(56);
      output.WriteBool(WithBuffs);
    }
    if (WithEquipItems != false) {
      output.WriteRawTag(64);
      output.WriteBool(WithEquipItems);
    }
    if (WithNonEquipItems != false) {
      output.WriteRawTag(72);
      output.WriteBool(WithNonEquipItems);
    }
    if (WithSummons != false) {
      output.WriteRawTag(80);
      output.WriteBool(WithSummons);
    }
    if (WithHotkeys != false) {
      output.WriteRawTag(88);
      output.WriteBool(WithHotkeys);
    }
    if (WithQuests != false) {
      output.WriteRawTag(96);
      output.WriteBool(WithQuests);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (CharacterId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CharacterId);
    }
    if (WithEquipWeapons != false) {
      size += 1 + 1;
    }
    if (WithAttributes != false) {
      size += 1 + 1;
    }
    if (WithSkills != false) {
      size += 1 + 1;
    }
    if (WithSkillUsages != false) {
      size += 1 + 1;
    }
    if (WithBuffs != false) {
      size += 1 + 1;
    }
    if (WithEquipItems != false) {
      size += 1 + 1;
    }
    if (WithNonEquipItems != false) {
      size += 1 + 1;
    }
    if (WithSummons != false) {
      size += 1 + 1;
    }
    if (WithHotkeys != false) {
      size += 1 + 1;
    }
    if (WithQuests != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ReadCharacterReq other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    if (other.CharacterId.Length != 0) {
      CharacterId = other.CharacterId;
    }
    if (other.WithEquipWeapons != false) {
      WithEquipWeapons = other.WithEquipWeapons;
    }
    if (other.WithAttributes != false) {
      WithAttributes = other.WithAttributes;
    }
    if (other.WithSkills != false) {
      WithSkills = other.WithSkills;
    }
    if (other.WithSkillUsages != false) {
      WithSkillUsages = other.WithSkillUsages;
    }
    if (other.WithBuffs != false) {
      WithBuffs = other.WithBuffs;
    }
    if (other.WithEquipItems != false) {
      WithEquipItems = other.WithEquipItems;
    }
    if (other.WithNonEquipItems != false) {
      WithNonEquipItems = other.WithNonEquipItems;
    }
    if (other.WithSummons != false) {
      WithSummons = other.WithSummons;
    }
    if (other.WithHotkeys != false) {
      WithHotkeys = other.WithHotkeys;
    }
    if (other.WithQuests != false) {
      WithQuests = other.WithQuests;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
        case 18: {
          CharacterId = input.ReadString();
          break;
        }
        case 24: {
          WithEquipWeapons = input.ReadBool();
          break;
        }
        case 32: {
          WithAttributes = input.ReadBool();
          break;
        }
        case 40: {
          WithSkills = input.ReadBool();
          break;
        }
        case 48: {
          WithSkillUsages = input.ReadBool();
          break;
        }
        case 56: {
          WithBuffs = input.ReadBool();
          break;
        }
        case 64: {
          WithEquipItems = input.ReadBool();
          break;
        }
        case 72: {
          WithNonEquipItems = input.ReadBool();
          break;
        }
        case 80: {
          WithSummons = input.ReadBool();
          break;
        }
        case 88: {
          WithHotkeys = input.ReadBool();
          break;
        }
        case 96: {
          WithQuests = input.ReadBool();
          break;
        }
      }
    }
  }

}

public sealed partial class ReadCharacterResp : pb::IMessage<ReadCharacterResp> {
  private static readonly pb::MessageParser<ReadCharacterResp> _parser = new pb::MessageParser<ReadCharacterResp>(() => new ReadCharacterResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ReadCharacterResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[22]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadCharacterResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadCharacterResp(ReadCharacterResp other) : this() {
    characterData_ = other.characterData_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadCharacterResp Clone() {
    return new ReadCharacterResp(this);
  }

  /// <summary>Field number for the "character_data" field.</summary>
  public const int CharacterDataFieldNumber = 1;
  private pb::ByteString characterData_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString CharacterData {
    get { return characterData_; }
    set {
      characterData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ReadCharacterResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ReadCharacterResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CharacterData != other.CharacterData) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CharacterData.Length != 0) hash ^= CharacterData.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CharacterData.Length != 0) {
      output.WriteRawTag(10);
      output.WriteBytes(CharacterData);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CharacterData.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(CharacterData);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ReadCharacterResp other) {
    if (other == null) {
      return;
    }
    if (other.CharacterData.Length != 0) {
      CharacterData = other.CharacterData;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          CharacterData = input.ReadBytes();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Read characters
/// </summary>
public sealed partial class ReadCharactersReq : pb::IMessage<ReadCharactersReq> {
  private static readonly pb::MessageParser<ReadCharactersReq> _parser = new pb::MessageParser<ReadCharactersReq>(() => new ReadCharactersReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ReadCharactersReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[23]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadCharactersReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadCharactersReq(ReadCharactersReq other) : this() {
    userId_ = other.userId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadCharactersReq Clone() {
    return new ReadCharactersReq(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ReadCharactersReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ReadCharactersReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ReadCharactersReq other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class ReadCharactersResp : pb::IMessage<ReadCharactersResp> {
  private static readonly pb::MessageParser<ReadCharactersResp> _parser = new pb::MessageParser<ReadCharactersResp>(() => new ReadCharactersResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ReadCharactersResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[24]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadCharactersResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadCharactersResp(ReadCharactersResp other) : this() {
    characterData_ = other.characterData_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadCharactersResp Clone() {
    return new ReadCharactersResp(this);
  }

  /// <summary>Field number for the "character_data" field.</summary>
  public const int CharacterDataFieldNumber = 1;
  private static readonly pb::FieldCodec<pb::ByteString> _repeated_characterData_codec
      = pb::FieldCodec.ForBytes(10);
  private readonly pbc::RepeatedField<pb::ByteString> characterData_ = new pbc::RepeatedField<pb::ByteString>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<pb::ByteString> CharacterData {
    get { return characterData_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ReadCharactersResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ReadCharactersResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!characterData_.Equals(other.characterData_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= characterData_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    characterData_.WriteTo(output, _repeated_characterData_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += characterData_.CalculateSize(_repeated_characterData_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ReadCharactersResp other) {
    if (other == null) {
      return;
    }
    characterData_.Add(other.characterData_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          characterData_.AddEntriesFrom(input, _repeated_characterData_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Update character
/// </summary>
public sealed partial class UpdateCharacterReq : pb::IMessage<UpdateCharacterReq> {
  private static readonly pb::MessageParser<UpdateCharacterReq> _parser = new pb::MessageParser<UpdateCharacterReq>(() => new UpdateCharacterReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateCharacterReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[25]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateCharacterReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateCharacterReq(UpdateCharacterReq other) : this() {
    characterData_ = other.characterData_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateCharacterReq Clone() {
    return new UpdateCharacterReq(this);
  }

  /// <summary>Field number for the "character_data" field.</summary>
  public const int CharacterDataFieldNumber = 1;
  private pb::ByteString characterData_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString CharacterData {
    get { return characterData_; }
    set {
      characterData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateCharacterReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateCharacterReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CharacterData != other.CharacterData) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CharacterData.Length != 0) hash ^= CharacterData.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CharacterData.Length != 0) {
      output.WriteRawTag(10);
      output.WriteBytes(CharacterData);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CharacterData.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(CharacterData);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateCharacterReq other) {
    if (other == null) {
      return;
    }
    if (other.CharacterData.Length != 0) {
      CharacterData = other.CharacterData;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          CharacterData = input.ReadBytes();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Delete character
/// </summary>
public sealed partial class DeleteCharacterReq : pb::IMessage<DeleteCharacterReq> {
  private static readonly pb::MessageParser<DeleteCharacterReq> _parser = new pb::MessageParser<DeleteCharacterReq>(() => new DeleteCharacterReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DeleteCharacterReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[26]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteCharacterReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteCharacterReq(DeleteCharacterReq other) : this() {
    userId_ = other.userId_;
    characterId_ = other.characterId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteCharacterReq Clone() {
    return new DeleteCharacterReq(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "character_id" field.</summary>
  public const int CharacterIdFieldNumber = 2;
  private string characterId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CharacterId {
    get { return characterId_; }
    set {
      characterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DeleteCharacterReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DeleteCharacterReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (CharacterId != other.CharacterId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (CharacterId.Length != 0) hash ^= CharacterId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (CharacterId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(CharacterId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (CharacterId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CharacterId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DeleteCharacterReq other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    if (other.CharacterId.Length != 0) {
      CharacterId = other.CharacterId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
        case 18: {
          CharacterId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Find character name
/// </summary>
public sealed partial class FindCharacterNameReq : pb::IMessage<FindCharacterNameReq> {
  private static readonly pb::MessageParser<FindCharacterNameReq> _parser = new pb::MessageParser<FindCharacterNameReq>(() => new FindCharacterNameReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<FindCharacterNameReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[27]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FindCharacterNameReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FindCharacterNameReq(FindCharacterNameReq other) : this() {
    characterName_ = other.characterName_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FindCharacterNameReq Clone() {
    return new FindCharacterNameReq(this);
  }

  /// <summary>Field number for the "character_name" field.</summary>
  public const int CharacterNameFieldNumber = 1;
  private string characterName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CharacterName {
    get { return characterName_; }
    set {
      characterName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as FindCharacterNameReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(FindCharacterNameReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CharacterName != other.CharacterName) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CharacterName.Length != 0) hash ^= CharacterName.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CharacterName.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(CharacterName);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CharacterName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CharacterName);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(FindCharacterNameReq other) {
    if (other == null) {
      return;
    }
    if (other.CharacterName.Length != 0) {
      CharacterName = other.CharacterName;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          CharacterName = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class FindCharacterNameResp : pb::IMessage<FindCharacterNameResp> {
  private static readonly pb::MessageParser<FindCharacterNameResp> _parser = new pb::MessageParser<FindCharacterNameResp>(() => new FindCharacterNameResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<FindCharacterNameResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[28]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FindCharacterNameResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FindCharacterNameResp(FindCharacterNameResp other) : this() {
    foundAmount_ = other.foundAmount_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FindCharacterNameResp Clone() {
    return new FindCharacterNameResp(this);
  }

  /// <summary>Field number for the "found_amount" field.</summary>
  public const int FoundAmountFieldNumber = 1;
  private long foundAmount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long FoundAmount {
    get { return foundAmount_; }
    set {
      foundAmount_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as FindCharacterNameResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(FindCharacterNameResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (FoundAmount != other.FoundAmount) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (FoundAmount != 0L) hash ^= FoundAmount.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (FoundAmount != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(FoundAmount);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (FoundAmount != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(FoundAmount);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(FindCharacterNameResp other) {
    if (other == null) {
      return;
    }
    if (other.FoundAmount != 0L) {
      FoundAmount = other.FoundAmount;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          FoundAmount = input.ReadInt64();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Find characters
/// </summary>
public sealed partial class FindCharactersReq : pb::IMessage<FindCharactersReq> {
  private static readonly pb::MessageParser<FindCharactersReq> _parser = new pb::MessageParser<FindCharactersReq>(() => new FindCharactersReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<FindCharactersReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[29]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FindCharactersReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FindCharactersReq(FindCharactersReq other) : this() {
    characterName_ = other.characterName_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FindCharactersReq Clone() {
    return new FindCharactersReq(this);
  }

  /// <summary>Field number for the "character_name" field.</summary>
  public const int CharacterNameFieldNumber = 1;
  private string characterName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CharacterName {
    get { return characterName_; }
    set {
      characterName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as FindCharactersReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(FindCharactersReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CharacterName != other.CharacterName) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CharacterName.Length != 0) hash ^= CharacterName.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CharacterName.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(CharacterName);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CharacterName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CharacterName);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(FindCharactersReq other) {
    if (other == null) {
      return;
    }
    if (other.CharacterName.Length != 0) {
      CharacterName = other.CharacterName;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          CharacterName = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class FindCharactersResp : pb::IMessage<FindCharactersResp> {
  private static readonly pb::MessageParser<FindCharactersResp> _parser = new pb::MessageParser<FindCharactersResp>(() => new FindCharactersResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<FindCharactersResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[30]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FindCharactersResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FindCharactersResp(FindCharactersResp other) : this() {
    socialCharacterData_ = other.socialCharacterData_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FindCharactersResp Clone() {
    return new FindCharactersResp(this);
  }

  /// <summary>Field number for the "social_character_data" field.</summary>
  public const int SocialCharacterDataFieldNumber = 1;
  private static readonly pb::FieldCodec<pb::ByteString> _repeated_socialCharacterData_codec
      = pb::FieldCodec.ForBytes(10);
  private readonly pbc::RepeatedField<pb::ByteString> socialCharacterData_ = new pbc::RepeatedField<pb::ByteString>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<pb::ByteString> SocialCharacterData {
    get { return socialCharacterData_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as FindCharactersResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(FindCharactersResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!socialCharacterData_.Equals(other.socialCharacterData_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= socialCharacterData_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    socialCharacterData_.WriteTo(output, _repeated_socialCharacterData_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += socialCharacterData_.CalculateSize(_repeated_socialCharacterData_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(FindCharactersResp other) {
    if (other == null) {
      return;
    }
    socialCharacterData_.Add(other.socialCharacterData_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          socialCharacterData_.AddEntriesFrom(input, _repeated_socialCharacterData_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Create friend
/// </summary>
public sealed partial class CreateFriendReq : pb::IMessage<CreateFriendReq> {
  private static readonly pb::MessageParser<CreateFriendReq> _parser = new pb::MessageParser<CreateFriendReq>(() => new CreateFriendReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CreateFriendReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[31]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CreateFriendReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CreateFriendReq(CreateFriendReq other) : this() {
    characterId1_ = other.characterId1_;
    characterId2_ = other.characterId2_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CreateFriendReq Clone() {
    return new CreateFriendReq(this);
  }

  /// <summary>Field number for the "character_id_1" field.</summary>
  public const int CharacterId1FieldNumber = 1;
  private string characterId1_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CharacterId1 {
    get { return characterId1_; }
    set {
      characterId1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "character_id_2" field.</summary>
  public const int CharacterId2FieldNumber = 2;
  private string characterId2_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CharacterId2 {
    get { return characterId2_; }
    set {
      characterId2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CreateFriendReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CreateFriendReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CharacterId1 != other.CharacterId1) return false;
    if (CharacterId2 != other.CharacterId2) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CharacterId1.Length != 0) hash ^= CharacterId1.GetHashCode();
    if (CharacterId2.Length != 0) hash ^= CharacterId2.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CharacterId1.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(CharacterId1);
    }
    if (CharacterId2.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(CharacterId2);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CharacterId1.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CharacterId1);
    }
    if (CharacterId2.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CharacterId2);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CreateFriendReq other) {
    if (other == null) {
      return;
    }
    if (other.CharacterId1.Length != 0) {
      CharacterId1 = other.CharacterId1;
    }
    if (other.CharacterId2.Length != 0) {
      CharacterId2 = other.CharacterId2;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          CharacterId1 = input.ReadString();
          break;
        }
        case 18: {
          CharacterId2 = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Delete friend
/// </summary>
public sealed partial class DeleteFriendReq : pb::IMessage<DeleteFriendReq> {
  private static readonly pb::MessageParser<DeleteFriendReq> _parser = new pb::MessageParser<DeleteFriendReq>(() => new DeleteFriendReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DeleteFriendReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[32]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteFriendReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteFriendReq(DeleteFriendReq other) : this() {
    characterId1_ = other.characterId1_;
    characterId2_ = other.characterId2_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteFriendReq Clone() {
    return new DeleteFriendReq(this);
  }

  /// <summary>Field number for the "character_id_1" field.</summary>
  public const int CharacterId1FieldNumber = 1;
  private string characterId1_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CharacterId1 {
    get { return characterId1_; }
    set {
      characterId1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "character_id_2" field.</summary>
  public const int CharacterId2FieldNumber = 2;
  private string characterId2_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CharacterId2 {
    get { return characterId2_; }
    set {
      characterId2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DeleteFriendReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DeleteFriendReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CharacterId1 != other.CharacterId1) return false;
    if (CharacterId2 != other.CharacterId2) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CharacterId1.Length != 0) hash ^= CharacterId1.GetHashCode();
    if (CharacterId2.Length != 0) hash ^= CharacterId2.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CharacterId1.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(CharacterId1);
    }
    if (CharacterId2.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(CharacterId2);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CharacterId1.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CharacterId1);
    }
    if (CharacterId2.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CharacterId2);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DeleteFriendReq other) {
    if (other == null) {
      return;
    }
    if (other.CharacterId1.Length != 0) {
      CharacterId1 = other.CharacterId1;
    }
    if (other.CharacterId2.Length != 0) {
      CharacterId2 = other.CharacterId2;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          CharacterId1 = input.ReadString();
          break;
        }
        case 18: {
          CharacterId2 = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Read friends
/// </summary>
public sealed partial class ReadFriendsReq : pb::IMessage<ReadFriendsReq> {
  private static readonly pb::MessageParser<ReadFriendsReq> _parser = new pb::MessageParser<ReadFriendsReq>(() => new ReadFriendsReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ReadFriendsReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[33]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadFriendsReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadFriendsReq(ReadFriendsReq other) : this() {
    characterId_ = other.characterId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadFriendsReq Clone() {
    return new ReadFriendsReq(this);
  }

  /// <summary>Field number for the "character_id" field.</summary>
  public const int CharacterIdFieldNumber = 1;
  private string characterId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CharacterId {
    get { return characterId_; }
    set {
      characterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ReadFriendsReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ReadFriendsReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CharacterId != other.CharacterId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CharacterId.Length != 0) hash ^= CharacterId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CharacterId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(CharacterId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CharacterId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CharacterId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ReadFriendsReq other) {
    if (other == null) {
      return;
    }
    if (other.CharacterId.Length != 0) {
      CharacterId = other.CharacterId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          CharacterId = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class ReadFriendsResp : pb::IMessage<ReadFriendsResp> {
  private static readonly pb::MessageParser<ReadFriendsResp> _parser = new pb::MessageParser<ReadFriendsResp>(() => new ReadFriendsResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ReadFriendsResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[34]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadFriendsResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadFriendsResp(ReadFriendsResp other) : this() {
    socialCharacterData_ = other.socialCharacterData_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadFriendsResp Clone() {
    return new ReadFriendsResp(this);
  }

  /// <summary>Field number for the "social_character_data" field.</summary>
  public const int SocialCharacterDataFieldNumber = 1;
  private static readonly pb::FieldCodec<pb::ByteString> _repeated_socialCharacterData_codec
      = pb::FieldCodec.ForBytes(10);
  private readonly pbc::RepeatedField<pb::ByteString> socialCharacterData_ = new pbc::RepeatedField<pb::ByteString>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<pb::ByteString> SocialCharacterData {
    get { return socialCharacterData_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ReadFriendsResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ReadFriendsResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!socialCharacterData_.Equals(other.socialCharacterData_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= socialCharacterData_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    socialCharacterData_.WriteTo(output, _repeated_socialCharacterData_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += socialCharacterData_.CalculateSize(_repeated_socialCharacterData_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ReadFriendsResp other) {
    if (other == null) {
      return;
    }
    socialCharacterData_.Add(other.socialCharacterData_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          socialCharacterData_.AddEntriesFrom(input, _repeated_socialCharacterData_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Create building
/// </summary>
public sealed partial class CreateBuildingReq : pb::IMessage<CreateBuildingReq> {
  private static readonly pb::MessageParser<CreateBuildingReq> _parser = new pb::MessageParser<CreateBuildingReq>(() => new CreateBuildingReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CreateBuildingReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[35]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CreateBuildingReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CreateBuildingReq(CreateBuildingReq other) : this() {
    mapName_ = other.mapName_;
    buildingData_ = other.buildingData_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CreateBuildingReq Clone() {
    return new CreateBuildingReq(this);
  }

  /// <summary>Field number for the "map_name" field.</summary>
  public const int MapNameFieldNumber = 1;
  private string mapName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string MapName {
    get { return mapName_; }
    set {
      mapName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "building_data" field.</summary>
  public const int BuildingDataFieldNumber = 2;
  private pb::ByteString buildingData_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString BuildingData {
    get { return buildingData_; }
    set {
      buildingData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CreateBuildingReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CreateBuildingReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (MapName != other.MapName) return false;
    if (BuildingData != other.BuildingData) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (MapName.Length != 0) hash ^= MapName.GetHashCode();
    if (BuildingData.Length != 0) hash ^= BuildingData.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (MapName.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(MapName);
    }
    if (BuildingData.Length != 0) {
      output.WriteRawTag(18);
      output.WriteBytes(BuildingData);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (MapName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(MapName);
    }
    if (BuildingData.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(BuildingData);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CreateBuildingReq other) {
    if (other == null) {
      return;
    }
    if (other.MapName.Length != 0) {
      MapName = other.MapName;
    }
    if (other.BuildingData.Length != 0) {
      BuildingData = other.BuildingData;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          MapName = input.ReadString();
          break;
        }
        case 18: {
          BuildingData = input.ReadBytes();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Update building
/// </summary>
public sealed partial class UpdateBuildingReq : pb::IMessage<UpdateBuildingReq> {
  private static readonly pb::MessageParser<UpdateBuildingReq> _parser = new pb::MessageParser<UpdateBuildingReq>(() => new UpdateBuildingReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateBuildingReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[36]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateBuildingReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateBuildingReq(UpdateBuildingReq other) : this() {
    mapName_ = other.mapName_;
    buildingData_ = other.buildingData_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateBuildingReq Clone() {
    return new UpdateBuildingReq(this);
  }

  /// <summary>Field number for the "map_name" field.</summary>
  public const int MapNameFieldNumber = 1;
  private string mapName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string MapName {
    get { return mapName_; }
    set {
      mapName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "building_data" field.</summary>
  public const int BuildingDataFieldNumber = 2;
  private pb::ByteString buildingData_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString BuildingData {
    get { return buildingData_; }
    set {
      buildingData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateBuildingReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateBuildingReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (MapName != other.MapName) return false;
    if (BuildingData != other.BuildingData) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (MapName.Length != 0) hash ^= MapName.GetHashCode();
    if (BuildingData.Length != 0) hash ^= BuildingData.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (MapName.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(MapName);
    }
    if (BuildingData.Length != 0) {
      output.WriteRawTag(18);
      output.WriteBytes(BuildingData);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (MapName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(MapName);
    }
    if (BuildingData.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(BuildingData);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateBuildingReq other) {
    if (other == null) {
      return;
    }
    if (other.MapName.Length != 0) {
      MapName = other.MapName;
    }
    if (other.BuildingData.Length != 0) {
      BuildingData = other.BuildingData;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          MapName = input.ReadString();
          break;
        }
        case 18: {
          BuildingData = input.ReadBytes();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Delete building
/// </summary>
public sealed partial class DeleteBuildingReq : pb::IMessage<DeleteBuildingReq> {
  private static readonly pb::MessageParser<DeleteBuildingReq> _parser = new pb::MessageParser<DeleteBuildingReq>(() => new DeleteBuildingReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DeleteBuildingReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[37]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteBuildingReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteBuildingReq(DeleteBuildingReq other) : this() {
    mapName_ = other.mapName_;
    buildingId_ = other.buildingId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteBuildingReq Clone() {
    return new DeleteBuildingReq(this);
  }

  /// <summary>Field number for the "map_name" field.</summary>
  public const int MapNameFieldNumber = 1;
  private string mapName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string MapName {
    get { return mapName_; }
    set {
      mapName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "building_id" field.</summary>
  public const int BuildingIdFieldNumber = 2;
  private string buildingId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string BuildingId {
    get { return buildingId_; }
    set {
      buildingId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DeleteBuildingReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DeleteBuildingReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (MapName != other.MapName) return false;
    if (BuildingId != other.BuildingId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (MapName.Length != 0) hash ^= MapName.GetHashCode();
    if (BuildingId.Length != 0) hash ^= BuildingId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (MapName.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(MapName);
    }
    if (BuildingId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(BuildingId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (MapName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(MapName);
    }
    if (BuildingId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(BuildingId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DeleteBuildingReq other) {
    if (other == null) {
      return;
    }
    if (other.MapName.Length != 0) {
      MapName = other.MapName;
    }
    if (other.BuildingId.Length != 0) {
      BuildingId = other.BuildingId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          MapName = input.ReadString();
          break;
        }
        case 18: {
          BuildingId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Read buildings
/// </summary>
public sealed partial class ReadBuildingsReq : pb::IMessage<ReadBuildingsReq> {
  private static readonly pb::MessageParser<ReadBuildingsReq> _parser = new pb::MessageParser<ReadBuildingsReq>(() => new ReadBuildingsReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ReadBuildingsReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[38]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadBuildingsReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadBuildingsReq(ReadBuildingsReq other) : this() {
    mapName_ = other.mapName_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadBuildingsReq Clone() {
    return new ReadBuildingsReq(this);
  }

  /// <summary>Field number for the "map_name" field.</summary>
  public const int MapNameFieldNumber = 1;
  private string mapName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string MapName {
    get { return mapName_; }
    set {
      mapName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ReadBuildingsReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ReadBuildingsReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (MapName != other.MapName) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (MapName.Length != 0) hash ^= MapName.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (MapName.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(MapName);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (MapName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(MapName);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ReadBuildingsReq other) {
    if (other == null) {
      return;
    }
    if (other.MapName.Length != 0) {
      MapName = other.MapName;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          MapName = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class ReadBuildingsResp : pb::IMessage<ReadBuildingsResp> {
  private static readonly pb::MessageParser<ReadBuildingsResp> _parser = new pb::MessageParser<ReadBuildingsResp>(() => new ReadBuildingsResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ReadBuildingsResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[39]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadBuildingsResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadBuildingsResp(ReadBuildingsResp other) : this() {
    buildingData_ = other.buildingData_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadBuildingsResp Clone() {
    return new ReadBuildingsResp(this);
  }

  /// <summary>Field number for the "building_data" field.</summary>
  public const int BuildingDataFieldNumber = 1;
  private static readonly pb::FieldCodec<pb::ByteString> _repeated_buildingData_codec
      = pb::FieldCodec.ForBytes(10);
  private readonly pbc::RepeatedField<pb::ByteString> buildingData_ = new pbc::RepeatedField<pb::ByteString>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<pb::ByteString> BuildingData {
    get { return buildingData_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ReadBuildingsResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ReadBuildingsResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!buildingData_.Equals(other.buildingData_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= buildingData_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    buildingData_.WriteTo(output, _repeated_buildingData_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += buildingData_.CalculateSize(_repeated_buildingData_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ReadBuildingsResp other) {
    if (other == null) {
      return;
    }
    buildingData_.Add(other.buildingData_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          buildingData_.AddEntriesFrom(input, _repeated_buildingData_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Create party
/// </summary>
public sealed partial class CreatePartyReq : pb::IMessage<CreatePartyReq> {
  private static readonly pb::MessageParser<CreatePartyReq> _parser = new pb::MessageParser<CreatePartyReq>(() => new CreatePartyReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CreatePartyReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[40]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CreatePartyReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CreatePartyReq(CreatePartyReq other) : this() {
    shareExp_ = other.shareExp_;
    shareItem_ = other.shareItem_;
    leaderCharacterId_ = other.leaderCharacterId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CreatePartyReq Clone() {
    return new CreatePartyReq(this);
  }

  /// <summary>Field number for the "share_exp" field.</summary>
  public const int ShareExpFieldNumber = 1;
  private bool shareExp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool ShareExp {
    get { return shareExp_; }
    set {
      shareExp_ = value;
    }
  }

  /// <summary>Field number for the "share_item" field.</summary>
  public const int ShareItemFieldNumber = 2;
  private bool shareItem_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool ShareItem {
    get { return shareItem_; }
    set {
      shareItem_ = value;
    }
  }

  /// <summary>Field number for the "leader_character_id" field.</summary>
  public const int LeaderCharacterIdFieldNumber = 3;
  private string leaderCharacterId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string LeaderCharacterId {
    get { return leaderCharacterId_; }
    set {
      leaderCharacterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CreatePartyReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CreatePartyReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ShareExp != other.ShareExp) return false;
    if (ShareItem != other.ShareItem) return false;
    if (LeaderCharacterId != other.LeaderCharacterId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ShareExp != false) hash ^= ShareExp.GetHashCode();
    if (ShareItem != false) hash ^= ShareItem.GetHashCode();
    if (LeaderCharacterId.Length != 0) hash ^= LeaderCharacterId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ShareExp != false) {
      output.WriteRawTag(8);
      output.WriteBool(ShareExp);
    }
    if (ShareItem != false) {
      output.WriteRawTag(16);
      output.WriteBool(ShareItem);
    }
    if (LeaderCharacterId.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(LeaderCharacterId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ShareExp != false) {
      size += 1 + 1;
    }
    if (ShareItem != false) {
      size += 1 + 1;
    }
    if (LeaderCharacterId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(LeaderCharacterId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CreatePartyReq other) {
    if (other == null) {
      return;
    }
    if (other.ShareExp != false) {
      ShareExp = other.ShareExp;
    }
    if (other.ShareItem != false) {
      ShareItem = other.ShareItem;
    }
    if (other.LeaderCharacterId.Length != 0) {
      LeaderCharacterId = other.LeaderCharacterId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ShareExp = input.ReadBool();
          break;
        }
        case 16: {
          ShareItem = input.ReadBool();
          break;
        }
        case 26: {
          LeaderCharacterId = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class CreatePartyResp : pb::IMessage<CreatePartyResp> {
  private static readonly pb::MessageParser<CreatePartyResp> _parser = new pb::MessageParser<CreatePartyResp>(() => new CreatePartyResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CreatePartyResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[41]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CreatePartyResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CreatePartyResp(CreatePartyResp other) : this() {
    partyId_ = other.partyId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CreatePartyResp Clone() {
    return new CreatePartyResp(this);
  }

  /// <summary>Field number for the "party_id" field.</summary>
  public const int PartyIdFieldNumber = 1;
  private int partyId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int PartyId {
    get { return partyId_; }
    set {
      partyId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CreatePartyResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CreatePartyResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PartyId != other.PartyId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (PartyId != 0) hash ^= PartyId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (PartyId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(PartyId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (PartyId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PartyId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CreatePartyResp other) {
    if (other == null) {
      return;
    }
    if (other.PartyId != 0) {
      PartyId = other.PartyId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          PartyId = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Update party
/// </summary>
public sealed partial class UpdatePartyReq : pb::IMessage<UpdatePartyReq> {
  private static readonly pb::MessageParser<UpdatePartyReq> _parser = new pb::MessageParser<UpdatePartyReq>(() => new UpdatePartyReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdatePartyReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[42]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdatePartyReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdatePartyReq(UpdatePartyReq other) : this() {
    partyId_ = other.partyId_;
    shareExp_ = other.shareExp_;
    shareItem_ = other.shareItem_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdatePartyReq Clone() {
    return new UpdatePartyReq(this);
  }

  /// <summary>Field number for the "party_id" field.</summary>
  public const int PartyIdFieldNumber = 1;
  private int partyId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int PartyId {
    get { return partyId_; }
    set {
      partyId_ = value;
    }
  }

  /// <summary>Field number for the "share_exp" field.</summary>
  public const int ShareExpFieldNumber = 2;
  private bool shareExp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool ShareExp {
    get { return shareExp_; }
    set {
      shareExp_ = value;
    }
  }

  /// <summary>Field number for the "share_item" field.</summary>
  public const int ShareItemFieldNumber = 3;
  private bool shareItem_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool ShareItem {
    get { return shareItem_; }
    set {
      shareItem_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdatePartyReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdatePartyReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PartyId != other.PartyId) return false;
    if (ShareExp != other.ShareExp) return false;
    if (ShareItem != other.ShareItem) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (PartyId != 0) hash ^= PartyId.GetHashCode();
    if (ShareExp != false) hash ^= ShareExp.GetHashCode();
    if (ShareItem != false) hash ^= ShareItem.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (PartyId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(PartyId);
    }
    if (ShareExp != false) {
      output.WriteRawTag(16);
      output.WriteBool(ShareExp);
    }
    if (ShareItem != false) {
      output.WriteRawTag(24);
      output.WriteBool(ShareItem);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (PartyId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PartyId);
    }
    if (ShareExp != false) {
      size += 1 + 1;
    }
    if (ShareItem != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdatePartyReq other) {
    if (other == null) {
      return;
    }
    if (other.PartyId != 0) {
      PartyId = other.PartyId;
    }
    if (other.ShareExp != false) {
      ShareExp = other.ShareExp;
    }
    if (other.ShareItem != false) {
      ShareItem = other.ShareItem;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          PartyId = input.ReadInt32();
          break;
        }
        case 16: {
          ShareExp = input.ReadBool();
          break;
        }
        case 24: {
          ShareItem = input.ReadBool();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Update party leader
/// </summary>
public sealed partial class UpdatePartyLeaderReq : pb::IMessage<UpdatePartyLeaderReq> {
  private static readonly pb::MessageParser<UpdatePartyLeaderReq> _parser = new pb::MessageParser<UpdatePartyLeaderReq>(() => new UpdatePartyLeaderReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdatePartyLeaderReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[43]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdatePartyLeaderReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdatePartyLeaderReq(UpdatePartyLeaderReq other) : this() {
    partyId_ = other.partyId_;
    leaderCharacterId_ = other.leaderCharacterId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdatePartyLeaderReq Clone() {
    return new UpdatePartyLeaderReq(this);
  }

  /// <summary>Field number for the "party_id" field.</summary>
  public const int PartyIdFieldNumber = 1;
  private int partyId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int PartyId {
    get { return partyId_; }
    set {
      partyId_ = value;
    }
  }

  /// <summary>Field number for the "leader_character_id" field.</summary>
  public const int LeaderCharacterIdFieldNumber = 2;
  private string leaderCharacterId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string LeaderCharacterId {
    get { return leaderCharacterId_; }
    set {
      leaderCharacterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdatePartyLeaderReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdatePartyLeaderReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PartyId != other.PartyId) return false;
    if (LeaderCharacterId != other.LeaderCharacterId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (PartyId != 0) hash ^= PartyId.GetHashCode();
    if (LeaderCharacterId.Length != 0) hash ^= LeaderCharacterId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (PartyId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(PartyId);
    }
    if (LeaderCharacterId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(LeaderCharacterId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (PartyId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PartyId);
    }
    if (LeaderCharacterId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(LeaderCharacterId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdatePartyLeaderReq other) {
    if (other == null) {
      return;
    }
    if (other.PartyId != 0) {
      PartyId = other.PartyId;
    }
    if (other.LeaderCharacterId.Length != 0) {
      LeaderCharacterId = other.LeaderCharacterId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          PartyId = input.ReadInt32();
          break;
        }
        case 18: {
          LeaderCharacterId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Delete party
/// </summary>
public sealed partial class DeletePartyReq : pb::IMessage<DeletePartyReq> {
  private static readonly pb::MessageParser<DeletePartyReq> _parser = new pb::MessageParser<DeletePartyReq>(() => new DeletePartyReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DeletePartyReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[44]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeletePartyReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeletePartyReq(DeletePartyReq other) : this() {
    partyId_ = other.partyId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeletePartyReq Clone() {
    return new DeletePartyReq(this);
  }

  /// <summary>Field number for the "party_id" field.</summary>
  public const int PartyIdFieldNumber = 1;
  private int partyId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int PartyId {
    get { return partyId_; }
    set {
      partyId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DeletePartyReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DeletePartyReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PartyId != other.PartyId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (PartyId != 0) hash ^= PartyId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (PartyId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(PartyId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (PartyId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PartyId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DeletePartyReq other) {
    if (other == null) {
      return;
    }
    if (other.PartyId != 0) {
      PartyId = other.PartyId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          PartyId = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Update character party
/// </summary>
public sealed partial class UpdateCharacterPartyReq : pb::IMessage<UpdateCharacterPartyReq> {
  private static readonly pb::MessageParser<UpdateCharacterPartyReq> _parser = new pb::MessageParser<UpdateCharacterPartyReq>(() => new UpdateCharacterPartyReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateCharacterPartyReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[45]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateCharacterPartyReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateCharacterPartyReq(UpdateCharacterPartyReq other) : this() {
    characterId_ = other.characterId_;
    partyId_ = other.partyId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateCharacterPartyReq Clone() {
    return new UpdateCharacterPartyReq(this);
  }

  /// <summary>Field number for the "character_id" field.</summary>
  public const int CharacterIdFieldNumber = 1;
  private string characterId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CharacterId {
    get { return characterId_; }
    set {
      characterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "party_id" field.</summary>
  public const int PartyIdFieldNumber = 2;
  private int partyId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int PartyId {
    get { return partyId_; }
    set {
      partyId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateCharacterPartyReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateCharacterPartyReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CharacterId != other.CharacterId) return false;
    if (PartyId != other.PartyId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CharacterId.Length != 0) hash ^= CharacterId.GetHashCode();
    if (PartyId != 0) hash ^= PartyId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CharacterId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(CharacterId);
    }
    if (PartyId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(PartyId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CharacterId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CharacterId);
    }
    if (PartyId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PartyId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateCharacterPartyReq other) {
    if (other == null) {
      return;
    }
    if (other.CharacterId.Length != 0) {
      CharacterId = other.CharacterId;
    }
    if (other.PartyId != 0) {
      PartyId = other.PartyId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          CharacterId = input.ReadString();
          break;
        }
        case 16: {
          PartyId = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Read party
/// </summary>
public sealed partial class ReadPartyReq : pb::IMessage<ReadPartyReq> {
  private static readonly pb::MessageParser<ReadPartyReq> _parser = new pb::MessageParser<ReadPartyReq>(() => new ReadPartyReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ReadPartyReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[46]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadPartyReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadPartyReq(ReadPartyReq other) : this() {
    partyId_ = other.partyId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadPartyReq Clone() {
    return new ReadPartyReq(this);
  }

  /// <summary>Field number for the "party_id" field.</summary>
  public const int PartyIdFieldNumber = 1;
  private int partyId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int PartyId {
    get { return partyId_; }
    set {
      partyId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ReadPartyReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ReadPartyReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PartyId != other.PartyId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (PartyId != 0) hash ^= PartyId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (PartyId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(PartyId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (PartyId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PartyId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ReadPartyReq other) {
    if (other == null) {
      return;
    }
    if (other.PartyId != 0) {
      PartyId = other.PartyId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          PartyId = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class ReadPartyResp : pb::IMessage<ReadPartyResp> {
  private static readonly pb::MessageParser<ReadPartyResp> _parser = new pb::MessageParser<ReadPartyResp>(() => new ReadPartyResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ReadPartyResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[47]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadPartyResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadPartyResp(ReadPartyResp other) : this() {
    partyId_ = other.partyId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadPartyResp Clone() {
    return new ReadPartyResp(this);
  }

  /// <summary>Field number for the "party_id" field.</summary>
  public const int PartyIdFieldNumber = 1;
  private pb::ByteString partyId_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString PartyId {
    get { return partyId_; }
    set {
      partyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ReadPartyResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ReadPartyResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PartyId != other.PartyId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (PartyId.Length != 0) hash ^= PartyId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (PartyId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteBytes(PartyId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (PartyId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(PartyId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ReadPartyResp other) {
    if (other == null) {
      return;
    }
    if (other.PartyId.Length != 0) {
      PartyId = other.PartyId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          PartyId = input.ReadBytes();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Create guild
/// </summary>
public sealed partial class CreateGuildReq : pb::IMessage<CreateGuildReq> {
  private static readonly pb::MessageParser<CreateGuildReq> _parser = new pb::MessageParser<CreateGuildReq>(() => new CreateGuildReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CreateGuildReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[48]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CreateGuildReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CreateGuildReq(CreateGuildReq other) : this() {
    guildName_ = other.guildName_;
    leaderCharacterId_ = other.leaderCharacterId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CreateGuildReq Clone() {
    return new CreateGuildReq(this);
  }

  /// <summary>Field number for the "guild_name" field.</summary>
  public const int GuildNameFieldNumber = 1;
  private string guildName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string GuildName {
    get { return guildName_; }
    set {
      guildName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "leader_character_id" field.</summary>
  public const int LeaderCharacterIdFieldNumber = 2;
  private string leaderCharacterId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string LeaderCharacterId {
    get { return leaderCharacterId_; }
    set {
      leaderCharacterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CreateGuildReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CreateGuildReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GuildName != other.GuildName) return false;
    if (LeaderCharacterId != other.LeaderCharacterId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GuildName.Length != 0) hash ^= GuildName.GetHashCode();
    if (LeaderCharacterId.Length != 0) hash ^= LeaderCharacterId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GuildName.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(GuildName);
    }
    if (LeaderCharacterId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(LeaderCharacterId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GuildName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(GuildName);
    }
    if (LeaderCharacterId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(LeaderCharacterId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CreateGuildReq other) {
    if (other == null) {
      return;
    }
    if (other.GuildName.Length != 0) {
      GuildName = other.GuildName;
    }
    if (other.LeaderCharacterId.Length != 0) {
      LeaderCharacterId = other.LeaderCharacterId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          GuildName = input.ReadString();
          break;
        }
        case 18: {
          LeaderCharacterId = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class CreateGuildResp : pb::IMessage<CreateGuildResp> {
  private static readonly pb::MessageParser<CreateGuildResp> _parser = new pb::MessageParser<CreateGuildResp>(() => new CreateGuildResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CreateGuildResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[49]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CreateGuildResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CreateGuildResp(CreateGuildResp other) : this() {
    guildId_ = other.guildId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CreateGuildResp Clone() {
    return new CreateGuildResp(this);
  }

  /// <summary>Field number for the "guild_id" field.</summary>
  public const int GuildIdFieldNumber = 1;
  private int guildId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int GuildId {
    get { return guildId_; }
    set {
      guildId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CreateGuildResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CreateGuildResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GuildId != other.GuildId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GuildId != 0) hash ^= GuildId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GuildId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(GuildId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GuildId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(GuildId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CreateGuildResp other) {
    if (other == null) {
      return;
    }
    if (other.GuildId != 0) {
      GuildId = other.GuildId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          GuildId = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Increase guild exp
/// </summary>
public sealed partial class IncreaseGuildExpReq : pb::IMessage<IncreaseGuildExpReq> {
  private static readonly pb::MessageParser<IncreaseGuildExpReq> _parser = new pb::MessageParser<IncreaseGuildExpReq>(() => new IncreaseGuildExpReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<IncreaseGuildExpReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[50]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public IncreaseGuildExpReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public IncreaseGuildExpReq(IncreaseGuildExpReq other) : this() {
    guildId_ = other.guildId_;
    increaseExp_ = other.increaseExp_;
    expTree_ = other.expTree_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public IncreaseGuildExpReq Clone() {
    return new IncreaseGuildExpReq(this);
  }

  /// <summary>Field number for the "guild_id" field.</summary>
  public const int GuildIdFieldNumber = 1;
  private int guildId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int GuildId {
    get { return guildId_; }
    set {
      guildId_ = value;
    }
  }

  /// <summary>Field number for the "increase_exp" field.</summary>
  public const int IncreaseExpFieldNumber = 2;
  private int increaseExp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int IncreaseExp {
    get { return increaseExp_; }
    set {
      increaseExp_ = value;
    }
  }

  /// <summary>Field number for the "exp_tree" field.</summary>
  public const int ExpTreeFieldNumber = 3;
  private static readonly pb::FieldCodec<int> _repeated_expTree_codec
      = pb::FieldCodec.ForInt32(26);
  private readonly pbc::RepeatedField<int> expTree_ = new pbc::RepeatedField<int>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> ExpTree {
    get { return expTree_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as IncreaseGuildExpReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(IncreaseGuildExpReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GuildId != other.GuildId) return false;
    if (IncreaseExp != other.IncreaseExp) return false;
    if(!expTree_.Equals(other.expTree_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GuildId != 0) hash ^= GuildId.GetHashCode();
    if (IncreaseExp != 0) hash ^= IncreaseExp.GetHashCode();
    hash ^= expTree_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GuildId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(GuildId);
    }
    if (IncreaseExp != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(IncreaseExp);
    }
    expTree_.WriteTo(output, _repeated_expTree_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GuildId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(GuildId);
    }
    if (IncreaseExp != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(IncreaseExp);
    }
    size += expTree_.CalculateSize(_repeated_expTree_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(IncreaseGuildExpReq other) {
    if (other == null) {
      return;
    }
    if (other.GuildId != 0) {
      GuildId = other.GuildId;
    }
    if (other.IncreaseExp != 0) {
      IncreaseExp = other.IncreaseExp;
    }
    expTree_.Add(other.expTree_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          GuildId = input.ReadInt32();
          break;
        }
        case 16: {
          IncreaseExp = input.ReadInt32();
          break;
        }
        case 26:
        case 24: {
          expTree_.AddEntriesFrom(input, _repeated_expTree_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class IncreaseGuildExpResp : pb::IMessage<IncreaseGuildExpResp> {
  private static readonly pb::MessageParser<IncreaseGuildExpResp> _parser = new pb::MessageParser<IncreaseGuildExpResp>(() => new IncreaseGuildExpResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<IncreaseGuildExpResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[51]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public IncreaseGuildExpResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public IncreaseGuildExpResp(IncreaseGuildExpResp other) : this() {
    isSuccess_ = other.isSuccess_;
    resultLevel_ = other.resultLevel_;
    resultExp_ = other.resultExp_;
    resultSkillPoint_ = other.resultSkillPoint_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public IncreaseGuildExpResp Clone() {
    return new IncreaseGuildExpResp(this);
  }

  /// <summary>Field number for the "is_success" field.</summary>
  public const int IsSuccessFieldNumber = 1;
  private bool isSuccess_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsSuccess {
    get { return isSuccess_; }
    set {
      isSuccess_ = value;
    }
  }

  /// <summary>Field number for the "result_level" field.</summary>
  public const int ResultLevelFieldNumber = 2;
  private int resultLevel_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ResultLevel {
    get { return resultLevel_; }
    set {
      resultLevel_ = value;
    }
  }

  /// <summary>Field number for the "result_exp" field.</summary>
  public const int ResultExpFieldNumber = 3;
  private int resultExp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ResultExp {
    get { return resultExp_; }
    set {
      resultExp_ = value;
    }
  }

  /// <summary>Field number for the "result_skill_point" field.</summary>
  public const int ResultSkillPointFieldNumber = 4;
  private int resultSkillPoint_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ResultSkillPoint {
    get { return resultSkillPoint_; }
    set {
      resultSkillPoint_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as IncreaseGuildExpResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(IncreaseGuildExpResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (IsSuccess != other.IsSuccess) return false;
    if (ResultLevel != other.ResultLevel) return false;
    if (ResultExp != other.ResultExp) return false;
    if (ResultSkillPoint != other.ResultSkillPoint) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (IsSuccess != false) hash ^= IsSuccess.GetHashCode();
    if (ResultLevel != 0) hash ^= ResultLevel.GetHashCode();
    if (ResultExp != 0) hash ^= ResultExp.GetHashCode();
    if (ResultSkillPoint != 0) hash ^= ResultSkillPoint.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (IsSuccess != false) {
      output.WriteRawTag(8);
      output.WriteBool(IsSuccess);
    }
    if (ResultLevel != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(ResultLevel);
    }
    if (ResultExp != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(ResultExp);
    }
    if (ResultSkillPoint != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(ResultSkillPoint);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (IsSuccess != false) {
      size += 1 + 1;
    }
    if (ResultLevel != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ResultLevel);
    }
    if (ResultExp != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ResultExp);
    }
    if (ResultSkillPoint != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ResultSkillPoint);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(IncreaseGuildExpResp other) {
    if (other == null) {
      return;
    }
    if (other.IsSuccess != false) {
      IsSuccess = other.IsSuccess;
    }
    if (other.ResultLevel != 0) {
      ResultLevel = other.ResultLevel;
    }
    if (other.ResultExp != 0) {
      ResultExp = other.ResultExp;
    }
    if (other.ResultSkillPoint != 0) {
      ResultSkillPoint = other.ResultSkillPoint;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          IsSuccess = input.ReadBool();
          break;
        }
        case 16: {
          ResultLevel = input.ReadInt32();
          break;
        }
        case 24: {
          ResultExp = input.ReadInt32();
          break;
        }
        case 32: {
          ResultSkillPoint = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Update guild leader
/// </summary>
public sealed partial class UpdateGuildLeaderReq : pb::IMessage<UpdateGuildLeaderReq> {
  private static readonly pb::MessageParser<UpdateGuildLeaderReq> _parser = new pb::MessageParser<UpdateGuildLeaderReq>(() => new UpdateGuildLeaderReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateGuildLeaderReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[52]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateGuildLeaderReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateGuildLeaderReq(UpdateGuildLeaderReq other) : this() {
    guildId_ = other.guildId_;
    leaderCharacterId_ = other.leaderCharacterId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateGuildLeaderReq Clone() {
    return new UpdateGuildLeaderReq(this);
  }

  /// <summary>Field number for the "guild_id" field.</summary>
  public const int GuildIdFieldNumber = 1;
  private int guildId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int GuildId {
    get { return guildId_; }
    set {
      guildId_ = value;
    }
  }

  /// <summary>Field number for the "leader_character_id" field.</summary>
  public const int LeaderCharacterIdFieldNumber = 2;
  private string leaderCharacterId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string LeaderCharacterId {
    get { return leaderCharacterId_; }
    set {
      leaderCharacterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateGuildLeaderReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateGuildLeaderReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GuildId != other.GuildId) return false;
    if (LeaderCharacterId != other.LeaderCharacterId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GuildId != 0) hash ^= GuildId.GetHashCode();
    if (LeaderCharacterId.Length != 0) hash ^= LeaderCharacterId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GuildId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(GuildId);
    }
    if (LeaderCharacterId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(LeaderCharacterId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GuildId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(GuildId);
    }
    if (LeaderCharacterId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(LeaderCharacterId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateGuildLeaderReq other) {
    if (other == null) {
      return;
    }
    if (other.GuildId != 0) {
      GuildId = other.GuildId;
    }
    if (other.LeaderCharacterId.Length != 0) {
      LeaderCharacterId = other.LeaderCharacterId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          GuildId = input.ReadInt32();
          break;
        }
        case 18: {
          LeaderCharacterId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Update guild message
/// </summary>
public sealed partial class UpdateGuildMessageReq : pb::IMessage<UpdateGuildMessageReq> {
  private static readonly pb::MessageParser<UpdateGuildMessageReq> _parser = new pb::MessageParser<UpdateGuildMessageReq>(() => new UpdateGuildMessageReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateGuildMessageReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[53]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateGuildMessageReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateGuildMessageReq(UpdateGuildMessageReq other) : this() {
    guildId_ = other.guildId_;
    guildMessage_ = other.guildMessage_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateGuildMessageReq Clone() {
    return new UpdateGuildMessageReq(this);
  }

  /// <summary>Field number for the "guild_id" field.</summary>
  public const int GuildIdFieldNumber = 1;
  private int guildId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int GuildId {
    get { return guildId_; }
    set {
      guildId_ = value;
    }
  }

  /// <summary>Field number for the "guild_message" field.</summary>
  public const int GuildMessageFieldNumber = 2;
  private string guildMessage_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string GuildMessage {
    get { return guildMessage_; }
    set {
      guildMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateGuildMessageReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateGuildMessageReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GuildId != other.GuildId) return false;
    if (GuildMessage != other.GuildMessage) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GuildId != 0) hash ^= GuildId.GetHashCode();
    if (GuildMessage.Length != 0) hash ^= GuildMessage.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GuildId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(GuildId);
    }
    if (GuildMessage.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(GuildMessage);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GuildId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(GuildId);
    }
    if (GuildMessage.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(GuildMessage);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateGuildMessageReq other) {
    if (other == null) {
      return;
    }
    if (other.GuildId != 0) {
      GuildId = other.GuildId;
    }
    if (other.GuildMessage.Length != 0) {
      GuildMessage = other.GuildMessage;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          GuildId = input.ReadInt32();
          break;
        }
        case 18: {
          GuildMessage = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Update guild role
/// </summary>
public sealed partial class UpdateGuildRoleReq : pb::IMessage<UpdateGuildRoleReq> {
  private static readonly pb::MessageParser<UpdateGuildRoleReq> _parser = new pb::MessageParser<UpdateGuildRoleReq>(() => new UpdateGuildRoleReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateGuildRoleReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[54]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateGuildRoleReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateGuildRoleReq(UpdateGuildRoleReq other) : this() {
    guildId_ = other.guildId_;
    guildRole_ = other.guildRole_;
    roleName_ = other.roleName_;
    canInvite_ = other.canInvite_;
    canKick_ = other.canKick_;
    shareExpPercentage_ = other.shareExpPercentage_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateGuildRoleReq Clone() {
    return new UpdateGuildRoleReq(this);
  }

  /// <summary>Field number for the "guild_id" field.</summary>
  public const int GuildIdFieldNumber = 1;
  private int guildId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int GuildId {
    get { return guildId_; }
    set {
      guildId_ = value;
    }
  }

  /// <summary>Field number for the "guild_role" field.</summary>
  public const int GuildRoleFieldNumber = 2;
  private uint guildRole_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint GuildRole {
    get { return guildRole_; }
    set {
      guildRole_ = value;
    }
  }

  /// <summary>Field number for the "role_name" field.</summary>
  public const int RoleNameFieldNumber = 3;
  private string roleName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RoleName {
    get { return roleName_; }
    set {
      roleName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "can_invite" field.</summary>
  public const int CanInviteFieldNumber = 4;
  private bool canInvite_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool CanInvite {
    get { return canInvite_; }
    set {
      canInvite_ = value;
    }
  }

  /// <summary>Field number for the "can_kick" field.</summary>
  public const int CanKickFieldNumber = 5;
  private bool canKick_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool CanKick {
    get { return canKick_; }
    set {
      canKick_ = value;
    }
  }

  /// <summary>Field number for the "share_exp_percentage" field.</summary>
  public const int ShareExpPercentageFieldNumber = 6;
  private uint shareExpPercentage_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ShareExpPercentage {
    get { return shareExpPercentage_; }
    set {
      shareExpPercentage_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateGuildRoleReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateGuildRoleReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GuildId != other.GuildId) return false;
    if (GuildRole != other.GuildRole) return false;
    if (RoleName != other.RoleName) return false;
    if (CanInvite != other.CanInvite) return false;
    if (CanKick != other.CanKick) return false;
    if (ShareExpPercentage != other.ShareExpPercentage) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GuildId != 0) hash ^= GuildId.GetHashCode();
    if (GuildRole != 0) hash ^= GuildRole.GetHashCode();
    if (RoleName.Length != 0) hash ^= RoleName.GetHashCode();
    if (CanInvite != false) hash ^= CanInvite.GetHashCode();
    if (CanKick != false) hash ^= CanKick.GetHashCode();
    if (ShareExpPercentage != 0) hash ^= ShareExpPercentage.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GuildId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(GuildId);
    }
    if (GuildRole != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(GuildRole);
    }
    if (RoleName.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(RoleName);
    }
    if (CanInvite != false) {
      output.WriteRawTag(32);
      output.WriteBool(CanInvite);
    }
    if (CanKick != false) {
      output.WriteRawTag(40);
      output.WriteBool(CanKick);
    }
    if (ShareExpPercentage != 0) {
      output.WriteRawTag(48);
      output.WriteUInt32(ShareExpPercentage);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GuildId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(GuildId);
    }
    if (GuildRole != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GuildRole);
    }
    if (RoleName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RoleName);
    }
    if (CanInvite != false) {
      size += 1 + 1;
    }
    if (CanKick != false) {
      size += 1 + 1;
    }
    if (ShareExpPercentage != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ShareExpPercentage);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateGuildRoleReq other) {
    if (other == null) {
      return;
    }
    if (other.GuildId != 0) {
      GuildId = other.GuildId;
    }
    if (other.GuildRole != 0) {
      GuildRole = other.GuildRole;
    }
    if (other.RoleName.Length != 0) {
      RoleName = other.RoleName;
    }
    if (other.CanInvite != false) {
      CanInvite = other.CanInvite;
    }
    if (other.CanKick != false) {
      CanKick = other.CanKick;
    }
    if (other.ShareExpPercentage != 0) {
      ShareExpPercentage = other.ShareExpPercentage;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          GuildId = input.ReadInt32();
          break;
        }
        case 16: {
          GuildRole = input.ReadUInt32();
          break;
        }
        case 26: {
          RoleName = input.ReadString();
          break;
        }
        case 32: {
          CanInvite = input.ReadBool();
          break;
        }
        case 40: {
          CanKick = input.ReadBool();
          break;
        }
        case 48: {
          ShareExpPercentage = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Update guild member role
/// </summary>
public sealed partial class UpdateGuildMemberRoleReq : pb::IMessage<UpdateGuildMemberRoleReq> {
  private static readonly pb::MessageParser<UpdateGuildMemberRoleReq> _parser = new pb::MessageParser<UpdateGuildMemberRoleReq>(() => new UpdateGuildMemberRoleReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateGuildMemberRoleReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[55]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateGuildMemberRoleReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateGuildMemberRoleReq(UpdateGuildMemberRoleReq other) : this() {
    memberCharacterId_ = other.memberCharacterId_;
    guildRole_ = other.guildRole_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateGuildMemberRoleReq Clone() {
    return new UpdateGuildMemberRoleReq(this);
  }

  /// <summary>Field number for the "member_character_id" field.</summary>
  public const int MemberCharacterIdFieldNumber = 1;
  private string memberCharacterId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string MemberCharacterId {
    get { return memberCharacterId_; }
    set {
      memberCharacterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "guild_role" field.</summary>
  public const int GuildRoleFieldNumber = 2;
  private uint guildRole_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint GuildRole {
    get { return guildRole_; }
    set {
      guildRole_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateGuildMemberRoleReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateGuildMemberRoleReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (MemberCharacterId != other.MemberCharacterId) return false;
    if (GuildRole != other.GuildRole) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (MemberCharacterId.Length != 0) hash ^= MemberCharacterId.GetHashCode();
    if (GuildRole != 0) hash ^= GuildRole.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (MemberCharacterId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(MemberCharacterId);
    }
    if (GuildRole != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(GuildRole);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (MemberCharacterId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberCharacterId);
    }
    if (GuildRole != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GuildRole);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateGuildMemberRoleReq other) {
    if (other == null) {
      return;
    }
    if (other.MemberCharacterId.Length != 0) {
      MemberCharacterId = other.MemberCharacterId;
    }
    if (other.GuildRole != 0) {
      GuildRole = other.GuildRole;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          MemberCharacterId = input.ReadString();
          break;
        }
        case 16: {
          GuildRole = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Update guild skill level
/// </summary>
public sealed partial class UpdateGuildSkillLevelReq : pb::IMessage<UpdateGuildSkillLevelReq> {
  private static readonly pb::MessageParser<UpdateGuildSkillLevelReq> _parser = new pb::MessageParser<UpdateGuildSkillLevelReq>(() => new UpdateGuildSkillLevelReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateGuildSkillLevelReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[56]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateGuildSkillLevelReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateGuildSkillLevelReq(UpdateGuildSkillLevelReq other) : this() {
    guildId_ = other.guildId_;
    dataId_ = other.dataId_;
    level_ = other.level_;
    skillPoint_ = other.skillPoint_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateGuildSkillLevelReq Clone() {
    return new UpdateGuildSkillLevelReq(this);
  }

  /// <summary>Field number for the "guild_id" field.</summary>
  public const int GuildIdFieldNumber = 1;
  private int guildId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int GuildId {
    get { return guildId_; }
    set {
      guildId_ = value;
    }
  }

  /// <summary>Field number for the "data_id" field.</summary>
  public const int DataIdFieldNumber = 2;
  private int dataId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int DataId {
    get { return dataId_; }
    set {
      dataId_ = value;
    }
  }

  /// <summary>Field number for the "level" field.</summary>
  public const int LevelFieldNumber = 3;
  private int level_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Level {
    get { return level_; }
    set {
      level_ = value;
    }
  }

  /// <summary>Field number for the "skill_point" field.</summary>
  public const int SkillPointFieldNumber = 4;
  private int skillPoint_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int SkillPoint {
    get { return skillPoint_; }
    set {
      skillPoint_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateGuildSkillLevelReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateGuildSkillLevelReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GuildId != other.GuildId) return false;
    if (DataId != other.DataId) return false;
    if (Level != other.Level) return false;
    if (SkillPoint != other.SkillPoint) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GuildId != 0) hash ^= GuildId.GetHashCode();
    if (DataId != 0) hash ^= DataId.GetHashCode();
    if (Level != 0) hash ^= Level.GetHashCode();
    if (SkillPoint != 0) hash ^= SkillPoint.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GuildId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(GuildId);
    }
    if (DataId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(DataId);
    }
    if (Level != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Level);
    }
    if (SkillPoint != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(SkillPoint);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GuildId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(GuildId);
    }
    if (DataId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(DataId);
    }
    if (Level != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
    }
    if (SkillPoint != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(SkillPoint);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateGuildSkillLevelReq other) {
    if (other == null) {
      return;
    }
    if (other.GuildId != 0) {
      GuildId = other.GuildId;
    }
    if (other.DataId != 0) {
      DataId = other.DataId;
    }
    if (other.Level != 0) {
      Level = other.Level;
    }
    if (other.SkillPoint != 0) {
      SkillPoint = other.SkillPoint;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          GuildId = input.ReadInt32();
          break;
        }
        case 16: {
          DataId = input.ReadInt32();
          break;
        }
        case 24: {
          Level = input.ReadInt32();
          break;
        }
        case 32: {
          SkillPoint = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Update character guild
/// </summary>
public sealed partial class UpdateCharacterGuildReq : pb::IMessage<UpdateCharacterGuildReq> {
  private static readonly pb::MessageParser<UpdateCharacterGuildReq> _parser = new pb::MessageParser<UpdateCharacterGuildReq>(() => new UpdateCharacterGuildReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateCharacterGuildReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[57]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateCharacterGuildReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateCharacterGuildReq(UpdateCharacterGuildReq other) : this() {
    characterId_ = other.characterId_;
    guildId_ = other.guildId_;
    guildRole_ = other.guildRole_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateCharacterGuildReq Clone() {
    return new UpdateCharacterGuildReq(this);
  }

  /// <summary>Field number for the "character_id" field.</summary>
  public const int CharacterIdFieldNumber = 1;
  private string characterId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CharacterId {
    get { return characterId_; }
    set {
      characterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "guild_id" field.</summary>
  public const int GuildIdFieldNumber = 2;
  private int guildId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int GuildId {
    get { return guildId_; }
    set {
      guildId_ = value;
    }
  }

  /// <summary>Field number for the "guild_role" field.</summary>
  public const int GuildRoleFieldNumber = 3;
  private uint guildRole_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint GuildRole {
    get { return guildRole_; }
    set {
      guildRole_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateCharacterGuildReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateCharacterGuildReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CharacterId != other.CharacterId) return false;
    if (GuildId != other.GuildId) return false;
    if (GuildRole != other.GuildRole) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CharacterId.Length != 0) hash ^= CharacterId.GetHashCode();
    if (GuildId != 0) hash ^= GuildId.GetHashCode();
    if (GuildRole != 0) hash ^= GuildRole.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CharacterId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(CharacterId);
    }
    if (GuildId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(GuildId);
    }
    if (GuildRole != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(GuildRole);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CharacterId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CharacterId);
    }
    if (GuildId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(GuildId);
    }
    if (GuildRole != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GuildRole);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateCharacterGuildReq other) {
    if (other == null) {
      return;
    }
    if (other.CharacterId.Length != 0) {
      CharacterId = other.CharacterId;
    }
    if (other.GuildId != 0) {
      GuildId = other.GuildId;
    }
    if (other.GuildRole != 0) {
      GuildRole = other.GuildRole;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          CharacterId = input.ReadString();
          break;
        }
        case 16: {
          GuildId = input.ReadInt32();
          break;
        }
        case 24: {
          GuildRole = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Delete guild
/// </summary>
public sealed partial class DeleteGuildReq : pb::IMessage<DeleteGuildReq> {
  private static readonly pb::MessageParser<DeleteGuildReq> _parser = new pb::MessageParser<DeleteGuildReq>(() => new DeleteGuildReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DeleteGuildReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[58]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteGuildReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteGuildReq(DeleteGuildReq other) : this() {
    guildId_ = other.guildId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteGuildReq Clone() {
    return new DeleteGuildReq(this);
  }

  /// <summary>Field number for the "guild_id" field.</summary>
  public const int GuildIdFieldNumber = 1;
  private int guildId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int GuildId {
    get { return guildId_; }
    set {
      guildId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DeleteGuildReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DeleteGuildReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GuildId != other.GuildId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GuildId != 0) hash ^= GuildId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GuildId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(GuildId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GuildId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(GuildId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DeleteGuildReq other) {
    if (other == null) {
      return;
    }
    if (other.GuildId != 0) {
      GuildId = other.GuildId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          GuildId = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Find guild name
/// </summary>
public sealed partial class FindGuildNameReq : pb::IMessage<FindGuildNameReq> {
  private static readonly pb::MessageParser<FindGuildNameReq> _parser = new pb::MessageParser<FindGuildNameReq>(() => new FindGuildNameReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<FindGuildNameReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[59]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FindGuildNameReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FindGuildNameReq(FindGuildNameReq other) : this() {
    guildName_ = other.guildName_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FindGuildNameReq Clone() {
    return new FindGuildNameReq(this);
  }

  /// <summary>Field number for the "guild_name" field.</summary>
  public const int GuildNameFieldNumber = 1;
  private string guildName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string GuildName {
    get { return guildName_; }
    set {
      guildName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as FindGuildNameReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(FindGuildNameReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GuildName != other.GuildName) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GuildName.Length != 0) hash ^= GuildName.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GuildName.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(GuildName);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GuildName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(GuildName);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(FindGuildNameReq other) {
    if (other == null) {
      return;
    }
    if (other.GuildName.Length != 0) {
      GuildName = other.GuildName;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          GuildName = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class FindGuildNameResp : pb::IMessage<FindGuildNameResp> {
  private static readonly pb::MessageParser<FindGuildNameResp> _parser = new pb::MessageParser<FindGuildNameResp>(() => new FindGuildNameResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<FindGuildNameResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[60]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FindGuildNameResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FindGuildNameResp(FindGuildNameResp other) : this() {
    foundAmount_ = other.foundAmount_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FindGuildNameResp Clone() {
    return new FindGuildNameResp(this);
  }

  /// <summary>Field number for the "found_amount" field.</summary>
  public const int FoundAmountFieldNumber = 1;
  private long foundAmount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long FoundAmount {
    get { return foundAmount_; }
    set {
      foundAmount_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as FindGuildNameResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(FindGuildNameResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (FoundAmount != other.FoundAmount) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (FoundAmount != 0L) hash ^= FoundAmount.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (FoundAmount != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(FoundAmount);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (FoundAmount != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(FoundAmount);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(FindGuildNameResp other) {
    if (other == null) {
      return;
    }
    if (other.FoundAmount != 0L) {
      FoundAmount = other.FoundAmount;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          FoundAmount = input.ReadInt64();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Read guild
/// </summary>
public sealed partial class ReadGuildReq : pb::IMessage<ReadGuildReq> {
  private static readonly pb::MessageParser<ReadGuildReq> _parser = new pb::MessageParser<ReadGuildReq>(() => new ReadGuildReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ReadGuildReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[61]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadGuildReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadGuildReq(ReadGuildReq other) : this() {
    guildId_ = other.guildId_;
    defaultGuildRoles_ = other.defaultGuildRoles_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadGuildReq Clone() {
    return new ReadGuildReq(this);
  }

  /// <summary>Field number for the "guild_id" field.</summary>
  public const int GuildIdFieldNumber = 1;
  private int guildId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int GuildId {
    get { return guildId_; }
    set {
      guildId_ = value;
    }
  }

  /// <summary>Field number for the "default_guild_roles" field.</summary>
  public const int DefaultGuildRolesFieldNumber = 2;
  private static readonly pb::FieldCodec<pb::ByteString> _repeated_defaultGuildRoles_codec
      = pb::FieldCodec.ForBytes(18);
  private readonly pbc::RepeatedField<pb::ByteString> defaultGuildRoles_ = new pbc::RepeatedField<pb::ByteString>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<pb::ByteString> DefaultGuildRoles {
    get { return defaultGuildRoles_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ReadGuildReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ReadGuildReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GuildId != other.GuildId) return false;
    if(!defaultGuildRoles_.Equals(other.defaultGuildRoles_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GuildId != 0) hash ^= GuildId.GetHashCode();
    hash ^= defaultGuildRoles_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GuildId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(GuildId);
    }
    defaultGuildRoles_.WriteTo(output, _repeated_defaultGuildRoles_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GuildId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(GuildId);
    }
    size += defaultGuildRoles_.CalculateSize(_repeated_defaultGuildRoles_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ReadGuildReq other) {
    if (other == null) {
      return;
    }
    if (other.GuildId != 0) {
      GuildId = other.GuildId;
    }
    defaultGuildRoles_.Add(other.defaultGuildRoles_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          GuildId = input.ReadInt32();
          break;
        }
        case 18: {
          defaultGuildRoles_.AddEntriesFrom(input, _repeated_defaultGuildRoles_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class ReadGuildResp : pb::IMessage<ReadGuildResp> {
  private static readonly pb::MessageParser<ReadGuildResp> _parser = new pb::MessageParser<ReadGuildResp>(() => new ReadGuildResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ReadGuildResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[62]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadGuildResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadGuildResp(ReadGuildResp other) : this() {
    guildData_ = other.guildData_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadGuildResp Clone() {
    return new ReadGuildResp(this);
  }

  /// <summary>Field number for the "guild_data" field.</summary>
  public const int GuildDataFieldNumber = 1;
  private pb::ByteString guildData_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString GuildData {
    get { return guildData_; }
    set {
      guildData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ReadGuildResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ReadGuildResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GuildData != other.GuildData) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GuildData.Length != 0) hash ^= GuildData.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GuildData.Length != 0) {
      output.WriteRawTag(10);
      output.WriteBytes(GuildData);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GuildData.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(GuildData);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ReadGuildResp other) {
    if (other == null) {
      return;
    }
    if (other.GuildData.Length != 0) {
      GuildData = other.GuildData;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          GuildData = input.ReadBytes();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Get guild gold
/// </summary>
public sealed partial class GetGuildGoldReq : pb::IMessage<GetGuildGoldReq> {
  private static readonly pb::MessageParser<GetGuildGoldReq> _parser = new pb::MessageParser<GetGuildGoldReq>(() => new GetGuildGoldReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetGuildGoldReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[63]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetGuildGoldReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetGuildGoldReq(GetGuildGoldReq other) : this() {
    guildId_ = other.guildId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetGuildGoldReq Clone() {
    return new GetGuildGoldReq(this);
  }

  /// <summary>Field number for the "guild_id" field.</summary>
  public const int GuildIdFieldNumber = 1;
  private int guildId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int GuildId {
    get { return guildId_; }
    set {
      guildId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetGuildGoldReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetGuildGoldReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GuildId != other.GuildId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GuildId != 0) hash ^= GuildId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GuildId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(GuildId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GuildId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(GuildId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetGuildGoldReq other) {
    if (other == null) {
      return;
    }
    if (other.GuildId != 0) {
      GuildId = other.GuildId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          GuildId = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Increase guild gold
/// </summary>
public sealed partial class IncreaseGuildGoldReq : pb::IMessage<IncreaseGuildGoldReq> {
  private static readonly pb::MessageParser<IncreaseGuildGoldReq> _parser = new pb::MessageParser<IncreaseGuildGoldReq>(() => new IncreaseGuildGoldReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<IncreaseGuildGoldReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[64]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public IncreaseGuildGoldReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public IncreaseGuildGoldReq(IncreaseGuildGoldReq other) : this() {
    guildId_ = other.guildId_;
    amount_ = other.amount_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public IncreaseGuildGoldReq Clone() {
    return new IncreaseGuildGoldReq(this);
  }

  /// <summary>Field number for the "guild_id" field.</summary>
  public const int GuildIdFieldNumber = 1;
  private int guildId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int GuildId {
    get { return guildId_; }
    set {
      guildId_ = value;
    }
  }

  /// <summary>Field number for the "amount" field.</summary>
  public const int AmountFieldNumber = 2;
  private int amount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Amount {
    get { return amount_; }
    set {
      amount_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as IncreaseGuildGoldReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(IncreaseGuildGoldReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GuildId != other.GuildId) return false;
    if (Amount != other.Amount) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GuildId != 0) hash ^= GuildId.GetHashCode();
    if (Amount != 0) hash ^= Amount.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GuildId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(GuildId);
    }
    if (Amount != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Amount);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GuildId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(GuildId);
    }
    if (Amount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Amount);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(IncreaseGuildGoldReq other) {
    if (other == null) {
      return;
    }
    if (other.GuildId != 0) {
      GuildId = other.GuildId;
    }
    if (other.Amount != 0) {
      Amount = other.Amount;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          GuildId = input.ReadInt32();
          break;
        }
        case 16: {
          Amount = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Decrease guild gold
/// </summary>
public sealed partial class DecreaseGuildGoldReq : pb::IMessage<DecreaseGuildGoldReq> {
  private static readonly pb::MessageParser<DecreaseGuildGoldReq> _parser = new pb::MessageParser<DecreaseGuildGoldReq>(() => new DecreaseGuildGoldReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DecreaseGuildGoldReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[65]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DecreaseGuildGoldReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DecreaseGuildGoldReq(DecreaseGuildGoldReq other) : this() {
    guildId_ = other.guildId_;
    amount_ = other.amount_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DecreaseGuildGoldReq Clone() {
    return new DecreaseGuildGoldReq(this);
  }

  /// <summary>Field number for the "guild_id" field.</summary>
  public const int GuildIdFieldNumber = 1;
  private int guildId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int GuildId {
    get { return guildId_; }
    set {
      guildId_ = value;
    }
  }

  /// <summary>Field number for the "amount" field.</summary>
  public const int AmountFieldNumber = 2;
  private int amount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Amount {
    get { return amount_; }
    set {
      amount_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DecreaseGuildGoldReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DecreaseGuildGoldReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GuildId != other.GuildId) return false;
    if (Amount != other.Amount) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GuildId != 0) hash ^= GuildId.GetHashCode();
    if (Amount != 0) hash ^= Amount.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GuildId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(GuildId);
    }
    if (Amount != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Amount);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GuildId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(GuildId);
    }
    if (Amount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Amount);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DecreaseGuildGoldReq other) {
    if (other == null) {
      return;
    }
    if (other.GuildId != 0) {
      GuildId = other.GuildId;
    }
    if (other.Amount != 0) {
      Amount = other.Amount;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          GuildId = input.ReadInt32();
          break;
        }
        case 16: {
          Amount = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Update storage items
/// </summary>
public sealed partial class UpdateStorageItemsReq : pb::IMessage<UpdateStorageItemsReq> {
  private static readonly pb::MessageParser<UpdateStorageItemsReq> _parser = new pb::MessageParser<UpdateStorageItemsReq>(() => new UpdateStorageItemsReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateStorageItemsReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[66]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateStorageItemsReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateStorageItemsReq(UpdateStorageItemsReq other) : this() {
    storageType_ = other.storageType_;
    storageOwnerId_ = other.storageOwnerId_;
    storageCharacterItems_ = other.storageCharacterItems_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateStorageItemsReq Clone() {
    return new UpdateStorageItemsReq(this);
  }

  /// <summary>Field number for the "storage_type" field.</summary>
  public const int StorageTypeFieldNumber = 1;
  private global::EStorageType storageType_ = global::EStorageType.None;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::EStorageType StorageType {
    get { return storageType_; }
    set {
      storageType_ = value;
    }
  }

  /// <summary>Field number for the "storage_owner_id" field.</summary>
  public const int StorageOwnerIdFieldNumber = 2;
  private string storageOwnerId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string StorageOwnerId {
    get { return storageOwnerId_; }
    set {
      storageOwnerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "storage_character_items" field.</summary>
  public const int StorageCharacterItemsFieldNumber = 3;
  private static readonly pb::FieldCodec<pb::ByteString> _repeated_storageCharacterItems_codec
      = pb::FieldCodec.ForBytes(26);
  private readonly pbc::RepeatedField<pb::ByteString> storageCharacterItems_ = new pbc::RepeatedField<pb::ByteString>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<pb::ByteString> StorageCharacterItems {
    get { return storageCharacterItems_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateStorageItemsReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateStorageItemsReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (StorageType != other.StorageType) return false;
    if (StorageOwnerId != other.StorageOwnerId) return false;
    if(!storageCharacterItems_.Equals(other.storageCharacterItems_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (StorageType != global::EStorageType.None) hash ^= StorageType.GetHashCode();
    if (StorageOwnerId.Length != 0) hash ^= StorageOwnerId.GetHashCode();
    hash ^= storageCharacterItems_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (StorageType != global::EStorageType.None) {
      output.WriteRawTag(8);
      output.WriteEnum((int) StorageType);
    }
    if (StorageOwnerId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(StorageOwnerId);
    }
    storageCharacterItems_.WriteTo(output, _repeated_storageCharacterItems_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (StorageType != global::EStorageType.None) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) StorageType);
    }
    if (StorageOwnerId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(StorageOwnerId);
    }
    size += storageCharacterItems_.CalculateSize(_repeated_storageCharacterItems_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateStorageItemsReq other) {
    if (other == null) {
      return;
    }
    if (other.StorageType != global::EStorageType.None) {
      StorageType = other.StorageType;
    }
    if (other.StorageOwnerId.Length != 0) {
      StorageOwnerId = other.StorageOwnerId;
    }
    storageCharacterItems_.Add(other.storageCharacterItems_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          StorageType = (global::EStorageType) input.ReadEnum();
          break;
        }
        case 18: {
          StorageOwnerId = input.ReadString();
          break;
        }
        case 26: {
          storageCharacterItems_.AddEntriesFrom(input, _repeated_storageCharacterItems_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Read storage items
/// </summary>
public sealed partial class ReadStorageItemsReq : pb::IMessage<ReadStorageItemsReq> {
  private static readonly pb::MessageParser<ReadStorageItemsReq> _parser = new pb::MessageParser<ReadStorageItemsReq>(() => new ReadStorageItemsReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ReadStorageItemsReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[67]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadStorageItemsReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadStorageItemsReq(ReadStorageItemsReq other) : this() {
    storageType_ = other.storageType_;
    storageOwnerId_ = other.storageOwnerId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadStorageItemsReq Clone() {
    return new ReadStorageItemsReq(this);
  }

  /// <summary>Field number for the "storage_type" field.</summary>
  public const int StorageTypeFieldNumber = 1;
  private global::EStorageType storageType_ = global::EStorageType.None;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::EStorageType StorageType {
    get { return storageType_; }
    set {
      storageType_ = value;
    }
  }

  /// <summary>Field number for the "storage_owner_id" field.</summary>
  public const int StorageOwnerIdFieldNumber = 2;
  private string storageOwnerId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string StorageOwnerId {
    get { return storageOwnerId_; }
    set {
      storageOwnerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ReadStorageItemsReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ReadStorageItemsReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (StorageType != other.StorageType) return false;
    if (StorageOwnerId != other.StorageOwnerId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (StorageType != global::EStorageType.None) hash ^= StorageType.GetHashCode();
    if (StorageOwnerId.Length != 0) hash ^= StorageOwnerId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (StorageType != global::EStorageType.None) {
      output.WriteRawTag(8);
      output.WriteEnum((int) StorageType);
    }
    if (StorageOwnerId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(StorageOwnerId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (StorageType != global::EStorageType.None) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) StorageType);
    }
    if (StorageOwnerId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(StorageOwnerId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ReadStorageItemsReq other) {
    if (other == null) {
      return;
    }
    if (other.StorageType != global::EStorageType.None) {
      StorageType = other.StorageType;
    }
    if (other.StorageOwnerId.Length != 0) {
      StorageOwnerId = other.StorageOwnerId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          StorageType = (global::EStorageType) input.ReadEnum();
          break;
        }
        case 18: {
          StorageOwnerId = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class ReadStorageItemsResp : pb::IMessage<ReadStorageItemsResp> {
  private static readonly pb::MessageParser<ReadStorageItemsResp> _parser = new pb::MessageParser<ReadStorageItemsResp>(() => new ReadStorageItemsResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ReadStorageItemsResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[68]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadStorageItemsResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadStorageItemsResp(ReadStorageItemsResp other) : this() {
    storageCharacterItems_ = other.storageCharacterItems_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadStorageItemsResp Clone() {
    return new ReadStorageItemsResp(this);
  }

  /// <summary>Field number for the "storage_character_items" field.</summary>
  public const int StorageCharacterItemsFieldNumber = 1;
  private static readonly pb::FieldCodec<pb::ByteString> _repeated_storageCharacterItems_codec
      = pb::FieldCodec.ForBytes(10);
  private readonly pbc::RepeatedField<pb::ByteString> storageCharacterItems_ = new pbc::RepeatedField<pb::ByteString>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<pb::ByteString> StorageCharacterItems {
    get { return storageCharacterItems_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ReadStorageItemsResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ReadStorageItemsResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!storageCharacterItems_.Equals(other.storageCharacterItems_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= storageCharacterItems_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    storageCharacterItems_.WriteTo(output, _repeated_storageCharacterItems_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += storageCharacterItems_.CalculateSize(_repeated_storageCharacterItems_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ReadStorageItemsResp other) {
    if (other == null) {
      return;
    }
    storageCharacterItems_.Add(other.storageCharacterItems_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          storageCharacterItems_.AddEntriesFrom(input, _repeated_storageCharacterItems_codec);
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
