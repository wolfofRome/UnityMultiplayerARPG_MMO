// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: database_service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from database_service.proto</summary>
public static partial class DatabaseServiceReflection {

  #region Descriptor
  /// <summary>File descriptor for database_service.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static DatabaseServiceReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChZkYXRhYmFzZV9zZXJ2aWNlLnByb3RvIjMKEkl0ZW1JbmRleEFtb3VudE1h",
          "cBINCgVpbmRleBgBIAEoBRIOCgZhbW91bnQYAiABKAUiCgoIVm9pZFJlc3Ai",
          "GAoIR29sZFJlc3ASDAoEZ29sZBgBIAEoBSIYCghDYXNoUmVzcBIMCgRjYXNo",
          "GAEgASgFIiMKDUd1aWxkR29sZFJlc3ASEgoKZ3VpbGRfZ29sZBgBIAEoBSI6",
          "ChRWYWxpZGF0ZVVzZXJMb2dpblJlcRIQCgh1c2VybmFtZRgBIAEoCRIQCghw",
          "YXNzd29yZBgCIAEoCSIoChVWYWxpZGF0ZVVzZXJMb2dpblJlc3ASDwoHdXNl",
          "cl9pZBgBIAEoCSI/ChZWYWxpZGF0ZUFjY2Vzc1Rva2VuUmVxEg8KB3VzZXJf",
          "aWQYASABKAkSFAoMYWNjZXNzX3Rva2VuGAIgASgJIioKF1ZhbGlkYXRlQWNj",
          "ZXNzVG9rZW5SZXNwEg8KB2lzX3Bhc3MYASABKAgiIgoPR2V0VXNlckxldmVs",
          "UmVxEg8KB3VzZXJfaWQYASABKAkiJgoQR2V0VXNlckxldmVsUmVzcBISCgp1",
          "c2VyX2xldmVsGAEgASgNIh0KCkdldEdvbGRSZXESDwoHdXNlcl9pZBgBIAEo",
          "CSI3Cg1DaGFuZ2VHb2xkUmVxEg8KB3VzZXJfaWQYASABKAkSFQoNY2hhbmdl",
          "X2Ftb3VudBgCIAEoBSIdCgpHZXRDYXNoUmVxEg8KB3VzZXJfaWQYASABKAki",
          "NwoNQ2hhbmdlQ2FzaFJlcRIPCgd1c2VyX2lkGAEgASgJEhUKDWNoYW5nZV9h",
          "bW91bnQYAiABKAUiPQoUVXBkYXRlQWNjZXNzVG9rZW5SZXESDwoHdXNlcl9p",
          "ZBgBIAEoCRIUCgxhY2Nlc3NfdG9rZW4YAiABKAkiOAoSQ3JlYXRlVXNlckxv",
          "Z2luUmVxEhAKCHVzZXJuYW1lGAEgASgJEhAKCHBhc3N3b3JkGAIgASgJIiMK",
          "D0ZpbmRVc2VybmFtZVJlcRIQCgh1c2VybmFtZRgBIAEoCSIoChBGaW5kVXNl",
          "cm5hbWVSZXNwEhQKDGZvdW5kX2Ftb3VudBgBIAEoAyI9ChJDcmVhdGVDaGFy",
          "YWN0ZXJSZXESDwoHdXNlcl9pZBgBIAEoCRIWCg5jaGFyYWN0ZXJfZGF0YRgC",
          "IAEoDCI5ChBSZWFkQ2hhcmFjdGVyUmVxEg8KB3VzZXJfaWQYASABKAkSFAoM",
          "Y2hhcmFjdGVyX2lkGAIgASgJIicKDUNoYXJhY3RlclJlc3ASFgoOY2hhcmFj",
          "dGVyX2RhdGEYASABKAwiJAoRUmVhZENoYXJhY3RlcnNSZXESDwoHdXNlcl9p",
          "ZBgBIAEoCSIeCg5DaGFyYWN0ZXJzUmVzcBIMCgRsaXN0GAEgAygMIiwKElVw",
          "ZGF0ZUNoYXJhY3RlclJlcRIWCg5jaGFyYWN0ZXJfZGF0YRgBIAEoDCI7ChJE",
          "ZWxldGVDaGFyYWN0ZXJSZXESDwoHdXNlcl9pZBgBIAEoCRIUCgxjaGFyYWN0",
          "ZXJfaWQYAiABKAkiLgoURmluZENoYXJhY3Rlck5hbWVSZXESFgoOY2hhcmFj",
          "dGVyX25hbWUYASABKAkiLQoVRmluZENoYXJhY3Rlck5hbWVSZXNwEhQKDGZv",
          "dW5kX2Ftb3VudBgBIAEoAyIxChdHZXRJZEJ5Q2hhcmFjdGVyTmFtZVJlcRIW",
          "Cg5jaGFyYWN0ZXJfbmFtZRgBIAEoCSImChhHZXRJZEJ5Q2hhcmFjdGVyTmFt",
          "ZVJlc3ASCgoCaWQYASABKAkiNQobR2V0VXNlcklkQnlDaGFyYWN0ZXJOYW1l",
          "UmVxEhYKDmNoYXJhY3Rlcl9uYW1lGAEgASgJIi8KHEdldFVzZXJJZEJ5Q2hh",
          "cmFjdGVyTmFtZVJlc3ASDwoHdXNlcl9pZBgBIAEoCSIrChFGaW5kQ2hhcmFj",
          "dGVyc1JlcRIWCg5jaGFyYWN0ZXJfbmFtZRgBIAEoCSIiChJGaW5kQ2hhcmFj",
          "dGVyc1Jlc3ASDAoEbGlzdBgBIAMoDCJBCg9DcmVhdGVGcmllbmRSZXESFgoO",
          "Y2hhcmFjdGVyXzFfaWQYASABKAkSFgoOY2hhcmFjdGVyXzJfaWQYAiABKAki",
          "QQoPRGVsZXRlRnJpZW5kUmVxEhYKDmNoYXJhY3Rlcl8xX2lkGAEgASgJEhYK",
          "DmNoYXJhY3Rlcl8yX2lkGAIgASgJIiYKDlJlYWRGcmllbmRzUmVxEhQKDGNo",
          "YXJhY3Rlcl9pZBgBIAEoCSIfCg9SZWFkRnJpZW5kc1Jlc3ASDAoEbGlzdBgB",
          "IAMoDCI8ChFDcmVhdGVCdWlsZGluZ1JlcRIQCghtYXBfbmFtZRgBIAEoCRIV",
          "Cg1idWlsZGluZ19kYXRhGAIgASgMIjwKEVVwZGF0ZUJ1aWxkaW5nUmVxEhAK",
          "CG1hcF9uYW1lGAEgASgJEhUKDWJ1aWxkaW5nX2RhdGEYAiABKAwiOgoRRGVs",
          "ZXRlQnVpbGRpbmdSZXESEAoIbWFwX25hbWUYASABKAkSEwoLYnVpbGRpbmdf",
          "aWQYAiABKAkiJQoMQnVpbGRpbmdSZXNwEhUKDWJ1aWxkaW5nX2RhdGEYASAB",
          "KAwiJAoQUmVhZEJ1aWxkaW5nc1JlcRIQCghtYXBfbmFtZRgBIAEoCSIdCg1C",
          "dWlsZGluZ3NSZXNwEgwKBGxpc3QYASADKAwiVAoOQ3JlYXRlUGFydHlSZXES",
          "EQoJc2hhcmVfZXhwGAEgASgIEhIKCnNoYXJlX2l0ZW0YAiABKAgSGwoTbGVh",
          "ZGVyX2NoYXJhY3Rlcl9pZBgDIAEoCSJJCg5VcGRhdGVQYXJ0eVJlcRIQCghw",
          "YXJ0eV9pZBgBIAEoBRIRCglzaGFyZV9leHAYAiABKAgSEgoKc2hhcmVfaXRl",
          "bRgDIAEoCCJFChRVcGRhdGVQYXJ0eUxlYWRlclJlcRIQCghwYXJ0eV9pZBgB",
          "IAEoBRIbChNsZWFkZXJfY2hhcmFjdGVyX2lkGAIgASgJIkoKF1VwZGF0ZUNo",
          "YXJhY3RlclBhcnR5UmVxEh0KFXNvY2lhbF9jaGFyYWN0ZXJfZGF0YRgBIAEo",
          "DBIQCghwYXJ0eV9pZBgCIAEoBSIuChZDbGVhckNoYXJhY3RlclBhcnR5UmVx",
          "EhQKDGNoYXJhY3Rlcl9pZBgBIAEoCSIiCg5EZWxldGVQYXJ0eVJlcRIQCghw",
          "YXJ0eV9pZBgBIAEoBSIgCgxSZWFkUGFydHlSZXESEAoIcGFydHlfaWQYASAB",
          "KAUiHwoJUGFydHlSZXNwEhIKCnBhcnR5X2RhdGEYASABKAwiQQoOQ3JlYXRl",
          "R3VpbGRSZXESEgoKZ3VpbGRfbmFtZRgBIAEoCRIbChNsZWFkZXJfY2hhcmFj",
          "dGVyX2lkGAIgASgJIjQKE0luY3JlYXNlR3VpbGRFeHBSZXESEAoIZ3VpbGRf",
          "aWQYASABKAUSCwoDZXhwGAIgASgFIjYKEEFkZEd1aWxkU2tpbGxSZXESEAoI",
          "Z3VpbGRfaWQYASABKAUSEAoIc2tpbGxfaWQYAiABKAUiRQoUVXBkYXRlR3Vp",
          "bGRMZWFkZXJSZXESEAoIZ3VpbGRfaWQYASABKAUSGwoTbGVhZGVyX2NoYXJh",
          "Y3Rlcl9pZBgCIAEoCSJAChVVcGRhdGVHdWlsZE1lc3NhZ2VSZXESEAoIZ3Vp",
          "bGRfaWQYASABKAUSFQoNZ3VpbGRfbWVzc2FnZRgCIAEoCSKRAQoSVXBkYXRl",
          "R3VpbGRSb2xlUmVxEhAKCGd1aWxkX2lkGAEgASgFEhIKCmd1aWxkX3JvbGUY",
          "AiABKA0SEQoJcm9sZV9uYW1lGAMgASgJEhIKCmNhbl9pbnZpdGUYBCABKAgS",
          "EAoIY2FuX2tpY2sYBSABKAgSHAoUc2hhcmVfZXhwX3BlcmNlbnRhZ2UYBiAB",
          "KA0iXQoYVXBkYXRlR3VpbGRNZW1iZXJSb2xlUmVxEhAKCGd1aWxkX2lkGAEg",
          "ASgFEhsKE21lbWJlcl9jaGFyYWN0ZXJfaWQYAiABKAkSEgoKZ3VpbGRfcm9s",
          "ZRgDIAEoDSJeChdVcGRhdGVDaGFyYWN0ZXJHdWlsZFJlcRIdChVzb2NpYWxf",
          "Y2hhcmFjdGVyX2RhdGEYASABKAwSEAoIZ3VpbGRfaWQYAiABKAUSEgoKZ3Vp",
          "bGRfcm9sZRgDIAEoDSIuChZDbGVhckNoYXJhY3Rlckd1aWxkUmVxEhQKDGNo",
          "YXJhY3Rlcl9pZBgBIAEoCSIiCg5EZWxldGVHdWlsZFJlcRIQCghndWlsZF9p",
          "ZBgBIAEoBSImChBGaW5kR3VpbGROYW1lUmVxEhIKCmd1aWxkX25hbWUYASAB",
          "KAkiKQoRRmluZEd1aWxkTmFtZVJlc3ASFAoMZm91bmRfYW1vdW50GAEgASgD",
          "IiAKDFJlYWRHdWlsZFJlcRIQCghndWlsZF9pZBgBIAEoBSIfCglHdWlsZFJl",
          "c3ASEgoKZ3VpbGRfZGF0YRgBIAEoDCIjCg9HZXRHdWlsZEdvbGRSZXESEAoI",
          "Z3VpbGRfaWQYASABKAUiPQoSQ2hhbmdlR3VpbGRHb2xkUmVxEhAKCGd1aWxk",
          "X2lkGAEgASgFEhUKDWNoYW5nZV9hbW91bnQYAiABKAUiOAoURGVjcmVhc2VH",
          "dWlsZEdvbGRSZXESEAoIZ3VpbGRfaWQYASABKAUSDgoGYW1vdW50GAIgASgF",
          "IlQKE1JlYWRTdG9yYWdlSXRlbXNSZXESIwoMc3RvcmFnZV90eXBlGAEgASgO",
          "Mg0uRVN0b3JhZ2VUeXBlEhgKEHN0b3JhZ2Vfb3duZXJfaWQYAiABKAkiNwoU",
          "UmVhZFN0b3JhZ2VJdGVtc1Jlc3ASHwoXc3RvcmFnZV9jaGFyYWN0ZXJfaXRl",
          "bXMYASADKAwi7gEKFE1vdmVJdGVtVG9TdG9yYWdlUmVxEiMKDHN0b3JhZ2Vf",
          "dHlwZRgBIAEoDjINLkVTdG9yYWdlVHlwZRIYChBzdG9yYWdlX293bmVyX2lk",
          "GAIgASgJEhQKDGNoYXJhY3Rlcl9pZBgDIAEoCRIUCgx3ZWlnaHRfbGltaXQY",
          "BCABKAUSEgoKc2xvdF9saW1pdBgFIAEoBRIcChRpbnZlbnRvcnlfaXRlbV9p",
          "bmRleBgGIAEoBRIdChVpbnZlbnRvcnlfaXRlbV9hbW91bnQYByABKAUSGgoS",
          "c3RvcmFnZV9pdGVtX2luZGV4GAggASgFImUKFU1vdmVJdGVtVG9TdG9yYWdl",
          "UmVzcBINCgVlcnJvchgBIAEoDRIcChRpbnZlbnRvcnlfaXRlbV9pdGVtcxgC",
          "IAMoDBIfChdzdG9yYWdlX2NoYXJhY3Rlcl9pdGVtcxgDIAMoDCLuAQoWTW92",
          "ZUl0ZW1Gcm9tU3RvcmFnZVJlcRIjCgxzdG9yYWdlX3R5cGUYASABKA4yDS5F",
          "U3RvcmFnZVR5cGUSGAoQc3RvcmFnZV9vd25lcl9pZBgCIAEoCRIUCgxjaGFy",
          "YWN0ZXJfaWQYAyABKAkSFAoMd2VpZ2h0X2xpbWl0GAQgASgFEhIKCnNsb3Rf",
          "bGltaXQYBSABKAUSGgoSc3RvcmFnZV9pdGVtX2luZGV4GAYgASgFEhsKE3N0",
          "b3JhZ2VfaXRlbV9hbW91bnQYByABKAUSHAoUaW52ZW50b3J5X2l0ZW1faW5k",
          "ZXgYCCABKAUiZwoXTW92ZUl0ZW1Gcm9tU3RvcmFnZVJlc3ASDQoFZXJyb3IY",
          "ASABKA0SHAoUaW52ZW50b3J5X2l0ZW1faXRlbXMYAiADKAwSHwoXc3RvcmFn",
          "ZV9jaGFyYWN0ZXJfaXRlbXMYAyADKAwiwAEKGVN3YXBPck1lcmdlU3RvcmFn",
          "ZUl0ZW1SZXESIwoMc3RvcmFnZV90eXBlGAEgASgOMg0uRVN0b3JhZ2VUeXBl",
          "EhgKEHN0b3JhZ2Vfb3duZXJfaWQYAiABKAkSFAoMY2hhcmFjdGVyX2lkGAMg",
          "ASgJEhQKDHdlaWdodF9saW1pdBgEIAEoBRISCgpzbG90X2xpbWl0GAUgASgF",
          "EhIKCmZyb21faW5kZXgYBiABKAUSEAoIdG9faW5kZXgYByABKAUiTAoaU3dh",
          "cE9yTWVyZ2VTdG9yYWdlSXRlbVJlc3ASDQoFZXJyb3IYASABKA0SHwoXc3Rv",
          "cmFnZV9jaGFyYWN0ZXJfaXRlbXMYAiADKAwikAEKF0luY3JlYXNlU3RvcmFn",
          "ZUl0ZW1zUmVxEiMKDHN0b3JhZ2VfdHlwZRgBIAEoDjINLkVTdG9yYWdlVHlw",
          "ZRIYChBzdG9yYWdlX293bmVyX2lkGAIgASgJEhQKDHdlaWdodF9saW1pdBgD",
          "IAEoBRISCgpzbG90X2xpbWl0GAQgASgFEgwKBGl0ZW0YBSABKAwiSgoYSW5j",
          "cmVhc2VTdG9yYWdlSXRlbXNSZXNwEg0KBWVycm9yGAEgASgNEh8KF3N0b3Jh",
          "Z2VfY2hhcmFjdGVyX2l0ZW1zGAIgAygMIqMBChdEZWNyZWFzZVN0b3JhZ2VJ",
          "dGVtc1JlcRIjCgxzdG9yYWdlX3R5cGUYASABKA4yDS5FU3RvcmFnZVR5cGUS",
          "GAoQc3RvcmFnZV9vd25lcl9pZBgCIAEoCRIUCgx3ZWlnaHRfbGltaXQYAyAB",
          "KAUSEgoKc2xvdF9saW1pdBgEIAEoBRIPCgdkYXRhX2lkGAUgASgFEg4KBmFt",
          "b3VudBgGIAEoBSJ4ChhEZWNyZWFzZVN0b3JhZ2VJdGVtc1Jlc3ASDQoFZXJy",
          "b3IYASABKA0SHwoXc3RvcmFnZV9jaGFyYWN0ZXJfaXRlbXMYAiADKAwSLAoP",
          "ZGVjcmVhc2VkX2l0ZW1zGAMgAygLMhMuSXRlbUluZGV4QW1vdW50TWFwIjYK",
          "C01haWxMaXN0UmVxEg8KB3VzZXJfaWQYASABKAkSFgoOb25seV9uZXdfbWFp",
          "bHMYAiABKAgiHAoMTWFpbExpc3RSZXNwEgwKBGxpc3QYASADKAwiOgoWVXBk",
          "YXRlUmVhZE1haWxTdGF0ZVJlcRIPCgdtYWlsX2lkGAEgASgJEg8KB3VzZXJf",
          "aWQYAiABKAkiNgoXVXBkYXRlUmVhZE1haWxTdGF0ZVJlc3ASDQoFZXJyb3IY",
          "ASABKA0SDAoEbWFpbBgCIAEoDCJAChxVcGRhdGVDbGFpbU1haWxJdGVtc1N0",
          "YXRlUmVxEg8KB21haWxfaWQYASABKAkSDwoHdXNlcl9pZBgCIAEoCSI8Ch1V",
          "cGRhdGVDbGFpbU1haWxJdGVtc1N0YXRlUmVzcBINCgVlcnJvchgBIAEoDRIM",
          "CgRtYWlsGAIgASgMIjwKGFVwZGF0ZURlbGV0ZU1haWxTdGF0ZVJlcRIPCgdt",
          "YWlsX2lkGAEgASgJEg8KB3VzZXJfaWQYAiABKAkiKgoZVXBkYXRlRGVsZXRl",
          "TWFpbFN0YXRlUmVzcBINCgVlcnJvchgBIAEoDSIbCgtTZW5kTWFpbFJlcRIM",
          "CgRtYWlsGAEgASgMIh0KDFNlbmRNYWlsUmVzcBINCgVlcnJvchgBIAEoDSIu",
          "CgpHZXRNYWlsUmVxEg8KB21haWxfaWQYASABKAkSDwoHdXNlcl9pZBgCIAEo",
          "CSIbCgtHZXRNYWlsUmVzcBIMCgRtYWlsGAEgASgMIicKCUN1c3RvbVJlcRIM",
          "CgR0eXBlGAEgASgFEgwKBGRhdGEYAiABKAwiKAoKQ3VzdG9tUmVzcBIMCgR0",
          "eXBlGAEgASgFEgwKBGRhdGEYAiABKAwqcQoMRVN0b3JhZ2VUeXBlEhUKEVNU",
          "T1JBR0VfVFlQRV9OT05FEAASFwoTU1RPUkFHRV9UWVBFX1BMQVlFUhABEhYK",
          "ElNUT1JBR0VfVFlQRV9HVUlMRBACEhkKFVNUT1JBR0VfVFlQRV9CVUlMRElO",
          "RxADMrYaCg9EYXRhYmFzZVNlcnZpY2USQgoRVmFsaWRhdGVVc2VyTG9naW4S",
          "FS5WYWxpZGF0ZVVzZXJMb2dpblJlcRoWLlZhbGlkYXRlVXNlckxvZ2luUmVz",
          "cBJIChNWYWxpZGF0ZUFjY2Vzc1Rva2VuEhcuVmFsaWRhdGVBY2Nlc3NUb2tl",
          "blJlcRoYLlZhbGlkYXRlQWNjZXNzVG9rZW5SZXNwEjMKDEdldFVzZXJMZXZl",
          "bBIQLkdldFVzZXJMZXZlbFJlcRoRLkdldFVzZXJMZXZlbFJlc3ASIQoHR2V0",
          "R29sZBILLkdldEdvbGRSZXEaCS5Hb2xkUmVzcBInCgpDaGFuZ2VHb2xkEg4u",
          "Q2hhbmdlR29sZFJlcRoJLkdvbGRSZXNwEiEKB0dldENhc2gSCy5HZXRDYXNo",
          "UmVxGgkuQ2FzaFJlc3ASJwoKQ2hhbmdlQ2FzaBIOLkNoYW5nZUNhc2hSZXEa",
          "CS5DYXNoUmVzcBI1ChFVcGRhdGVBY2Nlc3NUb2tlbhIVLlVwZGF0ZUFjY2Vz",
          "c1Rva2VuUmVxGgkuVm9pZFJlc3ASMQoPQ3JlYXRlVXNlckxvZ2luEhMuQ3Jl",
          "YXRlVXNlckxvZ2luUmVxGgkuVm9pZFJlc3ASMwoMRmluZFVzZXJuYW1lEhAu",
          "RmluZFVzZXJuYW1lUmVxGhEuRmluZFVzZXJuYW1lUmVzcBI2Cg9DcmVhdGVD",
          "aGFyYWN0ZXISEy5DcmVhdGVDaGFyYWN0ZXJSZXEaDi5DaGFyYWN0ZXJSZXNw",
          "EjIKDVJlYWRDaGFyYWN0ZXISES5SZWFkQ2hhcmFjdGVyUmVxGg4uQ2hhcmFj",
          "dGVyUmVzcBI1Cg5SZWFkQ2hhcmFjdGVycxISLlJlYWRDaGFyYWN0ZXJzUmVx",
          "Gg8uQ2hhcmFjdGVyc1Jlc3ASNgoPVXBkYXRlQ2hhcmFjdGVyEhMuVXBkYXRl",
          "Q2hhcmFjdGVyUmVxGg4uQ2hhcmFjdGVyUmVzcBIxCg9EZWxldGVDaGFyYWN0",
          "ZXISEy5EZWxldGVDaGFyYWN0ZXJSZXEaCS5Wb2lkUmVzcBJCChFGaW5kQ2hh",
          "cmFjdGVyTmFtZRIVLkZpbmRDaGFyYWN0ZXJOYW1lUmVxGhYuRmluZENoYXJh",
          "Y3Rlck5hbWVSZXNwEksKFEdldElkQnlDaGFyYWN0ZXJOYW1lEhguR2V0SWRC",
          "eUNoYXJhY3Rlck5hbWVSZXEaGS5HZXRJZEJ5Q2hhcmFjdGVyTmFtZVJlc3AS",
          "VwoYR2V0VXNlcklkQnlDaGFyYWN0ZXJOYW1lEhwuR2V0VXNlcklkQnlDaGFy",
          "YWN0ZXJOYW1lUmVxGh0uR2V0VXNlcklkQnlDaGFyYWN0ZXJOYW1lUmVzcBI5",
          "Cg5GaW5kQ2hhcmFjdGVycxISLkZpbmRDaGFyYWN0ZXJzUmVxGhMuRmluZENo",
          "YXJhY3RlcnNSZXNwEjIKDENyZWF0ZUZyaWVuZBIQLkNyZWF0ZUZyaWVuZFJl",
          "cRoQLlJlYWRGcmllbmRzUmVzcBIyCgxEZWxldGVGcmllbmQSEC5EZWxldGVG",
          "cmllbmRSZXEaEC5SZWFkRnJpZW5kc1Jlc3ASMAoLUmVhZEZyaWVuZHMSDy5S",
          "ZWFkRnJpZW5kc1JlcRoQLlJlYWRGcmllbmRzUmVzcBIzCg5DcmVhdGVCdWls",
          "ZGluZxISLkNyZWF0ZUJ1aWxkaW5nUmVxGg0uQnVpbGRpbmdSZXNwEjMKDlVw",
          "ZGF0ZUJ1aWxkaW5nEhIuVXBkYXRlQnVpbGRpbmdSZXEaDS5CdWlsZGluZ1Jl",
          "c3ASLwoORGVsZXRlQnVpbGRpbmcSEi5EZWxldGVCdWlsZGluZ1JlcRoJLlZv",
          "aWRSZXNwEjIKDVJlYWRCdWlsZGluZ3MSES5SZWFkQnVpbGRpbmdzUmVxGg4u",
          "QnVpbGRpbmdzUmVzcBIqCgtDcmVhdGVQYXJ0eRIPLkNyZWF0ZVBhcnR5UmVx",
          "GgouUGFydHlSZXNwEioKC1VwZGF0ZVBhcnR5Eg8uVXBkYXRlUGFydHlSZXEa",
          "Ci5QYXJ0eVJlc3ASNgoRVXBkYXRlUGFydHlMZWFkZXISFS5VcGRhdGVQYXJ0",
          "eUxlYWRlclJlcRoKLlBhcnR5UmVzcBI8ChRVcGRhdGVDaGFyYWN0ZXJQYXJ0",
          "eRIYLlVwZGF0ZUNoYXJhY3RlclBhcnR5UmVxGgouUGFydHlSZXNwEjkKE0Ns",
          "ZWFyQ2hhcmFjdGVyUGFydHkSFy5DbGVhckNoYXJhY3RlclBhcnR5UmVxGgku",
          "Vm9pZFJlc3ASKQoLRGVsZXRlUGFydHkSDy5EZWxldGVQYXJ0eVJlcRoJLlZv",
          "aWRSZXNwEiYKCVJlYWRQYXJ0eRINLlJlYWRQYXJ0eVJlcRoKLlBhcnR5UmVz",
          "cBIqCgtDcmVhdGVHdWlsZBIPLkNyZWF0ZUd1aWxkUmVxGgouR3VpbGRSZXNw",
          "EjQKEEluY3JlYXNlR3VpbGRFeHASFC5JbmNyZWFzZUd1aWxkRXhwUmVxGgou",
          "R3VpbGRSZXNwEi4KDUFkZEd1aWxkU2tpbGwSES5BZGRHdWlsZFNraWxsUmVx",
          "GgouR3VpbGRSZXNwEjYKEVVwZGF0ZUd1aWxkTGVhZGVyEhUuVXBkYXRlR3Vp",
          "bGRMZWFkZXJSZXEaCi5HdWlsZFJlc3ASOAoSVXBkYXRlR3VpbGRNZXNzYWdl",
          "EhYuVXBkYXRlR3VpbGRNZXNzYWdlUmVxGgouR3VpbGRSZXNwEjIKD1VwZGF0",
          "ZUd1aWxkUm9sZRITLlVwZGF0ZUd1aWxkUm9sZVJlcRoKLkd1aWxkUmVzcBI+",
          "ChVVcGRhdGVHdWlsZE1lbWJlclJvbGUSGS5VcGRhdGVHdWlsZE1lbWJlclJv",
          "bGVSZXEaCi5HdWlsZFJlc3ASPAoUVXBkYXRlQ2hhcmFjdGVyR3VpbGQSGC5V",
          "cGRhdGVDaGFyYWN0ZXJHdWlsZFJlcRoKLkd1aWxkUmVzcBI5ChNDbGVhckNo",
          "YXJhY3Rlckd1aWxkEhcuQ2xlYXJDaGFyYWN0ZXJHdWlsZFJlcRoJLlZvaWRS",
          "ZXNwEikKC0RlbGV0ZUd1aWxkEg8uRGVsZXRlR3VpbGRSZXEaCS5Wb2lkUmVz",
          "cBI2Cg1GaW5kR3VpbGROYW1lEhEuRmluZEd1aWxkTmFtZVJlcRoSLkZpbmRH",
          "dWlsZE5hbWVSZXNwEiYKCVJlYWRHdWlsZBINLlJlYWRHdWlsZFJlcRoKLkd1",
          "aWxkUmVzcBIwCgxHZXRHdWlsZEdvbGQSEC5HZXRHdWlsZEdvbGRSZXEaDi5H",
          "dWlsZEdvbGRSZXNwEjYKD0NoYW5nZUd1aWxkR29sZBITLkNoYW5nZUd1aWxk",
          "R29sZFJlcRoOLkd1aWxkR29sZFJlc3ASPwoQUmVhZFN0b3JhZ2VJdGVtcxIU",
          "LlJlYWRTdG9yYWdlSXRlbXNSZXEaFS5SZWFkU3RvcmFnZUl0ZW1zUmVzcBJC",
          "ChFNb3ZlSXRlbVRvU3RvcmFnZRIVLk1vdmVJdGVtVG9TdG9yYWdlUmVxGhYu",
          "TW92ZUl0ZW1Ub1N0b3JhZ2VSZXNwEkgKE01vdmVJdGVtRnJvbVN0b3JhZ2US",
          "Fy5Nb3ZlSXRlbUZyb21TdG9yYWdlUmVxGhguTW92ZUl0ZW1Gcm9tU3RvcmFn",
          "ZVJlc3ASUQoWU3dhcE9yTWVyZ2VTdG9yYWdlSXRlbRIaLlN3YXBPck1lcmdl",
          "U3RvcmFnZUl0ZW1SZXEaGy5Td2FwT3JNZXJnZVN0b3JhZ2VJdGVtUmVzcBJL",
          "ChRJbmNyZWFzZVN0b3JhZ2VJdGVtcxIYLkluY3JlYXNlU3RvcmFnZUl0ZW1z",
          "UmVxGhkuSW5jcmVhc2VTdG9yYWdlSXRlbXNSZXNwEksKFERlY3JlYXNlU3Rv",
          "cmFnZUl0ZW1zEhguRGVjcmVhc2VTdG9yYWdlSXRlbXNSZXEaGS5EZWNyZWFz",
          "ZVN0b3JhZ2VJdGVtc1Jlc3ASJwoITWFpbExpc3QSDC5NYWlsTGlzdFJlcRoN",
          "Lk1haWxMaXN0UmVzcBJIChNVcGRhdGVSZWFkTWFpbFN0YXRlEhcuVXBkYXRl",
          "UmVhZE1haWxTdGF0ZVJlcRoYLlVwZGF0ZVJlYWRNYWlsU3RhdGVSZXNwEloK",
          "GVVwZGF0ZUNsYWltTWFpbEl0ZW1zU3RhdGUSHS5VcGRhdGVDbGFpbU1haWxJ",
          "dGVtc1N0YXRlUmVxGh4uVXBkYXRlQ2xhaW1NYWlsSXRlbXNTdGF0ZVJlc3AS",
          "TgoVVXBkYXRlRGVsZXRlTWFpbFN0YXRlEhkuVXBkYXRlRGVsZXRlTWFpbFN0",
          "YXRlUmVxGhouVXBkYXRlRGVsZXRlTWFpbFN0YXRlUmVzcBInCghTZW5kTWFp",
          "bBIMLlNlbmRNYWlsUmVxGg0uU2VuZE1haWxSZXNwEiQKB0dldE1haWwSCy5H",
          "ZXRNYWlsUmVxGgwuR2V0TWFpbFJlc3ASIQoGQ3VzdG9tEgouQ3VzdG9tUmVx",
          "GgsuQ3VzdG9tUmVzcGIGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::EStorageType), }, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::ItemIndexAmountMap), global::ItemIndexAmountMap.Parser, new[]{ "Index", "Amount" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::VoidResp), global::VoidResp.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GoldResp), global::GoldResp.Parser, new[]{ "Gold" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CashResp), global::CashResp.Parser, new[]{ "Cash" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GuildGoldResp), global::GuildGoldResp.Parser, new[]{ "GuildGold" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ValidateUserLoginReq), global::ValidateUserLoginReq.Parser, new[]{ "Username", "Password" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ValidateUserLoginResp), global::ValidateUserLoginResp.Parser, new[]{ "UserId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ValidateAccessTokenReq), global::ValidateAccessTokenReq.Parser, new[]{ "UserId", "AccessToken" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ValidateAccessTokenResp), global::ValidateAccessTokenResp.Parser, new[]{ "IsPass" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetUserLevelReq), global::GetUserLevelReq.Parser, new[]{ "UserId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetUserLevelResp), global::GetUserLevelResp.Parser, new[]{ "UserLevel" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetGoldReq), global::GetGoldReq.Parser, new[]{ "UserId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ChangeGoldReq), global::ChangeGoldReq.Parser, new[]{ "UserId", "ChangeAmount" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetCashReq), global::GetCashReq.Parser, new[]{ "UserId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ChangeCashReq), global::ChangeCashReq.Parser, new[]{ "UserId", "ChangeAmount" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateAccessTokenReq), global::UpdateAccessTokenReq.Parser, new[]{ "UserId", "AccessToken" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CreateUserLoginReq), global::CreateUserLoginReq.Parser, new[]{ "Username", "Password" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::FindUsernameReq), global::FindUsernameReq.Parser, new[]{ "Username" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::FindUsernameResp), global::FindUsernameResp.Parser, new[]{ "FoundAmount" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CreateCharacterReq), global::CreateCharacterReq.Parser, new[]{ "UserId", "CharacterData" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ReadCharacterReq), global::ReadCharacterReq.Parser, new[]{ "UserId", "CharacterId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CharacterResp), global::CharacterResp.Parser, new[]{ "CharacterData" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ReadCharactersReq), global::ReadCharactersReq.Parser, new[]{ "UserId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CharactersResp), global::CharactersResp.Parser, new[]{ "List" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateCharacterReq), global::UpdateCharacterReq.Parser, new[]{ "CharacterData" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DeleteCharacterReq), global::DeleteCharacterReq.Parser, new[]{ "UserId", "CharacterId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::FindCharacterNameReq), global::FindCharacterNameReq.Parser, new[]{ "CharacterName" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::FindCharacterNameResp), global::FindCharacterNameResp.Parser, new[]{ "FoundAmount" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetIdByCharacterNameReq), global::GetIdByCharacterNameReq.Parser, new[]{ "CharacterName" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetIdByCharacterNameResp), global::GetIdByCharacterNameResp.Parser, new[]{ "Id" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetUserIdByCharacterNameReq), global::GetUserIdByCharacterNameReq.Parser, new[]{ "CharacterName" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetUserIdByCharacterNameResp), global::GetUserIdByCharacterNameResp.Parser, new[]{ "UserId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::FindCharactersReq), global::FindCharactersReq.Parser, new[]{ "CharacterName" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::FindCharactersResp), global::FindCharactersResp.Parser, new[]{ "List" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CreateFriendReq), global::CreateFriendReq.Parser, new[]{ "Character1Id", "Character2Id" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DeleteFriendReq), global::DeleteFriendReq.Parser, new[]{ "Character1Id", "Character2Id" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ReadFriendsReq), global::ReadFriendsReq.Parser, new[]{ "CharacterId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ReadFriendsResp), global::ReadFriendsResp.Parser, new[]{ "List" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CreateBuildingReq), global::CreateBuildingReq.Parser, new[]{ "MapName", "BuildingData" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateBuildingReq), global::UpdateBuildingReq.Parser, new[]{ "MapName", "BuildingData" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DeleteBuildingReq), global::DeleteBuildingReq.Parser, new[]{ "MapName", "BuildingId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::BuildingResp), global::BuildingResp.Parser, new[]{ "BuildingData" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ReadBuildingsReq), global::ReadBuildingsReq.Parser, new[]{ "MapName" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::BuildingsResp), global::BuildingsResp.Parser, new[]{ "List" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CreatePartyReq), global::CreatePartyReq.Parser, new[]{ "ShareExp", "ShareItem", "LeaderCharacterId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdatePartyReq), global::UpdatePartyReq.Parser, new[]{ "PartyId", "ShareExp", "ShareItem" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdatePartyLeaderReq), global::UpdatePartyLeaderReq.Parser, new[]{ "PartyId", "LeaderCharacterId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateCharacterPartyReq), global::UpdateCharacterPartyReq.Parser, new[]{ "SocialCharacterData", "PartyId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ClearCharacterPartyReq), global::ClearCharacterPartyReq.Parser, new[]{ "CharacterId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DeletePartyReq), global::DeletePartyReq.Parser, new[]{ "PartyId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ReadPartyReq), global::ReadPartyReq.Parser, new[]{ "PartyId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PartyResp), global::PartyResp.Parser, new[]{ "PartyData" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CreateGuildReq), global::CreateGuildReq.Parser, new[]{ "GuildName", "LeaderCharacterId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::IncreaseGuildExpReq), global::IncreaseGuildExpReq.Parser, new[]{ "GuildId", "Exp" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AddGuildSkillReq), global::AddGuildSkillReq.Parser, new[]{ "GuildId", "SkillId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateGuildLeaderReq), global::UpdateGuildLeaderReq.Parser, new[]{ "GuildId", "LeaderCharacterId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateGuildMessageReq), global::UpdateGuildMessageReq.Parser, new[]{ "GuildId", "GuildMessage" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateGuildRoleReq), global::UpdateGuildRoleReq.Parser, new[]{ "GuildId", "GuildRole", "RoleName", "CanInvite", "CanKick", "ShareExpPercentage" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateGuildMemberRoleReq), global::UpdateGuildMemberRoleReq.Parser, new[]{ "GuildId", "MemberCharacterId", "GuildRole" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateCharacterGuildReq), global::UpdateCharacterGuildReq.Parser, new[]{ "SocialCharacterData", "GuildId", "GuildRole" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ClearCharacterGuildReq), global::ClearCharacterGuildReq.Parser, new[]{ "CharacterId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DeleteGuildReq), global::DeleteGuildReq.Parser, new[]{ "GuildId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::FindGuildNameReq), global::FindGuildNameReq.Parser, new[]{ "GuildName" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::FindGuildNameResp), global::FindGuildNameResp.Parser, new[]{ "FoundAmount" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ReadGuildReq), global::ReadGuildReq.Parser, new[]{ "GuildId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GuildResp), global::GuildResp.Parser, new[]{ "GuildData" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetGuildGoldReq), global::GetGuildGoldReq.Parser, new[]{ "GuildId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ChangeGuildGoldReq), global::ChangeGuildGoldReq.Parser, new[]{ "GuildId", "ChangeAmount" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DecreaseGuildGoldReq), global::DecreaseGuildGoldReq.Parser, new[]{ "GuildId", "Amount" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ReadStorageItemsReq), global::ReadStorageItemsReq.Parser, new[]{ "StorageType", "StorageOwnerId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ReadStorageItemsResp), global::ReadStorageItemsResp.Parser, new[]{ "StorageCharacterItems" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MoveItemToStorageReq), global::MoveItemToStorageReq.Parser, new[]{ "StorageType", "StorageOwnerId", "CharacterId", "WeightLimit", "SlotLimit", "InventoryItemIndex", "InventoryItemAmount", "StorageItemIndex" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MoveItemToStorageResp), global::MoveItemToStorageResp.Parser, new[]{ "Error", "InventoryItemItems", "StorageCharacterItems" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MoveItemFromStorageReq), global::MoveItemFromStorageReq.Parser, new[]{ "StorageType", "StorageOwnerId", "CharacterId", "WeightLimit", "SlotLimit", "StorageItemIndex", "StorageItemAmount", "InventoryItemIndex" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MoveItemFromStorageResp), global::MoveItemFromStorageResp.Parser, new[]{ "Error", "InventoryItemItems", "StorageCharacterItems" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SwapOrMergeStorageItemReq), global::SwapOrMergeStorageItemReq.Parser, new[]{ "StorageType", "StorageOwnerId", "CharacterId", "WeightLimit", "SlotLimit", "FromIndex", "ToIndex" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SwapOrMergeStorageItemResp), global::SwapOrMergeStorageItemResp.Parser, new[]{ "Error", "StorageCharacterItems" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::IncreaseStorageItemsReq), global::IncreaseStorageItemsReq.Parser, new[]{ "StorageType", "StorageOwnerId", "WeightLimit", "SlotLimit", "Item" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::IncreaseStorageItemsResp), global::IncreaseStorageItemsResp.Parser, new[]{ "Error", "StorageCharacterItems" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DecreaseStorageItemsReq), global::DecreaseStorageItemsReq.Parser, new[]{ "StorageType", "StorageOwnerId", "WeightLimit", "SlotLimit", "DataId", "Amount" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DecreaseStorageItemsResp), global::DecreaseStorageItemsResp.Parser, new[]{ "Error", "StorageCharacterItems", "DecreasedItems" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MailListReq), global::MailListReq.Parser, new[]{ "UserId", "OnlyNewMails" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MailListResp), global::MailListResp.Parser, new[]{ "List" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateReadMailStateReq), global::UpdateReadMailStateReq.Parser, new[]{ "MailId", "UserId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateReadMailStateResp), global::UpdateReadMailStateResp.Parser, new[]{ "Error", "Mail" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateClaimMailItemsStateReq), global::UpdateClaimMailItemsStateReq.Parser, new[]{ "MailId", "UserId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateClaimMailItemsStateResp), global::UpdateClaimMailItemsStateResp.Parser, new[]{ "Error", "Mail" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateDeleteMailStateReq), global::UpdateDeleteMailStateReq.Parser, new[]{ "MailId", "UserId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateDeleteMailStateResp), global::UpdateDeleteMailStateResp.Parser, new[]{ "Error" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SendMailReq), global::SendMailReq.Parser, new[]{ "Mail" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SendMailResp), global::SendMailResp.Parser, new[]{ "Error" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetMailReq), global::GetMailReq.Parser, new[]{ "MailId", "UserId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetMailResp), global::GetMailResp.Parser, new[]{ "Mail" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CustomReq), global::CustomReq.Parser, new[]{ "Type", "Data" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CustomResp), global::CustomResp.Parser, new[]{ "Type", "Data" }, null, null, null)
        }));
  }
  #endregion

}
#region Enums
public enum EStorageType {
  [pbr::OriginalName("STORAGE_TYPE_NONE")] StorageTypeNone = 0,
  [pbr::OriginalName("STORAGE_TYPE_PLAYER")] StorageTypePlayer = 1,
  [pbr::OriginalName("STORAGE_TYPE_GUILD")] StorageTypeGuild = 2,
  [pbr::OriginalName("STORAGE_TYPE_BUILDING")] StorageTypeBuilding = 3,
}

#endregion

#region Messages
/// <summary>
/// Map
/// </summary>
public sealed partial class ItemIndexAmountMap : pb::IMessage<ItemIndexAmountMap> {
  private static readonly pb::MessageParser<ItemIndexAmountMap> _parser = new pb::MessageParser<ItemIndexAmountMap>(() => new ItemIndexAmountMap());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ItemIndexAmountMap> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ItemIndexAmountMap() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ItemIndexAmountMap(ItemIndexAmountMap other) : this() {
    index_ = other.index_;
    amount_ = other.amount_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ItemIndexAmountMap Clone() {
    return new ItemIndexAmountMap(this);
  }

  /// <summary>Field number for the "index" field.</summary>
  public const int IndexFieldNumber = 1;
  private int index_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Index {
    get { return index_; }
    set {
      index_ = value;
    }
  }

  /// <summary>Field number for the "amount" field.</summary>
  public const int AmountFieldNumber = 2;
  private int amount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Amount {
    get { return amount_; }
    set {
      amount_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ItemIndexAmountMap);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ItemIndexAmountMap other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Index != other.Index) return false;
    if (Amount != other.Amount) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Index != 0) hash ^= Index.GetHashCode();
    if (Amount != 0) hash ^= Amount.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Index != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Index);
    }
    if (Amount != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Amount);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Index != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
    }
    if (Amount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Amount);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ItemIndexAmountMap other) {
    if (other == null) {
      return;
    }
    if (other.Index != 0) {
      Index = other.Index;
    }
    if (other.Amount != 0) {
      Amount = other.Amount;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Index = input.ReadInt32();
          break;
        }
        case 16: {
          Amount = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Generic response
/// </summary>
public sealed partial class VoidResp : pb::IMessage<VoidResp> {
  private static readonly pb::MessageParser<VoidResp> _parser = new pb::MessageParser<VoidResp>(() => new VoidResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<VoidResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public VoidResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public VoidResp(VoidResp other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public VoidResp Clone() {
    return new VoidResp(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as VoidResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(VoidResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(VoidResp other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class GoldResp : pb::IMessage<GoldResp> {
  private static readonly pb::MessageParser<GoldResp> _parser = new pb::MessageParser<GoldResp>(() => new GoldResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GoldResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GoldResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GoldResp(GoldResp other) : this() {
    gold_ = other.gold_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GoldResp Clone() {
    return new GoldResp(this);
  }

  /// <summary>Field number for the "gold" field.</summary>
  public const int GoldFieldNumber = 1;
  private int gold_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Gold {
    get { return gold_; }
    set {
      gold_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GoldResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GoldResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Gold != other.Gold) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Gold != 0) hash ^= Gold.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Gold != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Gold);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Gold != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Gold);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GoldResp other) {
    if (other == null) {
      return;
    }
    if (other.Gold != 0) {
      Gold = other.Gold;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Gold = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class CashResp : pb::IMessage<CashResp> {
  private static readonly pb::MessageParser<CashResp> _parser = new pb::MessageParser<CashResp>(() => new CashResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CashResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CashResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CashResp(CashResp other) : this() {
    cash_ = other.cash_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CashResp Clone() {
    return new CashResp(this);
  }

  /// <summary>Field number for the "cash" field.</summary>
  public const int CashFieldNumber = 1;
  private int cash_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Cash {
    get { return cash_; }
    set {
      cash_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CashResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CashResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Cash != other.Cash) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Cash != 0) hash ^= Cash.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Cash != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Cash);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Cash != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cash);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CashResp other) {
    if (other == null) {
      return;
    }
    if (other.Cash != 0) {
      Cash = other.Cash;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Cash = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class GuildGoldResp : pb::IMessage<GuildGoldResp> {
  private static readonly pb::MessageParser<GuildGoldResp> _parser = new pb::MessageParser<GuildGoldResp>(() => new GuildGoldResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GuildGoldResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GuildGoldResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GuildGoldResp(GuildGoldResp other) : this() {
    guildGold_ = other.guildGold_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GuildGoldResp Clone() {
    return new GuildGoldResp(this);
  }

  /// <summary>Field number for the "guild_gold" field.</summary>
  public const int GuildGoldFieldNumber = 1;
  private int guildGold_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int GuildGold {
    get { return guildGold_; }
    set {
      guildGold_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GuildGoldResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GuildGoldResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GuildGold != other.GuildGold) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GuildGold != 0) hash ^= GuildGold.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GuildGold != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(GuildGold);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GuildGold != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(GuildGold);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GuildGoldResp other) {
    if (other == null) {
      return;
    }
    if (other.GuildGold != 0) {
      GuildGold = other.GuildGold;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          GuildGold = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Validate user login
/// </summary>
public sealed partial class ValidateUserLoginReq : pb::IMessage<ValidateUserLoginReq> {
  private static readonly pb::MessageParser<ValidateUserLoginReq> _parser = new pb::MessageParser<ValidateUserLoginReq>(() => new ValidateUserLoginReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ValidateUserLoginReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ValidateUserLoginReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ValidateUserLoginReq(ValidateUserLoginReq other) : this() {
    username_ = other.username_;
    password_ = other.password_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ValidateUserLoginReq Clone() {
    return new ValidateUserLoginReq(this);
  }

  /// <summary>Field number for the "username" field.</summary>
  public const int UsernameFieldNumber = 1;
  private string username_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Username {
    get { return username_; }
    set {
      username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "password" field.</summary>
  public const int PasswordFieldNumber = 2;
  private string password_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Password {
    get { return password_; }
    set {
      password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ValidateUserLoginReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ValidateUserLoginReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Username != other.Username) return false;
    if (Password != other.Password) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Username.Length != 0) hash ^= Username.GetHashCode();
    if (Password.Length != 0) hash ^= Password.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Username.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Username);
    }
    if (Password.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Password);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Username.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
    }
    if (Password.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ValidateUserLoginReq other) {
    if (other == null) {
      return;
    }
    if (other.Username.Length != 0) {
      Username = other.Username;
    }
    if (other.Password.Length != 0) {
      Password = other.Password;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Username = input.ReadString();
          break;
        }
        case 18: {
          Password = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class ValidateUserLoginResp : pb::IMessage<ValidateUserLoginResp> {
  private static readonly pb::MessageParser<ValidateUserLoginResp> _parser = new pb::MessageParser<ValidateUserLoginResp>(() => new ValidateUserLoginResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ValidateUserLoginResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ValidateUserLoginResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ValidateUserLoginResp(ValidateUserLoginResp other) : this() {
    userId_ = other.userId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ValidateUserLoginResp Clone() {
    return new ValidateUserLoginResp(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ValidateUserLoginResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ValidateUserLoginResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ValidateUserLoginResp other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Validate access token
/// </summary>
public sealed partial class ValidateAccessTokenReq : pb::IMessage<ValidateAccessTokenReq> {
  private static readonly pb::MessageParser<ValidateAccessTokenReq> _parser = new pb::MessageParser<ValidateAccessTokenReq>(() => new ValidateAccessTokenReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ValidateAccessTokenReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ValidateAccessTokenReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ValidateAccessTokenReq(ValidateAccessTokenReq other) : this() {
    userId_ = other.userId_;
    accessToken_ = other.accessToken_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ValidateAccessTokenReq Clone() {
    return new ValidateAccessTokenReq(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "access_token" field.</summary>
  public const int AccessTokenFieldNumber = 2;
  private string accessToken_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string AccessToken {
    get { return accessToken_; }
    set {
      accessToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ValidateAccessTokenReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ValidateAccessTokenReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (AccessToken != other.AccessToken) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (AccessToken.Length != 0) hash ^= AccessToken.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (AccessToken.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(AccessToken);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (AccessToken.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessToken);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ValidateAccessTokenReq other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    if (other.AccessToken.Length != 0) {
      AccessToken = other.AccessToken;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
        case 18: {
          AccessToken = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class ValidateAccessTokenResp : pb::IMessage<ValidateAccessTokenResp> {
  private static readonly pb::MessageParser<ValidateAccessTokenResp> _parser = new pb::MessageParser<ValidateAccessTokenResp>(() => new ValidateAccessTokenResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ValidateAccessTokenResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ValidateAccessTokenResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ValidateAccessTokenResp(ValidateAccessTokenResp other) : this() {
    isPass_ = other.isPass_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ValidateAccessTokenResp Clone() {
    return new ValidateAccessTokenResp(this);
  }

  /// <summary>Field number for the "is_pass" field.</summary>
  public const int IsPassFieldNumber = 1;
  private bool isPass_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsPass {
    get { return isPass_; }
    set {
      isPass_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ValidateAccessTokenResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ValidateAccessTokenResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (IsPass != other.IsPass) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (IsPass != false) hash ^= IsPass.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (IsPass != false) {
      output.WriteRawTag(8);
      output.WriteBool(IsPass);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (IsPass != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ValidateAccessTokenResp other) {
    if (other == null) {
      return;
    }
    if (other.IsPass != false) {
      IsPass = other.IsPass;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          IsPass = input.ReadBool();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Get user level
/// </summary>
public sealed partial class GetUserLevelReq : pb::IMessage<GetUserLevelReq> {
  private static readonly pb::MessageParser<GetUserLevelReq> _parser = new pb::MessageParser<GetUserLevelReq>(() => new GetUserLevelReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetUserLevelReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[9]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetUserLevelReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetUserLevelReq(GetUserLevelReq other) : this() {
    userId_ = other.userId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetUserLevelReq Clone() {
    return new GetUserLevelReq(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetUserLevelReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetUserLevelReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetUserLevelReq other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class GetUserLevelResp : pb::IMessage<GetUserLevelResp> {
  private static readonly pb::MessageParser<GetUserLevelResp> _parser = new pb::MessageParser<GetUserLevelResp>(() => new GetUserLevelResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetUserLevelResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[10]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetUserLevelResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetUserLevelResp(GetUserLevelResp other) : this() {
    userLevel_ = other.userLevel_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetUserLevelResp Clone() {
    return new GetUserLevelResp(this);
  }

  /// <summary>Field number for the "user_level" field.</summary>
  public const int UserLevelFieldNumber = 1;
  private uint userLevel_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint UserLevel {
    get { return userLevel_; }
    set {
      userLevel_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetUserLevelResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetUserLevelResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserLevel != other.UserLevel) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserLevel != 0) hash ^= UserLevel.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserLevel != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(UserLevel);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserLevel != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UserLevel);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetUserLevelResp other) {
    if (other == null) {
      return;
    }
    if (other.UserLevel != 0) {
      UserLevel = other.UserLevel;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          UserLevel = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Get gold
/// </summary>
public sealed partial class GetGoldReq : pb::IMessage<GetGoldReq> {
  private static readonly pb::MessageParser<GetGoldReq> _parser = new pb::MessageParser<GetGoldReq>(() => new GetGoldReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetGoldReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[11]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetGoldReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetGoldReq(GetGoldReq other) : this() {
    userId_ = other.userId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetGoldReq Clone() {
    return new GetGoldReq(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetGoldReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetGoldReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetGoldReq other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Increase gold
/// </summary>
public sealed partial class ChangeGoldReq : pb::IMessage<ChangeGoldReq> {
  private static readonly pb::MessageParser<ChangeGoldReq> _parser = new pb::MessageParser<ChangeGoldReq>(() => new ChangeGoldReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ChangeGoldReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[12]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ChangeGoldReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ChangeGoldReq(ChangeGoldReq other) : this() {
    userId_ = other.userId_;
    changeAmount_ = other.changeAmount_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ChangeGoldReq Clone() {
    return new ChangeGoldReq(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "change_amount" field.</summary>
  public const int ChangeAmountFieldNumber = 2;
  private int changeAmount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ChangeAmount {
    get { return changeAmount_; }
    set {
      changeAmount_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ChangeGoldReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ChangeGoldReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (ChangeAmount != other.ChangeAmount) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (ChangeAmount != 0) hash ^= ChangeAmount.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (ChangeAmount != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(ChangeAmount);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (ChangeAmount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChangeAmount);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ChangeGoldReq other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    if (other.ChangeAmount != 0) {
      ChangeAmount = other.ChangeAmount;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
        case 16: {
          ChangeAmount = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Get cash
/// </summary>
public sealed partial class GetCashReq : pb::IMessage<GetCashReq> {
  private static readonly pb::MessageParser<GetCashReq> _parser = new pb::MessageParser<GetCashReq>(() => new GetCashReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetCashReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[13]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCashReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCashReq(GetCashReq other) : this() {
    userId_ = other.userId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCashReq Clone() {
    return new GetCashReq(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetCashReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetCashReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetCashReq other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Increase cash
/// </summary>
public sealed partial class ChangeCashReq : pb::IMessage<ChangeCashReq> {
  private static readonly pb::MessageParser<ChangeCashReq> _parser = new pb::MessageParser<ChangeCashReq>(() => new ChangeCashReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ChangeCashReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[14]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ChangeCashReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ChangeCashReq(ChangeCashReq other) : this() {
    userId_ = other.userId_;
    changeAmount_ = other.changeAmount_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ChangeCashReq Clone() {
    return new ChangeCashReq(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "change_amount" field.</summary>
  public const int ChangeAmountFieldNumber = 2;
  private int changeAmount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ChangeAmount {
    get { return changeAmount_; }
    set {
      changeAmount_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ChangeCashReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ChangeCashReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (ChangeAmount != other.ChangeAmount) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (ChangeAmount != 0) hash ^= ChangeAmount.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (ChangeAmount != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(ChangeAmount);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (ChangeAmount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChangeAmount);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ChangeCashReq other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    if (other.ChangeAmount != 0) {
      ChangeAmount = other.ChangeAmount;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
        case 16: {
          ChangeAmount = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Update access token
/// </summary>
public sealed partial class UpdateAccessTokenReq : pb::IMessage<UpdateAccessTokenReq> {
  private static readonly pb::MessageParser<UpdateAccessTokenReq> _parser = new pb::MessageParser<UpdateAccessTokenReq>(() => new UpdateAccessTokenReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateAccessTokenReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[15]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateAccessTokenReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateAccessTokenReq(UpdateAccessTokenReq other) : this() {
    userId_ = other.userId_;
    accessToken_ = other.accessToken_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateAccessTokenReq Clone() {
    return new UpdateAccessTokenReq(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "access_token" field.</summary>
  public const int AccessTokenFieldNumber = 2;
  private string accessToken_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string AccessToken {
    get { return accessToken_; }
    set {
      accessToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateAccessTokenReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateAccessTokenReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (AccessToken != other.AccessToken) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (AccessToken.Length != 0) hash ^= AccessToken.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (AccessToken.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(AccessToken);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (AccessToken.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessToken);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateAccessTokenReq other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    if (other.AccessToken.Length != 0) {
      AccessToken = other.AccessToken;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
        case 18: {
          AccessToken = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Create user login
/// </summary>
public sealed partial class CreateUserLoginReq : pb::IMessage<CreateUserLoginReq> {
  private static readonly pb::MessageParser<CreateUserLoginReq> _parser = new pb::MessageParser<CreateUserLoginReq>(() => new CreateUserLoginReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CreateUserLoginReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[16]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CreateUserLoginReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CreateUserLoginReq(CreateUserLoginReq other) : this() {
    username_ = other.username_;
    password_ = other.password_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CreateUserLoginReq Clone() {
    return new CreateUserLoginReq(this);
  }

  /// <summary>Field number for the "username" field.</summary>
  public const int UsernameFieldNumber = 1;
  private string username_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Username {
    get { return username_; }
    set {
      username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "password" field.</summary>
  public const int PasswordFieldNumber = 2;
  private string password_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Password {
    get { return password_; }
    set {
      password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CreateUserLoginReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CreateUserLoginReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Username != other.Username) return false;
    if (Password != other.Password) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Username.Length != 0) hash ^= Username.GetHashCode();
    if (Password.Length != 0) hash ^= Password.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Username.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Username);
    }
    if (Password.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Password);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Username.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
    }
    if (Password.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CreateUserLoginReq other) {
    if (other == null) {
      return;
    }
    if (other.Username.Length != 0) {
      Username = other.Username;
    }
    if (other.Password.Length != 0) {
      Password = other.Password;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Username = input.ReadString();
          break;
        }
        case 18: {
          Password = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Find username
/// </summary>
public sealed partial class FindUsernameReq : pb::IMessage<FindUsernameReq> {
  private static readonly pb::MessageParser<FindUsernameReq> _parser = new pb::MessageParser<FindUsernameReq>(() => new FindUsernameReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<FindUsernameReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[17]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FindUsernameReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FindUsernameReq(FindUsernameReq other) : this() {
    username_ = other.username_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FindUsernameReq Clone() {
    return new FindUsernameReq(this);
  }

  /// <summary>Field number for the "username" field.</summary>
  public const int UsernameFieldNumber = 1;
  private string username_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Username {
    get { return username_; }
    set {
      username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as FindUsernameReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(FindUsernameReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Username != other.Username) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Username.Length != 0) hash ^= Username.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Username.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Username);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Username.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(FindUsernameReq other) {
    if (other == null) {
      return;
    }
    if (other.Username.Length != 0) {
      Username = other.Username;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Username = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class FindUsernameResp : pb::IMessage<FindUsernameResp> {
  private static readonly pb::MessageParser<FindUsernameResp> _parser = new pb::MessageParser<FindUsernameResp>(() => new FindUsernameResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<FindUsernameResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[18]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FindUsernameResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FindUsernameResp(FindUsernameResp other) : this() {
    foundAmount_ = other.foundAmount_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FindUsernameResp Clone() {
    return new FindUsernameResp(this);
  }

  /// <summary>Field number for the "found_amount" field.</summary>
  public const int FoundAmountFieldNumber = 1;
  private long foundAmount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long FoundAmount {
    get { return foundAmount_; }
    set {
      foundAmount_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as FindUsernameResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(FindUsernameResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (FoundAmount != other.FoundAmount) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (FoundAmount != 0L) hash ^= FoundAmount.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (FoundAmount != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(FoundAmount);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (FoundAmount != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(FoundAmount);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(FindUsernameResp other) {
    if (other == null) {
      return;
    }
    if (other.FoundAmount != 0L) {
      FoundAmount = other.FoundAmount;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          FoundAmount = input.ReadInt64();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Create character
/// </summary>
public sealed partial class CreateCharacterReq : pb::IMessage<CreateCharacterReq> {
  private static readonly pb::MessageParser<CreateCharacterReq> _parser = new pb::MessageParser<CreateCharacterReq>(() => new CreateCharacterReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CreateCharacterReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[19]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CreateCharacterReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CreateCharacterReq(CreateCharacterReq other) : this() {
    userId_ = other.userId_;
    characterData_ = other.characterData_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CreateCharacterReq Clone() {
    return new CreateCharacterReq(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "character_data" field.</summary>
  public const int CharacterDataFieldNumber = 2;
  private pb::ByteString characterData_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString CharacterData {
    get { return characterData_; }
    set {
      characterData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CreateCharacterReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CreateCharacterReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (CharacterData != other.CharacterData) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (CharacterData.Length != 0) hash ^= CharacterData.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (CharacterData.Length != 0) {
      output.WriteRawTag(18);
      output.WriteBytes(CharacterData);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (CharacterData.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(CharacterData);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CreateCharacterReq other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    if (other.CharacterData.Length != 0) {
      CharacterData = other.CharacterData;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
        case 18: {
          CharacterData = input.ReadBytes();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Read character
/// </summary>
public sealed partial class ReadCharacterReq : pb::IMessage<ReadCharacterReq> {
  private static readonly pb::MessageParser<ReadCharacterReq> _parser = new pb::MessageParser<ReadCharacterReq>(() => new ReadCharacterReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ReadCharacterReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[20]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadCharacterReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadCharacterReq(ReadCharacterReq other) : this() {
    userId_ = other.userId_;
    characterId_ = other.characterId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadCharacterReq Clone() {
    return new ReadCharacterReq(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "character_id" field.</summary>
  public const int CharacterIdFieldNumber = 2;
  private string characterId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CharacterId {
    get { return characterId_; }
    set {
      characterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ReadCharacterReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ReadCharacterReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (CharacterId != other.CharacterId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (CharacterId.Length != 0) hash ^= CharacterId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (CharacterId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(CharacterId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (CharacterId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CharacterId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ReadCharacterReq other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    if (other.CharacterId.Length != 0) {
      CharacterId = other.CharacterId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
        case 18: {
          CharacterId = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class CharacterResp : pb::IMessage<CharacterResp> {
  private static readonly pb::MessageParser<CharacterResp> _parser = new pb::MessageParser<CharacterResp>(() => new CharacterResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CharacterResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[21]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CharacterResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CharacterResp(CharacterResp other) : this() {
    characterData_ = other.characterData_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CharacterResp Clone() {
    return new CharacterResp(this);
  }

  /// <summary>Field number for the "character_data" field.</summary>
  public const int CharacterDataFieldNumber = 1;
  private pb::ByteString characterData_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString CharacterData {
    get { return characterData_; }
    set {
      characterData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CharacterResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CharacterResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CharacterData != other.CharacterData) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CharacterData.Length != 0) hash ^= CharacterData.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CharacterData.Length != 0) {
      output.WriteRawTag(10);
      output.WriteBytes(CharacterData);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CharacterData.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(CharacterData);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CharacterResp other) {
    if (other == null) {
      return;
    }
    if (other.CharacterData.Length != 0) {
      CharacterData = other.CharacterData;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          CharacterData = input.ReadBytes();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Read characters
/// </summary>
public sealed partial class ReadCharactersReq : pb::IMessage<ReadCharactersReq> {
  private static readonly pb::MessageParser<ReadCharactersReq> _parser = new pb::MessageParser<ReadCharactersReq>(() => new ReadCharactersReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ReadCharactersReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[22]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadCharactersReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadCharactersReq(ReadCharactersReq other) : this() {
    userId_ = other.userId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadCharactersReq Clone() {
    return new ReadCharactersReq(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ReadCharactersReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ReadCharactersReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ReadCharactersReq other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class CharactersResp : pb::IMessage<CharactersResp> {
  private static readonly pb::MessageParser<CharactersResp> _parser = new pb::MessageParser<CharactersResp>(() => new CharactersResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CharactersResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[23]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CharactersResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CharactersResp(CharactersResp other) : this() {
    list_ = other.list_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CharactersResp Clone() {
    return new CharactersResp(this);
  }

  /// <summary>Field number for the "list" field.</summary>
  public const int ListFieldNumber = 1;
  private static readonly pb::FieldCodec<pb::ByteString> _repeated_list_codec
      = pb::FieldCodec.ForBytes(10);
  private readonly pbc::RepeatedField<pb::ByteString> list_ = new pbc::RepeatedField<pb::ByteString>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<pb::ByteString> List {
    get { return list_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CharactersResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CharactersResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!list_.Equals(other.list_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= list_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    list_.WriteTo(output, _repeated_list_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += list_.CalculateSize(_repeated_list_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CharactersResp other) {
    if (other == null) {
      return;
    }
    list_.Add(other.list_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          list_.AddEntriesFrom(input, _repeated_list_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Update character
/// </summary>
public sealed partial class UpdateCharacterReq : pb::IMessage<UpdateCharacterReq> {
  private static readonly pb::MessageParser<UpdateCharacterReq> _parser = new pb::MessageParser<UpdateCharacterReq>(() => new UpdateCharacterReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateCharacterReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[24]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateCharacterReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateCharacterReq(UpdateCharacterReq other) : this() {
    characterData_ = other.characterData_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateCharacterReq Clone() {
    return new UpdateCharacterReq(this);
  }

  /// <summary>Field number for the "character_data" field.</summary>
  public const int CharacterDataFieldNumber = 1;
  private pb::ByteString characterData_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString CharacterData {
    get { return characterData_; }
    set {
      characterData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateCharacterReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateCharacterReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CharacterData != other.CharacterData) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CharacterData.Length != 0) hash ^= CharacterData.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CharacterData.Length != 0) {
      output.WriteRawTag(10);
      output.WriteBytes(CharacterData);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CharacterData.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(CharacterData);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateCharacterReq other) {
    if (other == null) {
      return;
    }
    if (other.CharacterData.Length != 0) {
      CharacterData = other.CharacterData;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          CharacterData = input.ReadBytes();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Delete character
/// </summary>
public sealed partial class DeleteCharacterReq : pb::IMessage<DeleteCharacterReq> {
  private static readonly pb::MessageParser<DeleteCharacterReq> _parser = new pb::MessageParser<DeleteCharacterReq>(() => new DeleteCharacterReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DeleteCharacterReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[25]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteCharacterReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteCharacterReq(DeleteCharacterReq other) : this() {
    userId_ = other.userId_;
    characterId_ = other.characterId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteCharacterReq Clone() {
    return new DeleteCharacterReq(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "character_id" field.</summary>
  public const int CharacterIdFieldNumber = 2;
  private string characterId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CharacterId {
    get { return characterId_; }
    set {
      characterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DeleteCharacterReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DeleteCharacterReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (CharacterId != other.CharacterId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (CharacterId.Length != 0) hash ^= CharacterId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (CharacterId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(CharacterId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (CharacterId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CharacterId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DeleteCharacterReq other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    if (other.CharacterId.Length != 0) {
      CharacterId = other.CharacterId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
        case 18: {
          CharacterId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Find character name
/// </summary>
public sealed partial class FindCharacterNameReq : pb::IMessage<FindCharacterNameReq> {
  private static readonly pb::MessageParser<FindCharacterNameReq> _parser = new pb::MessageParser<FindCharacterNameReq>(() => new FindCharacterNameReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<FindCharacterNameReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[26]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FindCharacterNameReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FindCharacterNameReq(FindCharacterNameReq other) : this() {
    characterName_ = other.characterName_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FindCharacterNameReq Clone() {
    return new FindCharacterNameReq(this);
  }

  /// <summary>Field number for the "character_name" field.</summary>
  public const int CharacterNameFieldNumber = 1;
  private string characterName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CharacterName {
    get { return characterName_; }
    set {
      characterName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as FindCharacterNameReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(FindCharacterNameReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CharacterName != other.CharacterName) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CharacterName.Length != 0) hash ^= CharacterName.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CharacterName.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(CharacterName);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CharacterName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CharacterName);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(FindCharacterNameReq other) {
    if (other == null) {
      return;
    }
    if (other.CharacterName.Length != 0) {
      CharacterName = other.CharacterName;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          CharacterName = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class FindCharacterNameResp : pb::IMessage<FindCharacterNameResp> {
  private static readonly pb::MessageParser<FindCharacterNameResp> _parser = new pb::MessageParser<FindCharacterNameResp>(() => new FindCharacterNameResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<FindCharacterNameResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[27]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FindCharacterNameResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FindCharacterNameResp(FindCharacterNameResp other) : this() {
    foundAmount_ = other.foundAmount_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FindCharacterNameResp Clone() {
    return new FindCharacterNameResp(this);
  }

  /// <summary>Field number for the "found_amount" field.</summary>
  public const int FoundAmountFieldNumber = 1;
  private long foundAmount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long FoundAmount {
    get { return foundAmount_; }
    set {
      foundAmount_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as FindCharacterNameResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(FindCharacterNameResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (FoundAmount != other.FoundAmount) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (FoundAmount != 0L) hash ^= FoundAmount.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (FoundAmount != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(FoundAmount);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (FoundAmount != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(FoundAmount);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(FindCharacterNameResp other) {
    if (other == null) {
      return;
    }
    if (other.FoundAmount != 0L) {
      FoundAmount = other.FoundAmount;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          FoundAmount = input.ReadInt64();
          break;
        }
      }
    }
  }

}

public sealed partial class GetIdByCharacterNameReq : pb::IMessage<GetIdByCharacterNameReq> {
  private static readonly pb::MessageParser<GetIdByCharacterNameReq> _parser = new pb::MessageParser<GetIdByCharacterNameReq>(() => new GetIdByCharacterNameReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetIdByCharacterNameReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[28]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetIdByCharacterNameReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetIdByCharacterNameReq(GetIdByCharacterNameReq other) : this() {
    characterName_ = other.characterName_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetIdByCharacterNameReq Clone() {
    return new GetIdByCharacterNameReq(this);
  }

  /// <summary>Field number for the "character_name" field.</summary>
  public const int CharacterNameFieldNumber = 1;
  private string characterName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CharacterName {
    get { return characterName_; }
    set {
      characterName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetIdByCharacterNameReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetIdByCharacterNameReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CharacterName != other.CharacterName) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CharacterName.Length != 0) hash ^= CharacterName.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CharacterName.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(CharacterName);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CharacterName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CharacterName);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetIdByCharacterNameReq other) {
    if (other == null) {
      return;
    }
    if (other.CharacterName.Length != 0) {
      CharacterName = other.CharacterName;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          CharacterName = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class GetIdByCharacterNameResp : pb::IMessage<GetIdByCharacterNameResp> {
  private static readonly pb::MessageParser<GetIdByCharacterNameResp> _parser = new pb::MessageParser<GetIdByCharacterNameResp>(() => new GetIdByCharacterNameResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetIdByCharacterNameResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[29]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetIdByCharacterNameResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetIdByCharacterNameResp(GetIdByCharacterNameResp other) : this() {
    id_ = other.id_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetIdByCharacterNameResp Clone() {
    return new GetIdByCharacterNameResp(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private string id_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Id {
    get { return id_; }
    set {
      id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetIdByCharacterNameResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetIdByCharacterNameResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id.Length != 0) hash ^= Id.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Id);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetIdByCharacterNameResp other) {
    if (other == null) {
      return;
    }
    if (other.Id.Length != 0) {
      Id = other.Id;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Id = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class GetUserIdByCharacterNameReq : pb::IMessage<GetUserIdByCharacterNameReq> {
  private static readonly pb::MessageParser<GetUserIdByCharacterNameReq> _parser = new pb::MessageParser<GetUserIdByCharacterNameReq>(() => new GetUserIdByCharacterNameReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetUserIdByCharacterNameReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[30]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetUserIdByCharacterNameReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetUserIdByCharacterNameReq(GetUserIdByCharacterNameReq other) : this() {
    characterName_ = other.characterName_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetUserIdByCharacterNameReq Clone() {
    return new GetUserIdByCharacterNameReq(this);
  }

  /// <summary>Field number for the "character_name" field.</summary>
  public const int CharacterNameFieldNumber = 1;
  private string characterName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CharacterName {
    get { return characterName_; }
    set {
      characterName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetUserIdByCharacterNameReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetUserIdByCharacterNameReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CharacterName != other.CharacterName) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CharacterName.Length != 0) hash ^= CharacterName.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CharacterName.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(CharacterName);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CharacterName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CharacterName);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetUserIdByCharacterNameReq other) {
    if (other == null) {
      return;
    }
    if (other.CharacterName.Length != 0) {
      CharacterName = other.CharacterName;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          CharacterName = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class GetUserIdByCharacterNameResp : pb::IMessage<GetUserIdByCharacterNameResp> {
  private static readonly pb::MessageParser<GetUserIdByCharacterNameResp> _parser = new pb::MessageParser<GetUserIdByCharacterNameResp>(() => new GetUserIdByCharacterNameResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetUserIdByCharacterNameResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[31]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetUserIdByCharacterNameResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetUserIdByCharacterNameResp(GetUserIdByCharacterNameResp other) : this() {
    userId_ = other.userId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetUserIdByCharacterNameResp Clone() {
    return new GetUserIdByCharacterNameResp(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetUserIdByCharacterNameResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetUserIdByCharacterNameResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetUserIdByCharacterNameResp other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Find characters
/// </summary>
public sealed partial class FindCharactersReq : pb::IMessage<FindCharactersReq> {
  private static readonly pb::MessageParser<FindCharactersReq> _parser = new pb::MessageParser<FindCharactersReq>(() => new FindCharactersReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<FindCharactersReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[32]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FindCharactersReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FindCharactersReq(FindCharactersReq other) : this() {
    characterName_ = other.characterName_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FindCharactersReq Clone() {
    return new FindCharactersReq(this);
  }

  /// <summary>Field number for the "character_name" field.</summary>
  public const int CharacterNameFieldNumber = 1;
  private string characterName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CharacterName {
    get { return characterName_; }
    set {
      characterName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as FindCharactersReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(FindCharactersReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CharacterName != other.CharacterName) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CharacterName.Length != 0) hash ^= CharacterName.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CharacterName.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(CharacterName);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CharacterName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CharacterName);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(FindCharactersReq other) {
    if (other == null) {
      return;
    }
    if (other.CharacterName.Length != 0) {
      CharacterName = other.CharacterName;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          CharacterName = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class FindCharactersResp : pb::IMessage<FindCharactersResp> {
  private static readonly pb::MessageParser<FindCharactersResp> _parser = new pb::MessageParser<FindCharactersResp>(() => new FindCharactersResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<FindCharactersResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[33]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FindCharactersResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FindCharactersResp(FindCharactersResp other) : this() {
    list_ = other.list_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FindCharactersResp Clone() {
    return new FindCharactersResp(this);
  }

  /// <summary>Field number for the "list" field.</summary>
  public const int ListFieldNumber = 1;
  private static readonly pb::FieldCodec<pb::ByteString> _repeated_list_codec
      = pb::FieldCodec.ForBytes(10);
  private readonly pbc::RepeatedField<pb::ByteString> list_ = new pbc::RepeatedField<pb::ByteString>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<pb::ByteString> List {
    get { return list_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as FindCharactersResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(FindCharactersResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!list_.Equals(other.list_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= list_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    list_.WriteTo(output, _repeated_list_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += list_.CalculateSize(_repeated_list_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(FindCharactersResp other) {
    if (other == null) {
      return;
    }
    list_.Add(other.list_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          list_.AddEntriesFrom(input, _repeated_list_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Create friend
/// </summary>
public sealed partial class CreateFriendReq : pb::IMessage<CreateFriendReq> {
  private static readonly pb::MessageParser<CreateFriendReq> _parser = new pb::MessageParser<CreateFriendReq>(() => new CreateFriendReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CreateFriendReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[34]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CreateFriendReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CreateFriendReq(CreateFriendReq other) : this() {
    character1Id_ = other.character1Id_;
    character2Id_ = other.character2Id_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CreateFriendReq Clone() {
    return new CreateFriendReq(this);
  }

  /// <summary>Field number for the "character_1_id" field.</summary>
  public const int Character1IdFieldNumber = 1;
  private string character1Id_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Character1Id {
    get { return character1Id_; }
    set {
      character1Id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "character_2_id" field.</summary>
  public const int Character2IdFieldNumber = 2;
  private string character2Id_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Character2Id {
    get { return character2Id_; }
    set {
      character2Id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CreateFriendReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CreateFriendReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Character1Id != other.Character1Id) return false;
    if (Character2Id != other.Character2Id) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Character1Id.Length != 0) hash ^= Character1Id.GetHashCode();
    if (Character2Id.Length != 0) hash ^= Character2Id.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Character1Id.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Character1Id);
    }
    if (Character2Id.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Character2Id);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Character1Id.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Character1Id);
    }
    if (Character2Id.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Character2Id);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CreateFriendReq other) {
    if (other == null) {
      return;
    }
    if (other.Character1Id.Length != 0) {
      Character1Id = other.Character1Id;
    }
    if (other.Character2Id.Length != 0) {
      Character2Id = other.Character2Id;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Character1Id = input.ReadString();
          break;
        }
        case 18: {
          Character2Id = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Delete friend
/// </summary>
public sealed partial class DeleteFriendReq : pb::IMessage<DeleteFriendReq> {
  private static readonly pb::MessageParser<DeleteFriendReq> _parser = new pb::MessageParser<DeleteFriendReq>(() => new DeleteFriendReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DeleteFriendReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[35]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteFriendReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteFriendReq(DeleteFriendReq other) : this() {
    character1Id_ = other.character1Id_;
    character2Id_ = other.character2Id_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteFriendReq Clone() {
    return new DeleteFriendReq(this);
  }

  /// <summary>Field number for the "character_1_id" field.</summary>
  public const int Character1IdFieldNumber = 1;
  private string character1Id_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Character1Id {
    get { return character1Id_; }
    set {
      character1Id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "character_2_id" field.</summary>
  public const int Character2IdFieldNumber = 2;
  private string character2Id_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Character2Id {
    get { return character2Id_; }
    set {
      character2Id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DeleteFriendReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DeleteFriendReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Character1Id != other.Character1Id) return false;
    if (Character2Id != other.Character2Id) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Character1Id.Length != 0) hash ^= Character1Id.GetHashCode();
    if (Character2Id.Length != 0) hash ^= Character2Id.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Character1Id.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Character1Id);
    }
    if (Character2Id.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Character2Id);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Character1Id.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Character1Id);
    }
    if (Character2Id.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Character2Id);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DeleteFriendReq other) {
    if (other == null) {
      return;
    }
    if (other.Character1Id.Length != 0) {
      Character1Id = other.Character1Id;
    }
    if (other.Character2Id.Length != 0) {
      Character2Id = other.Character2Id;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Character1Id = input.ReadString();
          break;
        }
        case 18: {
          Character2Id = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Read friends
/// </summary>
public sealed partial class ReadFriendsReq : pb::IMessage<ReadFriendsReq> {
  private static readonly pb::MessageParser<ReadFriendsReq> _parser = new pb::MessageParser<ReadFriendsReq>(() => new ReadFriendsReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ReadFriendsReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[36]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadFriendsReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadFriendsReq(ReadFriendsReq other) : this() {
    characterId_ = other.characterId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadFriendsReq Clone() {
    return new ReadFriendsReq(this);
  }

  /// <summary>Field number for the "character_id" field.</summary>
  public const int CharacterIdFieldNumber = 1;
  private string characterId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CharacterId {
    get { return characterId_; }
    set {
      characterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ReadFriendsReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ReadFriendsReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CharacterId != other.CharacterId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CharacterId.Length != 0) hash ^= CharacterId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CharacterId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(CharacterId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CharacterId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CharacterId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ReadFriendsReq other) {
    if (other == null) {
      return;
    }
    if (other.CharacterId.Length != 0) {
      CharacterId = other.CharacterId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          CharacterId = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class ReadFriendsResp : pb::IMessage<ReadFriendsResp> {
  private static readonly pb::MessageParser<ReadFriendsResp> _parser = new pb::MessageParser<ReadFriendsResp>(() => new ReadFriendsResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ReadFriendsResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[37]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadFriendsResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadFriendsResp(ReadFriendsResp other) : this() {
    list_ = other.list_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadFriendsResp Clone() {
    return new ReadFriendsResp(this);
  }

  /// <summary>Field number for the "list" field.</summary>
  public const int ListFieldNumber = 1;
  private static readonly pb::FieldCodec<pb::ByteString> _repeated_list_codec
      = pb::FieldCodec.ForBytes(10);
  private readonly pbc::RepeatedField<pb::ByteString> list_ = new pbc::RepeatedField<pb::ByteString>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<pb::ByteString> List {
    get { return list_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ReadFriendsResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ReadFriendsResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!list_.Equals(other.list_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= list_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    list_.WriteTo(output, _repeated_list_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += list_.CalculateSize(_repeated_list_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ReadFriendsResp other) {
    if (other == null) {
      return;
    }
    list_.Add(other.list_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          list_.AddEntriesFrom(input, _repeated_list_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Create building
/// </summary>
public sealed partial class CreateBuildingReq : pb::IMessage<CreateBuildingReq> {
  private static readonly pb::MessageParser<CreateBuildingReq> _parser = new pb::MessageParser<CreateBuildingReq>(() => new CreateBuildingReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CreateBuildingReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[38]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CreateBuildingReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CreateBuildingReq(CreateBuildingReq other) : this() {
    mapName_ = other.mapName_;
    buildingData_ = other.buildingData_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CreateBuildingReq Clone() {
    return new CreateBuildingReq(this);
  }

  /// <summary>Field number for the "map_name" field.</summary>
  public const int MapNameFieldNumber = 1;
  private string mapName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string MapName {
    get { return mapName_; }
    set {
      mapName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "building_data" field.</summary>
  public const int BuildingDataFieldNumber = 2;
  private pb::ByteString buildingData_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString BuildingData {
    get { return buildingData_; }
    set {
      buildingData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CreateBuildingReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CreateBuildingReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (MapName != other.MapName) return false;
    if (BuildingData != other.BuildingData) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (MapName.Length != 0) hash ^= MapName.GetHashCode();
    if (BuildingData.Length != 0) hash ^= BuildingData.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (MapName.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(MapName);
    }
    if (BuildingData.Length != 0) {
      output.WriteRawTag(18);
      output.WriteBytes(BuildingData);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (MapName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(MapName);
    }
    if (BuildingData.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(BuildingData);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CreateBuildingReq other) {
    if (other == null) {
      return;
    }
    if (other.MapName.Length != 0) {
      MapName = other.MapName;
    }
    if (other.BuildingData.Length != 0) {
      BuildingData = other.BuildingData;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          MapName = input.ReadString();
          break;
        }
        case 18: {
          BuildingData = input.ReadBytes();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Update building
/// </summary>
public sealed partial class UpdateBuildingReq : pb::IMessage<UpdateBuildingReq> {
  private static readonly pb::MessageParser<UpdateBuildingReq> _parser = new pb::MessageParser<UpdateBuildingReq>(() => new UpdateBuildingReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateBuildingReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[39]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateBuildingReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateBuildingReq(UpdateBuildingReq other) : this() {
    mapName_ = other.mapName_;
    buildingData_ = other.buildingData_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateBuildingReq Clone() {
    return new UpdateBuildingReq(this);
  }

  /// <summary>Field number for the "map_name" field.</summary>
  public const int MapNameFieldNumber = 1;
  private string mapName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string MapName {
    get { return mapName_; }
    set {
      mapName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "building_data" field.</summary>
  public const int BuildingDataFieldNumber = 2;
  private pb::ByteString buildingData_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString BuildingData {
    get { return buildingData_; }
    set {
      buildingData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateBuildingReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateBuildingReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (MapName != other.MapName) return false;
    if (BuildingData != other.BuildingData) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (MapName.Length != 0) hash ^= MapName.GetHashCode();
    if (BuildingData.Length != 0) hash ^= BuildingData.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (MapName.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(MapName);
    }
    if (BuildingData.Length != 0) {
      output.WriteRawTag(18);
      output.WriteBytes(BuildingData);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (MapName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(MapName);
    }
    if (BuildingData.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(BuildingData);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateBuildingReq other) {
    if (other == null) {
      return;
    }
    if (other.MapName.Length != 0) {
      MapName = other.MapName;
    }
    if (other.BuildingData.Length != 0) {
      BuildingData = other.BuildingData;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          MapName = input.ReadString();
          break;
        }
        case 18: {
          BuildingData = input.ReadBytes();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Delete building
/// </summary>
public sealed partial class DeleteBuildingReq : pb::IMessage<DeleteBuildingReq> {
  private static readonly pb::MessageParser<DeleteBuildingReq> _parser = new pb::MessageParser<DeleteBuildingReq>(() => new DeleteBuildingReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DeleteBuildingReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[40]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteBuildingReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteBuildingReq(DeleteBuildingReq other) : this() {
    mapName_ = other.mapName_;
    buildingId_ = other.buildingId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteBuildingReq Clone() {
    return new DeleteBuildingReq(this);
  }

  /// <summary>Field number for the "map_name" field.</summary>
  public const int MapNameFieldNumber = 1;
  private string mapName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string MapName {
    get { return mapName_; }
    set {
      mapName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "building_id" field.</summary>
  public const int BuildingIdFieldNumber = 2;
  private string buildingId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string BuildingId {
    get { return buildingId_; }
    set {
      buildingId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DeleteBuildingReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DeleteBuildingReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (MapName != other.MapName) return false;
    if (BuildingId != other.BuildingId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (MapName.Length != 0) hash ^= MapName.GetHashCode();
    if (BuildingId.Length != 0) hash ^= BuildingId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (MapName.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(MapName);
    }
    if (BuildingId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(BuildingId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (MapName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(MapName);
    }
    if (BuildingId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(BuildingId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DeleteBuildingReq other) {
    if (other == null) {
      return;
    }
    if (other.MapName.Length != 0) {
      MapName = other.MapName;
    }
    if (other.BuildingId.Length != 0) {
      BuildingId = other.BuildingId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          MapName = input.ReadString();
          break;
        }
        case 18: {
          BuildingId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Read building
/// </summary>
public sealed partial class BuildingResp : pb::IMessage<BuildingResp> {
  private static readonly pb::MessageParser<BuildingResp> _parser = new pb::MessageParser<BuildingResp>(() => new BuildingResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<BuildingResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[41]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BuildingResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BuildingResp(BuildingResp other) : this() {
    buildingData_ = other.buildingData_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BuildingResp Clone() {
    return new BuildingResp(this);
  }

  /// <summary>Field number for the "building_data" field.</summary>
  public const int BuildingDataFieldNumber = 1;
  private pb::ByteString buildingData_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString BuildingData {
    get { return buildingData_; }
    set {
      buildingData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as BuildingResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(BuildingResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (BuildingData != other.BuildingData) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (BuildingData.Length != 0) hash ^= BuildingData.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (BuildingData.Length != 0) {
      output.WriteRawTag(10);
      output.WriteBytes(BuildingData);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (BuildingData.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(BuildingData);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(BuildingResp other) {
    if (other == null) {
      return;
    }
    if (other.BuildingData.Length != 0) {
      BuildingData = other.BuildingData;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          BuildingData = input.ReadBytes();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Read buildings
/// </summary>
public sealed partial class ReadBuildingsReq : pb::IMessage<ReadBuildingsReq> {
  private static readonly pb::MessageParser<ReadBuildingsReq> _parser = new pb::MessageParser<ReadBuildingsReq>(() => new ReadBuildingsReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ReadBuildingsReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[42]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadBuildingsReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadBuildingsReq(ReadBuildingsReq other) : this() {
    mapName_ = other.mapName_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadBuildingsReq Clone() {
    return new ReadBuildingsReq(this);
  }

  /// <summary>Field number for the "map_name" field.</summary>
  public const int MapNameFieldNumber = 1;
  private string mapName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string MapName {
    get { return mapName_; }
    set {
      mapName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ReadBuildingsReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ReadBuildingsReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (MapName != other.MapName) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (MapName.Length != 0) hash ^= MapName.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (MapName.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(MapName);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (MapName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(MapName);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ReadBuildingsReq other) {
    if (other == null) {
      return;
    }
    if (other.MapName.Length != 0) {
      MapName = other.MapName;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          MapName = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class BuildingsResp : pb::IMessage<BuildingsResp> {
  private static readonly pb::MessageParser<BuildingsResp> _parser = new pb::MessageParser<BuildingsResp>(() => new BuildingsResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<BuildingsResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[43]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BuildingsResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BuildingsResp(BuildingsResp other) : this() {
    list_ = other.list_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BuildingsResp Clone() {
    return new BuildingsResp(this);
  }

  /// <summary>Field number for the "list" field.</summary>
  public const int ListFieldNumber = 1;
  private static readonly pb::FieldCodec<pb::ByteString> _repeated_list_codec
      = pb::FieldCodec.ForBytes(10);
  private readonly pbc::RepeatedField<pb::ByteString> list_ = new pbc::RepeatedField<pb::ByteString>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<pb::ByteString> List {
    get { return list_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as BuildingsResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(BuildingsResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!list_.Equals(other.list_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= list_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    list_.WriteTo(output, _repeated_list_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += list_.CalculateSize(_repeated_list_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(BuildingsResp other) {
    if (other == null) {
      return;
    }
    list_.Add(other.list_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          list_.AddEntriesFrom(input, _repeated_list_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Create party
/// </summary>
public sealed partial class CreatePartyReq : pb::IMessage<CreatePartyReq> {
  private static readonly pb::MessageParser<CreatePartyReq> _parser = new pb::MessageParser<CreatePartyReq>(() => new CreatePartyReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CreatePartyReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[44]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CreatePartyReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CreatePartyReq(CreatePartyReq other) : this() {
    shareExp_ = other.shareExp_;
    shareItem_ = other.shareItem_;
    leaderCharacterId_ = other.leaderCharacterId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CreatePartyReq Clone() {
    return new CreatePartyReq(this);
  }

  /// <summary>Field number for the "share_exp" field.</summary>
  public const int ShareExpFieldNumber = 1;
  private bool shareExp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool ShareExp {
    get { return shareExp_; }
    set {
      shareExp_ = value;
    }
  }

  /// <summary>Field number for the "share_item" field.</summary>
  public const int ShareItemFieldNumber = 2;
  private bool shareItem_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool ShareItem {
    get { return shareItem_; }
    set {
      shareItem_ = value;
    }
  }

  /// <summary>Field number for the "leader_character_id" field.</summary>
  public const int LeaderCharacterIdFieldNumber = 3;
  private string leaderCharacterId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string LeaderCharacterId {
    get { return leaderCharacterId_; }
    set {
      leaderCharacterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CreatePartyReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CreatePartyReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ShareExp != other.ShareExp) return false;
    if (ShareItem != other.ShareItem) return false;
    if (LeaderCharacterId != other.LeaderCharacterId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ShareExp != false) hash ^= ShareExp.GetHashCode();
    if (ShareItem != false) hash ^= ShareItem.GetHashCode();
    if (LeaderCharacterId.Length != 0) hash ^= LeaderCharacterId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ShareExp != false) {
      output.WriteRawTag(8);
      output.WriteBool(ShareExp);
    }
    if (ShareItem != false) {
      output.WriteRawTag(16);
      output.WriteBool(ShareItem);
    }
    if (LeaderCharacterId.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(LeaderCharacterId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ShareExp != false) {
      size += 1 + 1;
    }
    if (ShareItem != false) {
      size += 1 + 1;
    }
    if (LeaderCharacterId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(LeaderCharacterId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CreatePartyReq other) {
    if (other == null) {
      return;
    }
    if (other.ShareExp != false) {
      ShareExp = other.ShareExp;
    }
    if (other.ShareItem != false) {
      ShareItem = other.ShareItem;
    }
    if (other.LeaderCharacterId.Length != 0) {
      LeaderCharacterId = other.LeaderCharacterId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ShareExp = input.ReadBool();
          break;
        }
        case 16: {
          ShareItem = input.ReadBool();
          break;
        }
        case 26: {
          LeaderCharacterId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Update party
/// </summary>
public sealed partial class UpdatePartyReq : pb::IMessage<UpdatePartyReq> {
  private static readonly pb::MessageParser<UpdatePartyReq> _parser = new pb::MessageParser<UpdatePartyReq>(() => new UpdatePartyReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdatePartyReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[45]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdatePartyReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdatePartyReq(UpdatePartyReq other) : this() {
    partyId_ = other.partyId_;
    shareExp_ = other.shareExp_;
    shareItem_ = other.shareItem_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdatePartyReq Clone() {
    return new UpdatePartyReq(this);
  }

  /// <summary>Field number for the "party_id" field.</summary>
  public const int PartyIdFieldNumber = 1;
  private int partyId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int PartyId {
    get { return partyId_; }
    set {
      partyId_ = value;
    }
  }

  /// <summary>Field number for the "share_exp" field.</summary>
  public const int ShareExpFieldNumber = 2;
  private bool shareExp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool ShareExp {
    get { return shareExp_; }
    set {
      shareExp_ = value;
    }
  }

  /// <summary>Field number for the "share_item" field.</summary>
  public const int ShareItemFieldNumber = 3;
  private bool shareItem_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool ShareItem {
    get { return shareItem_; }
    set {
      shareItem_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdatePartyReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdatePartyReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PartyId != other.PartyId) return false;
    if (ShareExp != other.ShareExp) return false;
    if (ShareItem != other.ShareItem) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (PartyId != 0) hash ^= PartyId.GetHashCode();
    if (ShareExp != false) hash ^= ShareExp.GetHashCode();
    if (ShareItem != false) hash ^= ShareItem.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (PartyId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(PartyId);
    }
    if (ShareExp != false) {
      output.WriteRawTag(16);
      output.WriteBool(ShareExp);
    }
    if (ShareItem != false) {
      output.WriteRawTag(24);
      output.WriteBool(ShareItem);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (PartyId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PartyId);
    }
    if (ShareExp != false) {
      size += 1 + 1;
    }
    if (ShareItem != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdatePartyReq other) {
    if (other == null) {
      return;
    }
    if (other.PartyId != 0) {
      PartyId = other.PartyId;
    }
    if (other.ShareExp != false) {
      ShareExp = other.ShareExp;
    }
    if (other.ShareItem != false) {
      ShareItem = other.ShareItem;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          PartyId = input.ReadInt32();
          break;
        }
        case 16: {
          ShareExp = input.ReadBool();
          break;
        }
        case 24: {
          ShareItem = input.ReadBool();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Update party leader
/// </summary>
public sealed partial class UpdatePartyLeaderReq : pb::IMessage<UpdatePartyLeaderReq> {
  private static readonly pb::MessageParser<UpdatePartyLeaderReq> _parser = new pb::MessageParser<UpdatePartyLeaderReq>(() => new UpdatePartyLeaderReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdatePartyLeaderReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[46]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdatePartyLeaderReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdatePartyLeaderReq(UpdatePartyLeaderReq other) : this() {
    partyId_ = other.partyId_;
    leaderCharacterId_ = other.leaderCharacterId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdatePartyLeaderReq Clone() {
    return new UpdatePartyLeaderReq(this);
  }

  /// <summary>Field number for the "party_id" field.</summary>
  public const int PartyIdFieldNumber = 1;
  private int partyId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int PartyId {
    get { return partyId_; }
    set {
      partyId_ = value;
    }
  }

  /// <summary>Field number for the "leader_character_id" field.</summary>
  public const int LeaderCharacterIdFieldNumber = 2;
  private string leaderCharacterId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string LeaderCharacterId {
    get { return leaderCharacterId_; }
    set {
      leaderCharacterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdatePartyLeaderReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdatePartyLeaderReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PartyId != other.PartyId) return false;
    if (LeaderCharacterId != other.LeaderCharacterId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (PartyId != 0) hash ^= PartyId.GetHashCode();
    if (LeaderCharacterId.Length != 0) hash ^= LeaderCharacterId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (PartyId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(PartyId);
    }
    if (LeaderCharacterId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(LeaderCharacterId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (PartyId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PartyId);
    }
    if (LeaderCharacterId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(LeaderCharacterId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdatePartyLeaderReq other) {
    if (other == null) {
      return;
    }
    if (other.PartyId != 0) {
      PartyId = other.PartyId;
    }
    if (other.LeaderCharacterId.Length != 0) {
      LeaderCharacterId = other.LeaderCharacterId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          PartyId = input.ReadInt32();
          break;
        }
        case 18: {
          LeaderCharacterId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Update character party
/// </summary>
public sealed partial class UpdateCharacterPartyReq : pb::IMessage<UpdateCharacterPartyReq> {
  private static readonly pb::MessageParser<UpdateCharacterPartyReq> _parser = new pb::MessageParser<UpdateCharacterPartyReq>(() => new UpdateCharacterPartyReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateCharacterPartyReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[47]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateCharacterPartyReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateCharacterPartyReq(UpdateCharacterPartyReq other) : this() {
    socialCharacterData_ = other.socialCharacterData_;
    partyId_ = other.partyId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateCharacterPartyReq Clone() {
    return new UpdateCharacterPartyReq(this);
  }

  /// <summary>Field number for the "social_character_data" field.</summary>
  public const int SocialCharacterDataFieldNumber = 1;
  private pb::ByteString socialCharacterData_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString SocialCharacterData {
    get { return socialCharacterData_; }
    set {
      socialCharacterData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "party_id" field.</summary>
  public const int PartyIdFieldNumber = 2;
  private int partyId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int PartyId {
    get { return partyId_; }
    set {
      partyId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateCharacterPartyReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateCharacterPartyReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SocialCharacterData != other.SocialCharacterData) return false;
    if (PartyId != other.PartyId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SocialCharacterData.Length != 0) hash ^= SocialCharacterData.GetHashCode();
    if (PartyId != 0) hash ^= PartyId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SocialCharacterData.Length != 0) {
      output.WriteRawTag(10);
      output.WriteBytes(SocialCharacterData);
    }
    if (PartyId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(PartyId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SocialCharacterData.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(SocialCharacterData);
    }
    if (PartyId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PartyId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateCharacterPartyReq other) {
    if (other == null) {
      return;
    }
    if (other.SocialCharacterData.Length != 0) {
      SocialCharacterData = other.SocialCharacterData;
    }
    if (other.PartyId != 0) {
      PartyId = other.PartyId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          SocialCharacterData = input.ReadBytes();
          break;
        }
        case 16: {
          PartyId = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Clear character party
/// </summary>
public sealed partial class ClearCharacterPartyReq : pb::IMessage<ClearCharacterPartyReq> {
  private static readonly pb::MessageParser<ClearCharacterPartyReq> _parser = new pb::MessageParser<ClearCharacterPartyReq>(() => new ClearCharacterPartyReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ClearCharacterPartyReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[48]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClearCharacterPartyReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClearCharacterPartyReq(ClearCharacterPartyReq other) : this() {
    characterId_ = other.characterId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClearCharacterPartyReq Clone() {
    return new ClearCharacterPartyReq(this);
  }

  /// <summary>Field number for the "character_id" field.</summary>
  public const int CharacterIdFieldNumber = 1;
  private string characterId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CharacterId {
    get { return characterId_; }
    set {
      characterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ClearCharacterPartyReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ClearCharacterPartyReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CharacterId != other.CharacterId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CharacterId.Length != 0) hash ^= CharacterId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CharacterId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(CharacterId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CharacterId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CharacterId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ClearCharacterPartyReq other) {
    if (other == null) {
      return;
    }
    if (other.CharacterId.Length != 0) {
      CharacterId = other.CharacterId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          CharacterId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Delete party
/// </summary>
public sealed partial class DeletePartyReq : pb::IMessage<DeletePartyReq> {
  private static readonly pb::MessageParser<DeletePartyReq> _parser = new pb::MessageParser<DeletePartyReq>(() => new DeletePartyReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DeletePartyReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[49]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeletePartyReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeletePartyReq(DeletePartyReq other) : this() {
    partyId_ = other.partyId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeletePartyReq Clone() {
    return new DeletePartyReq(this);
  }

  /// <summary>Field number for the "party_id" field.</summary>
  public const int PartyIdFieldNumber = 1;
  private int partyId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int PartyId {
    get { return partyId_; }
    set {
      partyId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DeletePartyReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DeletePartyReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PartyId != other.PartyId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (PartyId != 0) hash ^= PartyId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (PartyId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(PartyId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (PartyId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PartyId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DeletePartyReq other) {
    if (other == null) {
      return;
    }
    if (other.PartyId != 0) {
      PartyId = other.PartyId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          PartyId = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Read party
/// </summary>
public sealed partial class ReadPartyReq : pb::IMessage<ReadPartyReq> {
  private static readonly pb::MessageParser<ReadPartyReq> _parser = new pb::MessageParser<ReadPartyReq>(() => new ReadPartyReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ReadPartyReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[50]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadPartyReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadPartyReq(ReadPartyReq other) : this() {
    partyId_ = other.partyId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadPartyReq Clone() {
    return new ReadPartyReq(this);
  }

  /// <summary>Field number for the "party_id" field.</summary>
  public const int PartyIdFieldNumber = 1;
  private int partyId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int PartyId {
    get { return partyId_; }
    set {
      partyId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ReadPartyReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ReadPartyReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PartyId != other.PartyId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (PartyId != 0) hash ^= PartyId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (PartyId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(PartyId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (PartyId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PartyId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ReadPartyReq other) {
    if (other == null) {
      return;
    }
    if (other.PartyId != 0) {
      PartyId = other.PartyId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          PartyId = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class PartyResp : pb::IMessage<PartyResp> {
  private static readonly pb::MessageParser<PartyResp> _parser = new pb::MessageParser<PartyResp>(() => new PartyResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PartyResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[51]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PartyResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PartyResp(PartyResp other) : this() {
    partyData_ = other.partyData_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PartyResp Clone() {
    return new PartyResp(this);
  }

  /// <summary>Field number for the "party_data" field.</summary>
  public const int PartyDataFieldNumber = 1;
  private pb::ByteString partyData_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString PartyData {
    get { return partyData_; }
    set {
      partyData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PartyResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PartyResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PartyData != other.PartyData) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (PartyData.Length != 0) hash ^= PartyData.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (PartyData.Length != 0) {
      output.WriteRawTag(10);
      output.WriteBytes(PartyData);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (PartyData.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(PartyData);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PartyResp other) {
    if (other == null) {
      return;
    }
    if (other.PartyData.Length != 0) {
      PartyData = other.PartyData;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          PartyData = input.ReadBytes();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Create guild
/// </summary>
public sealed partial class CreateGuildReq : pb::IMessage<CreateGuildReq> {
  private static readonly pb::MessageParser<CreateGuildReq> _parser = new pb::MessageParser<CreateGuildReq>(() => new CreateGuildReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CreateGuildReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[52]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CreateGuildReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CreateGuildReq(CreateGuildReq other) : this() {
    guildName_ = other.guildName_;
    leaderCharacterId_ = other.leaderCharacterId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CreateGuildReq Clone() {
    return new CreateGuildReq(this);
  }

  /// <summary>Field number for the "guild_name" field.</summary>
  public const int GuildNameFieldNumber = 1;
  private string guildName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string GuildName {
    get { return guildName_; }
    set {
      guildName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "leader_character_id" field.</summary>
  public const int LeaderCharacterIdFieldNumber = 2;
  private string leaderCharacterId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string LeaderCharacterId {
    get { return leaderCharacterId_; }
    set {
      leaderCharacterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CreateGuildReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CreateGuildReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GuildName != other.GuildName) return false;
    if (LeaderCharacterId != other.LeaderCharacterId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GuildName.Length != 0) hash ^= GuildName.GetHashCode();
    if (LeaderCharacterId.Length != 0) hash ^= LeaderCharacterId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GuildName.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(GuildName);
    }
    if (LeaderCharacterId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(LeaderCharacterId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GuildName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(GuildName);
    }
    if (LeaderCharacterId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(LeaderCharacterId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CreateGuildReq other) {
    if (other == null) {
      return;
    }
    if (other.GuildName.Length != 0) {
      GuildName = other.GuildName;
    }
    if (other.LeaderCharacterId.Length != 0) {
      LeaderCharacterId = other.LeaderCharacterId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          GuildName = input.ReadString();
          break;
        }
        case 18: {
          LeaderCharacterId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Guild Level Up
/// </summary>
public sealed partial class IncreaseGuildExpReq : pb::IMessage<IncreaseGuildExpReq> {
  private static readonly pb::MessageParser<IncreaseGuildExpReq> _parser = new pb::MessageParser<IncreaseGuildExpReq>(() => new IncreaseGuildExpReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<IncreaseGuildExpReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[53]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public IncreaseGuildExpReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public IncreaseGuildExpReq(IncreaseGuildExpReq other) : this() {
    guildId_ = other.guildId_;
    exp_ = other.exp_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public IncreaseGuildExpReq Clone() {
    return new IncreaseGuildExpReq(this);
  }

  /// <summary>Field number for the "guild_id" field.</summary>
  public const int GuildIdFieldNumber = 1;
  private int guildId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int GuildId {
    get { return guildId_; }
    set {
      guildId_ = value;
    }
  }

  /// <summary>Field number for the "exp" field.</summary>
  public const int ExpFieldNumber = 2;
  private int exp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Exp {
    get { return exp_; }
    set {
      exp_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as IncreaseGuildExpReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(IncreaseGuildExpReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GuildId != other.GuildId) return false;
    if (Exp != other.Exp) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GuildId != 0) hash ^= GuildId.GetHashCode();
    if (Exp != 0) hash ^= Exp.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GuildId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(GuildId);
    }
    if (Exp != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Exp);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GuildId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(GuildId);
    }
    if (Exp != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Exp);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(IncreaseGuildExpReq other) {
    if (other == null) {
      return;
    }
    if (other.GuildId != 0) {
      GuildId = other.GuildId;
    }
    if (other.Exp != 0) {
      Exp = other.Exp;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          GuildId = input.ReadInt32();
          break;
        }
        case 16: {
          Exp = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Guild Skill Level Up
/// </summary>
public sealed partial class AddGuildSkillReq : pb::IMessage<AddGuildSkillReq> {
  private static readonly pb::MessageParser<AddGuildSkillReq> _parser = new pb::MessageParser<AddGuildSkillReq>(() => new AddGuildSkillReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AddGuildSkillReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[54]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddGuildSkillReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddGuildSkillReq(AddGuildSkillReq other) : this() {
    guildId_ = other.guildId_;
    skillId_ = other.skillId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddGuildSkillReq Clone() {
    return new AddGuildSkillReq(this);
  }

  /// <summary>Field number for the "guild_id" field.</summary>
  public const int GuildIdFieldNumber = 1;
  private int guildId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int GuildId {
    get { return guildId_; }
    set {
      guildId_ = value;
    }
  }

  /// <summary>Field number for the "skill_id" field.</summary>
  public const int SkillIdFieldNumber = 2;
  private int skillId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int SkillId {
    get { return skillId_; }
    set {
      skillId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AddGuildSkillReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AddGuildSkillReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GuildId != other.GuildId) return false;
    if (SkillId != other.SkillId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GuildId != 0) hash ^= GuildId.GetHashCode();
    if (SkillId != 0) hash ^= SkillId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GuildId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(GuildId);
    }
    if (SkillId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(SkillId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GuildId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(GuildId);
    }
    if (SkillId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(SkillId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AddGuildSkillReq other) {
    if (other == null) {
      return;
    }
    if (other.GuildId != 0) {
      GuildId = other.GuildId;
    }
    if (other.SkillId != 0) {
      SkillId = other.SkillId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          GuildId = input.ReadInt32();
          break;
        }
        case 16: {
          SkillId = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Update guild leader
/// </summary>
public sealed partial class UpdateGuildLeaderReq : pb::IMessage<UpdateGuildLeaderReq> {
  private static readonly pb::MessageParser<UpdateGuildLeaderReq> _parser = new pb::MessageParser<UpdateGuildLeaderReq>(() => new UpdateGuildLeaderReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateGuildLeaderReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[55]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateGuildLeaderReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateGuildLeaderReq(UpdateGuildLeaderReq other) : this() {
    guildId_ = other.guildId_;
    leaderCharacterId_ = other.leaderCharacterId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateGuildLeaderReq Clone() {
    return new UpdateGuildLeaderReq(this);
  }

  /// <summary>Field number for the "guild_id" field.</summary>
  public const int GuildIdFieldNumber = 1;
  private int guildId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int GuildId {
    get { return guildId_; }
    set {
      guildId_ = value;
    }
  }

  /// <summary>Field number for the "leader_character_id" field.</summary>
  public const int LeaderCharacterIdFieldNumber = 2;
  private string leaderCharacterId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string LeaderCharacterId {
    get { return leaderCharacterId_; }
    set {
      leaderCharacterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateGuildLeaderReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateGuildLeaderReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GuildId != other.GuildId) return false;
    if (LeaderCharacterId != other.LeaderCharacterId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GuildId != 0) hash ^= GuildId.GetHashCode();
    if (LeaderCharacterId.Length != 0) hash ^= LeaderCharacterId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GuildId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(GuildId);
    }
    if (LeaderCharacterId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(LeaderCharacterId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GuildId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(GuildId);
    }
    if (LeaderCharacterId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(LeaderCharacterId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateGuildLeaderReq other) {
    if (other == null) {
      return;
    }
    if (other.GuildId != 0) {
      GuildId = other.GuildId;
    }
    if (other.LeaderCharacterId.Length != 0) {
      LeaderCharacterId = other.LeaderCharacterId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          GuildId = input.ReadInt32();
          break;
        }
        case 18: {
          LeaderCharacterId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Update guild message
/// </summary>
public sealed partial class UpdateGuildMessageReq : pb::IMessage<UpdateGuildMessageReq> {
  private static readonly pb::MessageParser<UpdateGuildMessageReq> _parser = new pb::MessageParser<UpdateGuildMessageReq>(() => new UpdateGuildMessageReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateGuildMessageReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[56]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateGuildMessageReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateGuildMessageReq(UpdateGuildMessageReq other) : this() {
    guildId_ = other.guildId_;
    guildMessage_ = other.guildMessage_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateGuildMessageReq Clone() {
    return new UpdateGuildMessageReq(this);
  }

  /// <summary>Field number for the "guild_id" field.</summary>
  public const int GuildIdFieldNumber = 1;
  private int guildId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int GuildId {
    get { return guildId_; }
    set {
      guildId_ = value;
    }
  }

  /// <summary>Field number for the "guild_message" field.</summary>
  public const int GuildMessageFieldNumber = 2;
  private string guildMessage_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string GuildMessage {
    get { return guildMessage_; }
    set {
      guildMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateGuildMessageReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateGuildMessageReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GuildId != other.GuildId) return false;
    if (GuildMessage != other.GuildMessage) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GuildId != 0) hash ^= GuildId.GetHashCode();
    if (GuildMessage.Length != 0) hash ^= GuildMessage.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GuildId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(GuildId);
    }
    if (GuildMessage.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(GuildMessage);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GuildId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(GuildId);
    }
    if (GuildMessage.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(GuildMessage);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateGuildMessageReq other) {
    if (other == null) {
      return;
    }
    if (other.GuildId != 0) {
      GuildId = other.GuildId;
    }
    if (other.GuildMessage.Length != 0) {
      GuildMessage = other.GuildMessage;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          GuildId = input.ReadInt32();
          break;
        }
        case 18: {
          GuildMessage = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Update guild role
/// </summary>
public sealed partial class UpdateGuildRoleReq : pb::IMessage<UpdateGuildRoleReq> {
  private static readonly pb::MessageParser<UpdateGuildRoleReq> _parser = new pb::MessageParser<UpdateGuildRoleReq>(() => new UpdateGuildRoleReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateGuildRoleReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[57]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateGuildRoleReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateGuildRoleReq(UpdateGuildRoleReq other) : this() {
    guildId_ = other.guildId_;
    guildRole_ = other.guildRole_;
    roleName_ = other.roleName_;
    canInvite_ = other.canInvite_;
    canKick_ = other.canKick_;
    shareExpPercentage_ = other.shareExpPercentage_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateGuildRoleReq Clone() {
    return new UpdateGuildRoleReq(this);
  }

  /// <summary>Field number for the "guild_id" field.</summary>
  public const int GuildIdFieldNumber = 1;
  private int guildId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int GuildId {
    get { return guildId_; }
    set {
      guildId_ = value;
    }
  }

  /// <summary>Field number for the "guild_role" field.</summary>
  public const int GuildRoleFieldNumber = 2;
  private uint guildRole_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint GuildRole {
    get { return guildRole_; }
    set {
      guildRole_ = value;
    }
  }

  /// <summary>Field number for the "role_name" field.</summary>
  public const int RoleNameFieldNumber = 3;
  private string roleName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RoleName {
    get { return roleName_; }
    set {
      roleName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "can_invite" field.</summary>
  public const int CanInviteFieldNumber = 4;
  private bool canInvite_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool CanInvite {
    get { return canInvite_; }
    set {
      canInvite_ = value;
    }
  }

  /// <summary>Field number for the "can_kick" field.</summary>
  public const int CanKickFieldNumber = 5;
  private bool canKick_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool CanKick {
    get { return canKick_; }
    set {
      canKick_ = value;
    }
  }

  /// <summary>Field number for the "share_exp_percentage" field.</summary>
  public const int ShareExpPercentageFieldNumber = 6;
  private uint shareExpPercentage_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ShareExpPercentage {
    get { return shareExpPercentage_; }
    set {
      shareExpPercentage_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateGuildRoleReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateGuildRoleReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GuildId != other.GuildId) return false;
    if (GuildRole != other.GuildRole) return false;
    if (RoleName != other.RoleName) return false;
    if (CanInvite != other.CanInvite) return false;
    if (CanKick != other.CanKick) return false;
    if (ShareExpPercentage != other.ShareExpPercentage) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GuildId != 0) hash ^= GuildId.GetHashCode();
    if (GuildRole != 0) hash ^= GuildRole.GetHashCode();
    if (RoleName.Length != 0) hash ^= RoleName.GetHashCode();
    if (CanInvite != false) hash ^= CanInvite.GetHashCode();
    if (CanKick != false) hash ^= CanKick.GetHashCode();
    if (ShareExpPercentage != 0) hash ^= ShareExpPercentage.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GuildId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(GuildId);
    }
    if (GuildRole != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(GuildRole);
    }
    if (RoleName.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(RoleName);
    }
    if (CanInvite != false) {
      output.WriteRawTag(32);
      output.WriteBool(CanInvite);
    }
    if (CanKick != false) {
      output.WriteRawTag(40);
      output.WriteBool(CanKick);
    }
    if (ShareExpPercentage != 0) {
      output.WriteRawTag(48);
      output.WriteUInt32(ShareExpPercentage);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GuildId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(GuildId);
    }
    if (GuildRole != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GuildRole);
    }
    if (RoleName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RoleName);
    }
    if (CanInvite != false) {
      size += 1 + 1;
    }
    if (CanKick != false) {
      size += 1 + 1;
    }
    if (ShareExpPercentage != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ShareExpPercentage);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateGuildRoleReq other) {
    if (other == null) {
      return;
    }
    if (other.GuildId != 0) {
      GuildId = other.GuildId;
    }
    if (other.GuildRole != 0) {
      GuildRole = other.GuildRole;
    }
    if (other.RoleName.Length != 0) {
      RoleName = other.RoleName;
    }
    if (other.CanInvite != false) {
      CanInvite = other.CanInvite;
    }
    if (other.CanKick != false) {
      CanKick = other.CanKick;
    }
    if (other.ShareExpPercentage != 0) {
      ShareExpPercentage = other.ShareExpPercentage;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          GuildId = input.ReadInt32();
          break;
        }
        case 16: {
          GuildRole = input.ReadUInt32();
          break;
        }
        case 26: {
          RoleName = input.ReadString();
          break;
        }
        case 32: {
          CanInvite = input.ReadBool();
          break;
        }
        case 40: {
          CanKick = input.ReadBool();
          break;
        }
        case 48: {
          ShareExpPercentage = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Update guild member role
/// </summary>
public sealed partial class UpdateGuildMemberRoleReq : pb::IMessage<UpdateGuildMemberRoleReq> {
  private static readonly pb::MessageParser<UpdateGuildMemberRoleReq> _parser = new pb::MessageParser<UpdateGuildMemberRoleReq>(() => new UpdateGuildMemberRoleReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateGuildMemberRoleReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[58]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateGuildMemberRoleReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateGuildMemberRoleReq(UpdateGuildMemberRoleReq other) : this() {
    guildId_ = other.guildId_;
    memberCharacterId_ = other.memberCharacterId_;
    guildRole_ = other.guildRole_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateGuildMemberRoleReq Clone() {
    return new UpdateGuildMemberRoleReq(this);
  }

  /// <summary>Field number for the "guild_id" field.</summary>
  public const int GuildIdFieldNumber = 1;
  private int guildId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int GuildId {
    get { return guildId_; }
    set {
      guildId_ = value;
    }
  }

  /// <summary>Field number for the "member_character_id" field.</summary>
  public const int MemberCharacterIdFieldNumber = 2;
  private string memberCharacterId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string MemberCharacterId {
    get { return memberCharacterId_; }
    set {
      memberCharacterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "guild_role" field.</summary>
  public const int GuildRoleFieldNumber = 3;
  private uint guildRole_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint GuildRole {
    get { return guildRole_; }
    set {
      guildRole_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateGuildMemberRoleReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateGuildMemberRoleReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GuildId != other.GuildId) return false;
    if (MemberCharacterId != other.MemberCharacterId) return false;
    if (GuildRole != other.GuildRole) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GuildId != 0) hash ^= GuildId.GetHashCode();
    if (MemberCharacterId.Length != 0) hash ^= MemberCharacterId.GetHashCode();
    if (GuildRole != 0) hash ^= GuildRole.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GuildId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(GuildId);
    }
    if (MemberCharacterId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(MemberCharacterId);
    }
    if (GuildRole != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(GuildRole);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GuildId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(GuildId);
    }
    if (MemberCharacterId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberCharacterId);
    }
    if (GuildRole != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GuildRole);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateGuildMemberRoleReq other) {
    if (other == null) {
      return;
    }
    if (other.GuildId != 0) {
      GuildId = other.GuildId;
    }
    if (other.MemberCharacterId.Length != 0) {
      MemberCharacterId = other.MemberCharacterId;
    }
    if (other.GuildRole != 0) {
      GuildRole = other.GuildRole;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          GuildId = input.ReadInt32();
          break;
        }
        case 18: {
          MemberCharacterId = input.ReadString();
          break;
        }
        case 24: {
          GuildRole = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Update character guild
/// </summary>
public sealed partial class UpdateCharacterGuildReq : pb::IMessage<UpdateCharacterGuildReq> {
  private static readonly pb::MessageParser<UpdateCharacterGuildReq> _parser = new pb::MessageParser<UpdateCharacterGuildReq>(() => new UpdateCharacterGuildReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateCharacterGuildReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[59]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateCharacterGuildReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateCharacterGuildReq(UpdateCharacterGuildReq other) : this() {
    socialCharacterData_ = other.socialCharacterData_;
    guildId_ = other.guildId_;
    guildRole_ = other.guildRole_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateCharacterGuildReq Clone() {
    return new UpdateCharacterGuildReq(this);
  }

  /// <summary>Field number for the "social_character_data" field.</summary>
  public const int SocialCharacterDataFieldNumber = 1;
  private pb::ByteString socialCharacterData_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString SocialCharacterData {
    get { return socialCharacterData_; }
    set {
      socialCharacterData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "guild_id" field.</summary>
  public const int GuildIdFieldNumber = 2;
  private int guildId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int GuildId {
    get { return guildId_; }
    set {
      guildId_ = value;
    }
  }

  /// <summary>Field number for the "guild_role" field.</summary>
  public const int GuildRoleFieldNumber = 3;
  private uint guildRole_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint GuildRole {
    get { return guildRole_; }
    set {
      guildRole_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateCharacterGuildReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateCharacterGuildReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SocialCharacterData != other.SocialCharacterData) return false;
    if (GuildId != other.GuildId) return false;
    if (GuildRole != other.GuildRole) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SocialCharacterData.Length != 0) hash ^= SocialCharacterData.GetHashCode();
    if (GuildId != 0) hash ^= GuildId.GetHashCode();
    if (GuildRole != 0) hash ^= GuildRole.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SocialCharacterData.Length != 0) {
      output.WriteRawTag(10);
      output.WriteBytes(SocialCharacterData);
    }
    if (GuildId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(GuildId);
    }
    if (GuildRole != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(GuildRole);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SocialCharacterData.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(SocialCharacterData);
    }
    if (GuildId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(GuildId);
    }
    if (GuildRole != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GuildRole);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateCharacterGuildReq other) {
    if (other == null) {
      return;
    }
    if (other.SocialCharacterData.Length != 0) {
      SocialCharacterData = other.SocialCharacterData;
    }
    if (other.GuildId != 0) {
      GuildId = other.GuildId;
    }
    if (other.GuildRole != 0) {
      GuildRole = other.GuildRole;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          SocialCharacterData = input.ReadBytes();
          break;
        }
        case 16: {
          GuildId = input.ReadInt32();
          break;
        }
        case 24: {
          GuildRole = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Clear character guild
/// </summary>
public sealed partial class ClearCharacterGuildReq : pb::IMessage<ClearCharacterGuildReq> {
  private static readonly pb::MessageParser<ClearCharacterGuildReq> _parser = new pb::MessageParser<ClearCharacterGuildReq>(() => new ClearCharacterGuildReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ClearCharacterGuildReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[60]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClearCharacterGuildReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClearCharacterGuildReq(ClearCharacterGuildReq other) : this() {
    characterId_ = other.characterId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClearCharacterGuildReq Clone() {
    return new ClearCharacterGuildReq(this);
  }

  /// <summary>Field number for the "character_id" field.</summary>
  public const int CharacterIdFieldNumber = 1;
  private string characterId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CharacterId {
    get { return characterId_; }
    set {
      characterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ClearCharacterGuildReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ClearCharacterGuildReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CharacterId != other.CharacterId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CharacterId.Length != 0) hash ^= CharacterId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CharacterId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(CharacterId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CharacterId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CharacterId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ClearCharacterGuildReq other) {
    if (other == null) {
      return;
    }
    if (other.CharacterId.Length != 0) {
      CharacterId = other.CharacterId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          CharacterId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Delete guild
/// </summary>
public sealed partial class DeleteGuildReq : pb::IMessage<DeleteGuildReq> {
  private static readonly pb::MessageParser<DeleteGuildReq> _parser = new pb::MessageParser<DeleteGuildReq>(() => new DeleteGuildReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DeleteGuildReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[61]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteGuildReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteGuildReq(DeleteGuildReq other) : this() {
    guildId_ = other.guildId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteGuildReq Clone() {
    return new DeleteGuildReq(this);
  }

  /// <summary>Field number for the "guild_id" field.</summary>
  public const int GuildIdFieldNumber = 1;
  private int guildId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int GuildId {
    get { return guildId_; }
    set {
      guildId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DeleteGuildReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DeleteGuildReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GuildId != other.GuildId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GuildId != 0) hash ^= GuildId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GuildId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(GuildId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GuildId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(GuildId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DeleteGuildReq other) {
    if (other == null) {
      return;
    }
    if (other.GuildId != 0) {
      GuildId = other.GuildId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          GuildId = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Find guild name
/// </summary>
public sealed partial class FindGuildNameReq : pb::IMessage<FindGuildNameReq> {
  private static readonly pb::MessageParser<FindGuildNameReq> _parser = new pb::MessageParser<FindGuildNameReq>(() => new FindGuildNameReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<FindGuildNameReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[62]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FindGuildNameReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FindGuildNameReq(FindGuildNameReq other) : this() {
    guildName_ = other.guildName_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FindGuildNameReq Clone() {
    return new FindGuildNameReq(this);
  }

  /// <summary>Field number for the "guild_name" field.</summary>
  public const int GuildNameFieldNumber = 1;
  private string guildName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string GuildName {
    get { return guildName_; }
    set {
      guildName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as FindGuildNameReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(FindGuildNameReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GuildName != other.GuildName) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GuildName.Length != 0) hash ^= GuildName.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GuildName.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(GuildName);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GuildName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(GuildName);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(FindGuildNameReq other) {
    if (other == null) {
      return;
    }
    if (other.GuildName.Length != 0) {
      GuildName = other.GuildName;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          GuildName = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class FindGuildNameResp : pb::IMessage<FindGuildNameResp> {
  private static readonly pb::MessageParser<FindGuildNameResp> _parser = new pb::MessageParser<FindGuildNameResp>(() => new FindGuildNameResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<FindGuildNameResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[63]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FindGuildNameResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FindGuildNameResp(FindGuildNameResp other) : this() {
    foundAmount_ = other.foundAmount_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FindGuildNameResp Clone() {
    return new FindGuildNameResp(this);
  }

  /// <summary>Field number for the "found_amount" field.</summary>
  public const int FoundAmountFieldNumber = 1;
  private long foundAmount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long FoundAmount {
    get { return foundAmount_; }
    set {
      foundAmount_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as FindGuildNameResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(FindGuildNameResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (FoundAmount != other.FoundAmount) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (FoundAmount != 0L) hash ^= FoundAmount.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (FoundAmount != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(FoundAmount);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (FoundAmount != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(FoundAmount);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(FindGuildNameResp other) {
    if (other == null) {
      return;
    }
    if (other.FoundAmount != 0L) {
      FoundAmount = other.FoundAmount;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          FoundAmount = input.ReadInt64();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Read guild
/// </summary>
public sealed partial class ReadGuildReq : pb::IMessage<ReadGuildReq> {
  private static readonly pb::MessageParser<ReadGuildReq> _parser = new pb::MessageParser<ReadGuildReq>(() => new ReadGuildReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ReadGuildReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[64]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadGuildReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadGuildReq(ReadGuildReq other) : this() {
    guildId_ = other.guildId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadGuildReq Clone() {
    return new ReadGuildReq(this);
  }

  /// <summary>Field number for the "guild_id" field.</summary>
  public const int GuildIdFieldNumber = 1;
  private int guildId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int GuildId {
    get { return guildId_; }
    set {
      guildId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ReadGuildReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ReadGuildReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GuildId != other.GuildId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GuildId != 0) hash ^= GuildId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GuildId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(GuildId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GuildId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(GuildId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ReadGuildReq other) {
    if (other == null) {
      return;
    }
    if (other.GuildId != 0) {
      GuildId = other.GuildId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          GuildId = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class GuildResp : pb::IMessage<GuildResp> {
  private static readonly pb::MessageParser<GuildResp> _parser = new pb::MessageParser<GuildResp>(() => new GuildResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GuildResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[65]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GuildResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GuildResp(GuildResp other) : this() {
    guildData_ = other.guildData_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GuildResp Clone() {
    return new GuildResp(this);
  }

  /// <summary>Field number for the "guild_data" field.</summary>
  public const int GuildDataFieldNumber = 1;
  private pb::ByteString guildData_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString GuildData {
    get { return guildData_; }
    set {
      guildData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GuildResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GuildResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GuildData != other.GuildData) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GuildData.Length != 0) hash ^= GuildData.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GuildData.Length != 0) {
      output.WriteRawTag(10);
      output.WriteBytes(GuildData);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GuildData.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(GuildData);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GuildResp other) {
    if (other == null) {
      return;
    }
    if (other.GuildData.Length != 0) {
      GuildData = other.GuildData;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          GuildData = input.ReadBytes();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Get guild gold
/// </summary>
public sealed partial class GetGuildGoldReq : pb::IMessage<GetGuildGoldReq> {
  private static readonly pb::MessageParser<GetGuildGoldReq> _parser = new pb::MessageParser<GetGuildGoldReq>(() => new GetGuildGoldReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetGuildGoldReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[66]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetGuildGoldReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetGuildGoldReq(GetGuildGoldReq other) : this() {
    guildId_ = other.guildId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetGuildGoldReq Clone() {
    return new GetGuildGoldReq(this);
  }

  /// <summary>Field number for the "guild_id" field.</summary>
  public const int GuildIdFieldNumber = 1;
  private int guildId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int GuildId {
    get { return guildId_; }
    set {
      guildId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetGuildGoldReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetGuildGoldReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GuildId != other.GuildId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GuildId != 0) hash ^= GuildId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GuildId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(GuildId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GuildId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(GuildId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetGuildGoldReq other) {
    if (other == null) {
      return;
    }
    if (other.GuildId != 0) {
      GuildId = other.GuildId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          GuildId = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Increase guild gold
/// </summary>
public sealed partial class ChangeGuildGoldReq : pb::IMessage<ChangeGuildGoldReq> {
  private static readonly pb::MessageParser<ChangeGuildGoldReq> _parser = new pb::MessageParser<ChangeGuildGoldReq>(() => new ChangeGuildGoldReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ChangeGuildGoldReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[67]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ChangeGuildGoldReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ChangeGuildGoldReq(ChangeGuildGoldReq other) : this() {
    guildId_ = other.guildId_;
    changeAmount_ = other.changeAmount_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ChangeGuildGoldReq Clone() {
    return new ChangeGuildGoldReq(this);
  }

  /// <summary>Field number for the "guild_id" field.</summary>
  public const int GuildIdFieldNumber = 1;
  private int guildId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int GuildId {
    get { return guildId_; }
    set {
      guildId_ = value;
    }
  }

  /// <summary>Field number for the "change_amount" field.</summary>
  public const int ChangeAmountFieldNumber = 2;
  private int changeAmount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ChangeAmount {
    get { return changeAmount_; }
    set {
      changeAmount_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ChangeGuildGoldReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ChangeGuildGoldReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GuildId != other.GuildId) return false;
    if (ChangeAmount != other.ChangeAmount) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GuildId != 0) hash ^= GuildId.GetHashCode();
    if (ChangeAmount != 0) hash ^= ChangeAmount.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GuildId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(GuildId);
    }
    if (ChangeAmount != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(ChangeAmount);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GuildId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(GuildId);
    }
    if (ChangeAmount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChangeAmount);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ChangeGuildGoldReq other) {
    if (other == null) {
      return;
    }
    if (other.GuildId != 0) {
      GuildId = other.GuildId;
    }
    if (other.ChangeAmount != 0) {
      ChangeAmount = other.ChangeAmount;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          GuildId = input.ReadInt32();
          break;
        }
        case 16: {
          ChangeAmount = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Decrease guild gold
/// </summary>
public sealed partial class DecreaseGuildGoldReq : pb::IMessage<DecreaseGuildGoldReq> {
  private static readonly pb::MessageParser<DecreaseGuildGoldReq> _parser = new pb::MessageParser<DecreaseGuildGoldReq>(() => new DecreaseGuildGoldReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DecreaseGuildGoldReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[68]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DecreaseGuildGoldReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DecreaseGuildGoldReq(DecreaseGuildGoldReq other) : this() {
    guildId_ = other.guildId_;
    amount_ = other.amount_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DecreaseGuildGoldReq Clone() {
    return new DecreaseGuildGoldReq(this);
  }

  /// <summary>Field number for the "guild_id" field.</summary>
  public const int GuildIdFieldNumber = 1;
  private int guildId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int GuildId {
    get { return guildId_; }
    set {
      guildId_ = value;
    }
  }

  /// <summary>Field number for the "amount" field.</summary>
  public const int AmountFieldNumber = 2;
  private int amount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Amount {
    get { return amount_; }
    set {
      amount_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DecreaseGuildGoldReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DecreaseGuildGoldReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GuildId != other.GuildId) return false;
    if (Amount != other.Amount) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GuildId != 0) hash ^= GuildId.GetHashCode();
    if (Amount != 0) hash ^= Amount.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GuildId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(GuildId);
    }
    if (Amount != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Amount);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GuildId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(GuildId);
    }
    if (Amount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Amount);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DecreaseGuildGoldReq other) {
    if (other == null) {
      return;
    }
    if (other.GuildId != 0) {
      GuildId = other.GuildId;
    }
    if (other.Amount != 0) {
      Amount = other.Amount;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          GuildId = input.ReadInt32();
          break;
        }
        case 16: {
          Amount = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Read storage items
/// </summary>
public sealed partial class ReadStorageItemsReq : pb::IMessage<ReadStorageItemsReq> {
  private static readonly pb::MessageParser<ReadStorageItemsReq> _parser = new pb::MessageParser<ReadStorageItemsReq>(() => new ReadStorageItemsReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ReadStorageItemsReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[69]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadStorageItemsReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadStorageItemsReq(ReadStorageItemsReq other) : this() {
    storageType_ = other.storageType_;
    storageOwnerId_ = other.storageOwnerId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadStorageItemsReq Clone() {
    return new ReadStorageItemsReq(this);
  }

  /// <summary>Field number for the "storage_type" field.</summary>
  public const int StorageTypeFieldNumber = 1;
  private global::EStorageType storageType_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::EStorageType StorageType {
    get { return storageType_; }
    set {
      storageType_ = value;
    }
  }

  /// <summary>Field number for the "storage_owner_id" field.</summary>
  public const int StorageOwnerIdFieldNumber = 2;
  private string storageOwnerId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string StorageOwnerId {
    get { return storageOwnerId_; }
    set {
      storageOwnerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ReadStorageItemsReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ReadStorageItemsReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (StorageType != other.StorageType) return false;
    if (StorageOwnerId != other.StorageOwnerId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (StorageType != 0) hash ^= StorageType.GetHashCode();
    if (StorageOwnerId.Length != 0) hash ^= StorageOwnerId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (StorageType != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) StorageType);
    }
    if (StorageOwnerId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(StorageOwnerId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (StorageType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) StorageType);
    }
    if (StorageOwnerId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(StorageOwnerId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ReadStorageItemsReq other) {
    if (other == null) {
      return;
    }
    if (other.StorageType != 0) {
      StorageType = other.StorageType;
    }
    if (other.StorageOwnerId.Length != 0) {
      StorageOwnerId = other.StorageOwnerId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          StorageType = (global::EStorageType) input.ReadEnum();
          break;
        }
        case 18: {
          StorageOwnerId = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class ReadStorageItemsResp : pb::IMessage<ReadStorageItemsResp> {
  private static readonly pb::MessageParser<ReadStorageItemsResp> _parser = new pb::MessageParser<ReadStorageItemsResp>(() => new ReadStorageItemsResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ReadStorageItemsResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[70]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadStorageItemsResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadStorageItemsResp(ReadStorageItemsResp other) : this() {
    storageCharacterItems_ = other.storageCharacterItems_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReadStorageItemsResp Clone() {
    return new ReadStorageItemsResp(this);
  }

  /// <summary>Field number for the "storage_character_items" field.</summary>
  public const int StorageCharacterItemsFieldNumber = 1;
  private static readonly pb::FieldCodec<pb::ByteString> _repeated_storageCharacterItems_codec
      = pb::FieldCodec.ForBytes(10);
  private readonly pbc::RepeatedField<pb::ByteString> storageCharacterItems_ = new pbc::RepeatedField<pb::ByteString>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<pb::ByteString> StorageCharacterItems {
    get { return storageCharacterItems_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ReadStorageItemsResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ReadStorageItemsResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!storageCharacterItems_.Equals(other.storageCharacterItems_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= storageCharacterItems_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    storageCharacterItems_.WriteTo(output, _repeated_storageCharacterItems_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += storageCharacterItems_.CalculateSize(_repeated_storageCharacterItems_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ReadStorageItemsResp other) {
    if (other == null) {
      return;
    }
    storageCharacterItems_.Add(other.storageCharacterItems_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          storageCharacterItems_.AddEntriesFrom(input, _repeated_storageCharacterItems_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Move item to storage
/// </summary>
public sealed partial class MoveItemToStorageReq : pb::IMessage<MoveItemToStorageReq> {
  private static readonly pb::MessageParser<MoveItemToStorageReq> _parser = new pb::MessageParser<MoveItemToStorageReq>(() => new MoveItemToStorageReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MoveItemToStorageReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[71]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MoveItemToStorageReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MoveItemToStorageReq(MoveItemToStorageReq other) : this() {
    storageType_ = other.storageType_;
    storageOwnerId_ = other.storageOwnerId_;
    characterId_ = other.characterId_;
    weightLimit_ = other.weightLimit_;
    slotLimit_ = other.slotLimit_;
    inventoryItemIndex_ = other.inventoryItemIndex_;
    inventoryItemAmount_ = other.inventoryItemAmount_;
    storageItemIndex_ = other.storageItemIndex_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MoveItemToStorageReq Clone() {
    return new MoveItemToStorageReq(this);
  }

  /// <summary>Field number for the "storage_type" field.</summary>
  public const int StorageTypeFieldNumber = 1;
  private global::EStorageType storageType_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::EStorageType StorageType {
    get { return storageType_; }
    set {
      storageType_ = value;
    }
  }

  /// <summary>Field number for the "storage_owner_id" field.</summary>
  public const int StorageOwnerIdFieldNumber = 2;
  private string storageOwnerId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string StorageOwnerId {
    get { return storageOwnerId_; }
    set {
      storageOwnerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "character_id" field.</summary>
  public const int CharacterIdFieldNumber = 3;
  private string characterId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CharacterId {
    get { return characterId_; }
    set {
      characterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "weight_limit" field.</summary>
  public const int WeightLimitFieldNumber = 4;
  private int weightLimit_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int WeightLimit {
    get { return weightLimit_; }
    set {
      weightLimit_ = value;
    }
  }

  /// <summary>Field number for the "slot_limit" field.</summary>
  public const int SlotLimitFieldNumber = 5;
  private int slotLimit_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int SlotLimit {
    get { return slotLimit_; }
    set {
      slotLimit_ = value;
    }
  }

  /// <summary>Field number for the "inventory_item_index" field.</summary>
  public const int InventoryItemIndexFieldNumber = 6;
  private int inventoryItemIndex_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int InventoryItemIndex {
    get { return inventoryItemIndex_; }
    set {
      inventoryItemIndex_ = value;
    }
  }

  /// <summary>Field number for the "inventory_item_amount" field.</summary>
  public const int InventoryItemAmountFieldNumber = 7;
  private int inventoryItemAmount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int InventoryItemAmount {
    get { return inventoryItemAmount_; }
    set {
      inventoryItemAmount_ = value;
    }
  }

  /// <summary>Field number for the "storage_item_index" field.</summary>
  public const int StorageItemIndexFieldNumber = 8;
  private int storageItemIndex_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int StorageItemIndex {
    get { return storageItemIndex_; }
    set {
      storageItemIndex_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MoveItemToStorageReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MoveItemToStorageReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (StorageType != other.StorageType) return false;
    if (StorageOwnerId != other.StorageOwnerId) return false;
    if (CharacterId != other.CharacterId) return false;
    if (WeightLimit != other.WeightLimit) return false;
    if (SlotLimit != other.SlotLimit) return false;
    if (InventoryItemIndex != other.InventoryItemIndex) return false;
    if (InventoryItemAmount != other.InventoryItemAmount) return false;
    if (StorageItemIndex != other.StorageItemIndex) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (StorageType != 0) hash ^= StorageType.GetHashCode();
    if (StorageOwnerId.Length != 0) hash ^= StorageOwnerId.GetHashCode();
    if (CharacterId.Length != 0) hash ^= CharacterId.GetHashCode();
    if (WeightLimit != 0) hash ^= WeightLimit.GetHashCode();
    if (SlotLimit != 0) hash ^= SlotLimit.GetHashCode();
    if (InventoryItemIndex != 0) hash ^= InventoryItemIndex.GetHashCode();
    if (InventoryItemAmount != 0) hash ^= InventoryItemAmount.GetHashCode();
    if (StorageItemIndex != 0) hash ^= StorageItemIndex.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (StorageType != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) StorageType);
    }
    if (StorageOwnerId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(StorageOwnerId);
    }
    if (CharacterId.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(CharacterId);
    }
    if (WeightLimit != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(WeightLimit);
    }
    if (SlotLimit != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(SlotLimit);
    }
    if (InventoryItemIndex != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(InventoryItemIndex);
    }
    if (InventoryItemAmount != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(InventoryItemAmount);
    }
    if (StorageItemIndex != 0) {
      output.WriteRawTag(64);
      output.WriteInt32(StorageItemIndex);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (StorageType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) StorageType);
    }
    if (StorageOwnerId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(StorageOwnerId);
    }
    if (CharacterId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CharacterId);
    }
    if (WeightLimit != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(WeightLimit);
    }
    if (SlotLimit != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(SlotLimit);
    }
    if (InventoryItemIndex != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(InventoryItemIndex);
    }
    if (InventoryItemAmount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(InventoryItemAmount);
    }
    if (StorageItemIndex != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(StorageItemIndex);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MoveItemToStorageReq other) {
    if (other == null) {
      return;
    }
    if (other.StorageType != 0) {
      StorageType = other.StorageType;
    }
    if (other.StorageOwnerId.Length != 0) {
      StorageOwnerId = other.StorageOwnerId;
    }
    if (other.CharacterId.Length != 0) {
      CharacterId = other.CharacterId;
    }
    if (other.WeightLimit != 0) {
      WeightLimit = other.WeightLimit;
    }
    if (other.SlotLimit != 0) {
      SlotLimit = other.SlotLimit;
    }
    if (other.InventoryItemIndex != 0) {
      InventoryItemIndex = other.InventoryItemIndex;
    }
    if (other.InventoryItemAmount != 0) {
      InventoryItemAmount = other.InventoryItemAmount;
    }
    if (other.StorageItemIndex != 0) {
      StorageItemIndex = other.StorageItemIndex;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          StorageType = (global::EStorageType) input.ReadEnum();
          break;
        }
        case 18: {
          StorageOwnerId = input.ReadString();
          break;
        }
        case 26: {
          CharacterId = input.ReadString();
          break;
        }
        case 32: {
          WeightLimit = input.ReadInt32();
          break;
        }
        case 40: {
          SlotLimit = input.ReadInt32();
          break;
        }
        case 48: {
          InventoryItemIndex = input.ReadInt32();
          break;
        }
        case 56: {
          InventoryItemAmount = input.ReadInt32();
          break;
        }
        case 64: {
          StorageItemIndex = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class MoveItemToStorageResp : pb::IMessage<MoveItemToStorageResp> {
  private static readonly pb::MessageParser<MoveItemToStorageResp> _parser = new pb::MessageParser<MoveItemToStorageResp>(() => new MoveItemToStorageResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MoveItemToStorageResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[72]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MoveItemToStorageResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MoveItemToStorageResp(MoveItemToStorageResp other) : this() {
    error_ = other.error_;
    inventoryItemItems_ = other.inventoryItemItems_.Clone();
    storageCharacterItems_ = other.storageCharacterItems_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MoveItemToStorageResp Clone() {
    return new MoveItemToStorageResp(this);
  }

  /// <summary>Field number for the "error" field.</summary>
  public const int ErrorFieldNumber = 1;
  private uint error_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Error {
    get { return error_; }
    set {
      error_ = value;
    }
  }

  /// <summary>Field number for the "inventory_item_items" field.</summary>
  public const int InventoryItemItemsFieldNumber = 2;
  private static readonly pb::FieldCodec<pb::ByteString> _repeated_inventoryItemItems_codec
      = pb::FieldCodec.ForBytes(18);
  private readonly pbc::RepeatedField<pb::ByteString> inventoryItemItems_ = new pbc::RepeatedField<pb::ByteString>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<pb::ByteString> InventoryItemItems {
    get { return inventoryItemItems_; }
  }

  /// <summary>Field number for the "storage_character_items" field.</summary>
  public const int StorageCharacterItemsFieldNumber = 3;
  private static readonly pb::FieldCodec<pb::ByteString> _repeated_storageCharacterItems_codec
      = pb::FieldCodec.ForBytes(26);
  private readonly pbc::RepeatedField<pb::ByteString> storageCharacterItems_ = new pbc::RepeatedField<pb::ByteString>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<pb::ByteString> StorageCharacterItems {
    get { return storageCharacterItems_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MoveItemToStorageResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MoveItemToStorageResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Error != other.Error) return false;
    if(!inventoryItemItems_.Equals(other.inventoryItemItems_)) return false;
    if(!storageCharacterItems_.Equals(other.storageCharacterItems_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Error != 0) hash ^= Error.GetHashCode();
    hash ^= inventoryItemItems_.GetHashCode();
    hash ^= storageCharacterItems_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Error != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(Error);
    }
    inventoryItemItems_.WriteTo(output, _repeated_inventoryItemItems_codec);
    storageCharacterItems_.WriteTo(output, _repeated_storageCharacterItems_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Error != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Error);
    }
    size += inventoryItemItems_.CalculateSize(_repeated_inventoryItemItems_codec);
    size += storageCharacterItems_.CalculateSize(_repeated_storageCharacterItems_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MoveItemToStorageResp other) {
    if (other == null) {
      return;
    }
    if (other.Error != 0) {
      Error = other.Error;
    }
    inventoryItemItems_.Add(other.inventoryItemItems_);
    storageCharacterItems_.Add(other.storageCharacterItems_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Error = input.ReadUInt32();
          break;
        }
        case 18: {
          inventoryItemItems_.AddEntriesFrom(input, _repeated_inventoryItemItems_codec);
          break;
        }
        case 26: {
          storageCharacterItems_.AddEntriesFrom(input, _repeated_storageCharacterItems_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Move item from storage
/// </summary>
public sealed partial class MoveItemFromStorageReq : pb::IMessage<MoveItemFromStorageReq> {
  private static readonly pb::MessageParser<MoveItemFromStorageReq> _parser = new pb::MessageParser<MoveItemFromStorageReq>(() => new MoveItemFromStorageReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MoveItemFromStorageReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[73]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MoveItemFromStorageReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MoveItemFromStorageReq(MoveItemFromStorageReq other) : this() {
    storageType_ = other.storageType_;
    storageOwnerId_ = other.storageOwnerId_;
    characterId_ = other.characterId_;
    weightLimit_ = other.weightLimit_;
    slotLimit_ = other.slotLimit_;
    storageItemIndex_ = other.storageItemIndex_;
    storageItemAmount_ = other.storageItemAmount_;
    inventoryItemIndex_ = other.inventoryItemIndex_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MoveItemFromStorageReq Clone() {
    return new MoveItemFromStorageReq(this);
  }

  /// <summary>Field number for the "storage_type" field.</summary>
  public const int StorageTypeFieldNumber = 1;
  private global::EStorageType storageType_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::EStorageType StorageType {
    get { return storageType_; }
    set {
      storageType_ = value;
    }
  }

  /// <summary>Field number for the "storage_owner_id" field.</summary>
  public const int StorageOwnerIdFieldNumber = 2;
  private string storageOwnerId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string StorageOwnerId {
    get { return storageOwnerId_; }
    set {
      storageOwnerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "character_id" field.</summary>
  public const int CharacterIdFieldNumber = 3;
  private string characterId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CharacterId {
    get { return characterId_; }
    set {
      characterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "weight_limit" field.</summary>
  public const int WeightLimitFieldNumber = 4;
  private int weightLimit_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int WeightLimit {
    get { return weightLimit_; }
    set {
      weightLimit_ = value;
    }
  }

  /// <summary>Field number for the "slot_limit" field.</summary>
  public const int SlotLimitFieldNumber = 5;
  private int slotLimit_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int SlotLimit {
    get { return slotLimit_; }
    set {
      slotLimit_ = value;
    }
  }

  /// <summary>Field number for the "storage_item_index" field.</summary>
  public const int StorageItemIndexFieldNumber = 6;
  private int storageItemIndex_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int StorageItemIndex {
    get { return storageItemIndex_; }
    set {
      storageItemIndex_ = value;
    }
  }

  /// <summary>Field number for the "storage_item_amount" field.</summary>
  public const int StorageItemAmountFieldNumber = 7;
  private int storageItemAmount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int StorageItemAmount {
    get { return storageItemAmount_; }
    set {
      storageItemAmount_ = value;
    }
  }

  /// <summary>Field number for the "inventory_item_index" field.</summary>
  public const int InventoryItemIndexFieldNumber = 8;
  private int inventoryItemIndex_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int InventoryItemIndex {
    get { return inventoryItemIndex_; }
    set {
      inventoryItemIndex_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MoveItemFromStorageReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MoveItemFromStorageReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (StorageType != other.StorageType) return false;
    if (StorageOwnerId != other.StorageOwnerId) return false;
    if (CharacterId != other.CharacterId) return false;
    if (WeightLimit != other.WeightLimit) return false;
    if (SlotLimit != other.SlotLimit) return false;
    if (StorageItemIndex != other.StorageItemIndex) return false;
    if (StorageItemAmount != other.StorageItemAmount) return false;
    if (InventoryItemIndex != other.InventoryItemIndex) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (StorageType != 0) hash ^= StorageType.GetHashCode();
    if (StorageOwnerId.Length != 0) hash ^= StorageOwnerId.GetHashCode();
    if (CharacterId.Length != 0) hash ^= CharacterId.GetHashCode();
    if (WeightLimit != 0) hash ^= WeightLimit.GetHashCode();
    if (SlotLimit != 0) hash ^= SlotLimit.GetHashCode();
    if (StorageItemIndex != 0) hash ^= StorageItemIndex.GetHashCode();
    if (StorageItemAmount != 0) hash ^= StorageItemAmount.GetHashCode();
    if (InventoryItemIndex != 0) hash ^= InventoryItemIndex.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (StorageType != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) StorageType);
    }
    if (StorageOwnerId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(StorageOwnerId);
    }
    if (CharacterId.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(CharacterId);
    }
    if (WeightLimit != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(WeightLimit);
    }
    if (SlotLimit != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(SlotLimit);
    }
    if (StorageItemIndex != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(StorageItemIndex);
    }
    if (StorageItemAmount != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(StorageItemAmount);
    }
    if (InventoryItemIndex != 0) {
      output.WriteRawTag(64);
      output.WriteInt32(InventoryItemIndex);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (StorageType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) StorageType);
    }
    if (StorageOwnerId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(StorageOwnerId);
    }
    if (CharacterId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CharacterId);
    }
    if (WeightLimit != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(WeightLimit);
    }
    if (SlotLimit != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(SlotLimit);
    }
    if (StorageItemIndex != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(StorageItemIndex);
    }
    if (StorageItemAmount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(StorageItemAmount);
    }
    if (InventoryItemIndex != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(InventoryItemIndex);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MoveItemFromStorageReq other) {
    if (other == null) {
      return;
    }
    if (other.StorageType != 0) {
      StorageType = other.StorageType;
    }
    if (other.StorageOwnerId.Length != 0) {
      StorageOwnerId = other.StorageOwnerId;
    }
    if (other.CharacterId.Length != 0) {
      CharacterId = other.CharacterId;
    }
    if (other.WeightLimit != 0) {
      WeightLimit = other.WeightLimit;
    }
    if (other.SlotLimit != 0) {
      SlotLimit = other.SlotLimit;
    }
    if (other.StorageItemIndex != 0) {
      StorageItemIndex = other.StorageItemIndex;
    }
    if (other.StorageItemAmount != 0) {
      StorageItemAmount = other.StorageItemAmount;
    }
    if (other.InventoryItemIndex != 0) {
      InventoryItemIndex = other.InventoryItemIndex;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          StorageType = (global::EStorageType) input.ReadEnum();
          break;
        }
        case 18: {
          StorageOwnerId = input.ReadString();
          break;
        }
        case 26: {
          CharacterId = input.ReadString();
          break;
        }
        case 32: {
          WeightLimit = input.ReadInt32();
          break;
        }
        case 40: {
          SlotLimit = input.ReadInt32();
          break;
        }
        case 48: {
          StorageItemIndex = input.ReadInt32();
          break;
        }
        case 56: {
          StorageItemAmount = input.ReadInt32();
          break;
        }
        case 64: {
          InventoryItemIndex = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class MoveItemFromStorageResp : pb::IMessage<MoveItemFromStorageResp> {
  private static readonly pb::MessageParser<MoveItemFromStorageResp> _parser = new pb::MessageParser<MoveItemFromStorageResp>(() => new MoveItemFromStorageResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MoveItemFromStorageResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[74]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MoveItemFromStorageResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MoveItemFromStorageResp(MoveItemFromStorageResp other) : this() {
    error_ = other.error_;
    inventoryItemItems_ = other.inventoryItemItems_.Clone();
    storageCharacterItems_ = other.storageCharacterItems_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MoveItemFromStorageResp Clone() {
    return new MoveItemFromStorageResp(this);
  }

  /// <summary>Field number for the "error" field.</summary>
  public const int ErrorFieldNumber = 1;
  private uint error_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Error {
    get { return error_; }
    set {
      error_ = value;
    }
  }

  /// <summary>Field number for the "inventory_item_items" field.</summary>
  public const int InventoryItemItemsFieldNumber = 2;
  private static readonly pb::FieldCodec<pb::ByteString> _repeated_inventoryItemItems_codec
      = pb::FieldCodec.ForBytes(18);
  private readonly pbc::RepeatedField<pb::ByteString> inventoryItemItems_ = new pbc::RepeatedField<pb::ByteString>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<pb::ByteString> InventoryItemItems {
    get { return inventoryItemItems_; }
  }

  /// <summary>Field number for the "storage_character_items" field.</summary>
  public const int StorageCharacterItemsFieldNumber = 3;
  private static readonly pb::FieldCodec<pb::ByteString> _repeated_storageCharacterItems_codec
      = pb::FieldCodec.ForBytes(26);
  private readonly pbc::RepeatedField<pb::ByteString> storageCharacterItems_ = new pbc::RepeatedField<pb::ByteString>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<pb::ByteString> StorageCharacterItems {
    get { return storageCharacterItems_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MoveItemFromStorageResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MoveItemFromStorageResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Error != other.Error) return false;
    if(!inventoryItemItems_.Equals(other.inventoryItemItems_)) return false;
    if(!storageCharacterItems_.Equals(other.storageCharacterItems_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Error != 0) hash ^= Error.GetHashCode();
    hash ^= inventoryItemItems_.GetHashCode();
    hash ^= storageCharacterItems_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Error != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(Error);
    }
    inventoryItemItems_.WriteTo(output, _repeated_inventoryItemItems_codec);
    storageCharacterItems_.WriteTo(output, _repeated_storageCharacterItems_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Error != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Error);
    }
    size += inventoryItemItems_.CalculateSize(_repeated_inventoryItemItems_codec);
    size += storageCharacterItems_.CalculateSize(_repeated_storageCharacterItems_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MoveItemFromStorageResp other) {
    if (other == null) {
      return;
    }
    if (other.Error != 0) {
      Error = other.Error;
    }
    inventoryItemItems_.Add(other.inventoryItemItems_);
    storageCharacterItems_.Add(other.storageCharacterItems_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Error = input.ReadUInt32();
          break;
        }
        case 18: {
          inventoryItemItems_.AddEntriesFrom(input, _repeated_inventoryItemItems_codec);
          break;
        }
        case 26: {
          storageCharacterItems_.AddEntriesFrom(input, _repeated_storageCharacterItems_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Swap or merge storage item
/// </summary>
public sealed partial class SwapOrMergeStorageItemReq : pb::IMessage<SwapOrMergeStorageItemReq> {
  private static readonly pb::MessageParser<SwapOrMergeStorageItemReq> _parser = new pb::MessageParser<SwapOrMergeStorageItemReq>(() => new SwapOrMergeStorageItemReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SwapOrMergeStorageItemReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[75]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SwapOrMergeStorageItemReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SwapOrMergeStorageItemReq(SwapOrMergeStorageItemReq other) : this() {
    storageType_ = other.storageType_;
    storageOwnerId_ = other.storageOwnerId_;
    characterId_ = other.characterId_;
    weightLimit_ = other.weightLimit_;
    slotLimit_ = other.slotLimit_;
    fromIndex_ = other.fromIndex_;
    toIndex_ = other.toIndex_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SwapOrMergeStorageItemReq Clone() {
    return new SwapOrMergeStorageItemReq(this);
  }

  /// <summary>Field number for the "storage_type" field.</summary>
  public const int StorageTypeFieldNumber = 1;
  private global::EStorageType storageType_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::EStorageType StorageType {
    get { return storageType_; }
    set {
      storageType_ = value;
    }
  }

  /// <summary>Field number for the "storage_owner_id" field.</summary>
  public const int StorageOwnerIdFieldNumber = 2;
  private string storageOwnerId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string StorageOwnerId {
    get { return storageOwnerId_; }
    set {
      storageOwnerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "character_id" field.</summary>
  public const int CharacterIdFieldNumber = 3;
  private string characterId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CharacterId {
    get { return characterId_; }
    set {
      characterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "weight_limit" field.</summary>
  public const int WeightLimitFieldNumber = 4;
  private int weightLimit_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int WeightLimit {
    get { return weightLimit_; }
    set {
      weightLimit_ = value;
    }
  }

  /// <summary>Field number for the "slot_limit" field.</summary>
  public const int SlotLimitFieldNumber = 5;
  private int slotLimit_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int SlotLimit {
    get { return slotLimit_; }
    set {
      slotLimit_ = value;
    }
  }

  /// <summary>Field number for the "from_index" field.</summary>
  public const int FromIndexFieldNumber = 6;
  private int fromIndex_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int FromIndex {
    get { return fromIndex_; }
    set {
      fromIndex_ = value;
    }
  }

  /// <summary>Field number for the "to_index" field.</summary>
  public const int ToIndexFieldNumber = 7;
  private int toIndex_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ToIndex {
    get { return toIndex_; }
    set {
      toIndex_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SwapOrMergeStorageItemReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SwapOrMergeStorageItemReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (StorageType != other.StorageType) return false;
    if (StorageOwnerId != other.StorageOwnerId) return false;
    if (CharacterId != other.CharacterId) return false;
    if (WeightLimit != other.WeightLimit) return false;
    if (SlotLimit != other.SlotLimit) return false;
    if (FromIndex != other.FromIndex) return false;
    if (ToIndex != other.ToIndex) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (StorageType != 0) hash ^= StorageType.GetHashCode();
    if (StorageOwnerId.Length != 0) hash ^= StorageOwnerId.GetHashCode();
    if (CharacterId.Length != 0) hash ^= CharacterId.GetHashCode();
    if (WeightLimit != 0) hash ^= WeightLimit.GetHashCode();
    if (SlotLimit != 0) hash ^= SlotLimit.GetHashCode();
    if (FromIndex != 0) hash ^= FromIndex.GetHashCode();
    if (ToIndex != 0) hash ^= ToIndex.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (StorageType != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) StorageType);
    }
    if (StorageOwnerId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(StorageOwnerId);
    }
    if (CharacterId.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(CharacterId);
    }
    if (WeightLimit != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(WeightLimit);
    }
    if (SlotLimit != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(SlotLimit);
    }
    if (FromIndex != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(FromIndex);
    }
    if (ToIndex != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(ToIndex);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (StorageType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) StorageType);
    }
    if (StorageOwnerId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(StorageOwnerId);
    }
    if (CharacterId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CharacterId);
    }
    if (WeightLimit != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(WeightLimit);
    }
    if (SlotLimit != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(SlotLimit);
    }
    if (FromIndex != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(FromIndex);
    }
    if (ToIndex != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ToIndex);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SwapOrMergeStorageItemReq other) {
    if (other == null) {
      return;
    }
    if (other.StorageType != 0) {
      StorageType = other.StorageType;
    }
    if (other.StorageOwnerId.Length != 0) {
      StorageOwnerId = other.StorageOwnerId;
    }
    if (other.CharacterId.Length != 0) {
      CharacterId = other.CharacterId;
    }
    if (other.WeightLimit != 0) {
      WeightLimit = other.WeightLimit;
    }
    if (other.SlotLimit != 0) {
      SlotLimit = other.SlotLimit;
    }
    if (other.FromIndex != 0) {
      FromIndex = other.FromIndex;
    }
    if (other.ToIndex != 0) {
      ToIndex = other.ToIndex;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          StorageType = (global::EStorageType) input.ReadEnum();
          break;
        }
        case 18: {
          StorageOwnerId = input.ReadString();
          break;
        }
        case 26: {
          CharacterId = input.ReadString();
          break;
        }
        case 32: {
          WeightLimit = input.ReadInt32();
          break;
        }
        case 40: {
          SlotLimit = input.ReadInt32();
          break;
        }
        case 48: {
          FromIndex = input.ReadInt32();
          break;
        }
        case 56: {
          ToIndex = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class SwapOrMergeStorageItemResp : pb::IMessage<SwapOrMergeStorageItemResp> {
  private static readonly pb::MessageParser<SwapOrMergeStorageItemResp> _parser = new pb::MessageParser<SwapOrMergeStorageItemResp>(() => new SwapOrMergeStorageItemResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SwapOrMergeStorageItemResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[76]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SwapOrMergeStorageItemResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SwapOrMergeStorageItemResp(SwapOrMergeStorageItemResp other) : this() {
    error_ = other.error_;
    storageCharacterItems_ = other.storageCharacterItems_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SwapOrMergeStorageItemResp Clone() {
    return new SwapOrMergeStorageItemResp(this);
  }

  /// <summary>Field number for the "error" field.</summary>
  public const int ErrorFieldNumber = 1;
  private uint error_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Error {
    get { return error_; }
    set {
      error_ = value;
    }
  }

  /// <summary>Field number for the "storage_character_items" field.</summary>
  public const int StorageCharacterItemsFieldNumber = 2;
  private static readonly pb::FieldCodec<pb::ByteString> _repeated_storageCharacterItems_codec
      = pb::FieldCodec.ForBytes(18);
  private readonly pbc::RepeatedField<pb::ByteString> storageCharacterItems_ = new pbc::RepeatedField<pb::ByteString>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<pb::ByteString> StorageCharacterItems {
    get { return storageCharacterItems_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SwapOrMergeStorageItemResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SwapOrMergeStorageItemResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Error != other.Error) return false;
    if(!storageCharacterItems_.Equals(other.storageCharacterItems_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Error != 0) hash ^= Error.GetHashCode();
    hash ^= storageCharacterItems_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Error != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(Error);
    }
    storageCharacterItems_.WriteTo(output, _repeated_storageCharacterItems_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Error != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Error);
    }
    size += storageCharacterItems_.CalculateSize(_repeated_storageCharacterItems_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SwapOrMergeStorageItemResp other) {
    if (other == null) {
      return;
    }
    if (other.Error != 0) {
      Error = other.Error;
    }
    storageCharacterItems_.Add(other.storageCharacterItems_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Error = input.ReadUInt32();
          break;
        }
        case 18: {
          storageCharacterItems_.AddEntriesFrom(input, _repeated_storageCharacterItems_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Increase storage items
/// </summary>
public sealed partial class IncreaseStorageItemsReq : pb::IMessage<IncreaseStorageItemsReq> {
  private static readonly pb::MessageParser<IncreaseStorageItemsReq> _parser = new pb::MessageParser<IncreaseStorageItemsReq>(() => new IncreaseStorageItemsReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<IncreaseStorageItemsReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[77]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public IncreaseStorageItemsReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public IncreaseStorageItemsReq(IncreaseStorageItemsReq other) : this() {
    storageType_ = other.storageType_;
    storageOwnerId_ = other.storageOwnerId_;
    weightLimit_ = other.weightLimit_;
    slotLimit_ = other.slotLimit_;
    item_ = other.item_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public IncreaseStorageItemsReq Clone() {
    return new IncreaseStorageItemsReq(this);
  }

  /// <summary>Field number for the "storage_type" field.</summary>
  public const int StorageTypeFieldNumber = 1;
  private global::EStorageType storageType_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::EStorageType StorageType {
    get { return storageType_; }
    set {
      storageType_ = value;
    }
  }

  /// <summary>Field number for the "storage_owner_id" field.</summary>
  public const int StorageOwnerIdFieldNumber = 2;
  private string storageOwnerId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string StorageOwnerId {
    get { return storageOwnerId_; }
    set {
      storageOwnerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "weight_limit" field.</summary>
  public const int WeightLimitFieldNumber = 3;
  private int weightLimit_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int WeightLimit {
    get { return weightLimit_; }
    set {
      weightLimit_ = value;
    }
  }

  /// <summary>Field number for the "slot_limit" field.</summary>
  public const int SlotLimitFieldNumber = 4;
  private int slotLimit_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int SlotLimit {
    get { return slotLimit_; }
    set {
      slotLimit_ = value;
    }
  }

  /// <summary>Field number for the "item" field.</summary>
  public const int ItemFieldNumber = 5;
  private pb::ByteString item_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Item {
    get { return item_; }
    set {
      item_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as IncreaseStorageItemsReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(IncreaseStorageItemsReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (StorageType != other.StorageType) return false;
    if (StorageOwnerId != other.StorageOwnerId) return false;
    if (WeightLimit != other.WeightLimit) return false;
    if (SlotLimit != other.SlotLimit) return false;
    if (Item != other.Item) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (StorageType != 0) hash ^= StorageType.GetHashCode();
    if (StorageOwnerId.Length != 0) hash ^= StorageOwnerId.GetHashCode();
    if (WeightLimit != 0) hash ^= WeightLimit.GetHashCode();
    if (SlotLimit != 0) hash ^= SlotLimit.GetHashCode();
    if (Item.Length != 0) hash ^= Item.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (StorageType != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) StorageType);
    }
    if (StorageOwnerId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(StorageOwnerId);
    }
    if (WeightLimit != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(WeightLimit);
    }
    if (SlotLimit != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(SlotLimit);
    }
    if (Item.Length != 0) {
      output.WriteRawTag(42);
      output.WriteBytes(Item);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (StorageType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) StorageType);
    }
    if (StorageOwnerId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(StorageOwnerId);
    }
    if (WeightLimit != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(WeightLimit);
    }
    if (SlotLimit != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(SlotLimit);
    }
    if (Item.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Item);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(IncreaseStorageItemsReq other) {
    if (other == null) {
      return;
    }
    if (other.StorageType != 0) {
      StorageType = other.StorageType;
    }
    if (other.StorageOwnerId.Length != 0) {
      StorageOwnerId = other.StorageOwnerId;
    }
    if (other.WeightLimit != 0) {
      WeightLimit = other.WeightLimit;
    }
    if (other.SlotLimit != 0) {
      SlotLimit = other.SlotLimit;
    }
    if (other.Item.Length != 0) {
      Item = other.Item;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          StorageType = (global::EStorageType) input.ReadEnum();
          break;
        }
        case 18: {
          StorageOwnerId = input.ReadString();
          break;
        }
        case 24: {
          WeightLimit = input.ReadInt32();
          break;
        }
        case 32: {
          SlotLimit = input.ReadInt32();
          break;
        }
        case 42: {
          Item = input.ReadBytes();
          break;
        }
      }
    }
  }

}

public sealed partial class IncreaseStorageItemsResp : pb::IMessage<IncreaseStorageItemsResp> {
  private static readonly pb::MessageParser<IncreaseStorageItemsResp> _parser = new pb::MessageParser<IncreaseStorageItemsResp>(() => new IncreaseStorageItemsResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<IncreaseStorageItemsResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[78]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public IncreaseStorageItemsResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public IncreaseStorageItemsResp(IncreaseStorageItemsResp other) : this() {
    error_ = other.error_;
    storageCharacterItems_ = other.storageCharacterItems_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public IncreaseStorageItemsResp Clone() {
    return new IncreaseStorageItemsResp(this);
  }

  /// <summary>Field number for the "error" field.</summary>
  public const int ErrorFieldNumber = 1;
  private uint error_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Error {
    get { return error_; }
    set {
      error_ = value;
    }
  }

  /// <summary>Field number for the "storage_character_items" field.</summary>
  public const int StorageCharacterItemsFieldNumber = 2;
  private static readonly pb::FieldCodec<pb::ByteString> _repeated_storageCharacterItems_codec
      = pb::FieldCodec.ForBytes(18);
  private readonly pbc::RepeatedField<pb::ByteString> storageCharacterItems_ = new pbc::RepeatedField<pb::ByteString>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<pb::ByteString> StorageCharacterItems {
    get { return storageCharacterItems_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as IncreaseStorageItemsResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(IncreaseStorageItemsResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Error != other.Error) return false;
    if(!storageCharacterItems_.Equals(other.storageCharacterItems_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Error != 0) hash ^= Error.GetHashCode();
    hash ^= storageCharacterItems_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Error != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(Error);
    }
    storageCharacterItems_.WriteTo(output, _repeated_storageCharacterItems_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Error != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Error);
    }
    size += storageCharacterItems_.CalculateSize(_repeated_storageCharacterItems_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(IncreaseStorageItemsResp other) {
    if (other == null) {
      return;
    }
    if (other.Error != 0) {
      Error = other.Error;
    }
    storageCharacterItems_.Add(other.storageCharacterItems_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Error = input.ReadUInt32();
          break;
        }
        case 18: {
          storageCharacterItems_.AddEntriesFrom(input, _repeated_storageCharacterItems_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Decrease storage items
/// </summary>
public sealed partial class DecreaseStorageItemsReq : pb::IMessage<DecreaseStorageItemsReq> {
  private static readonly pb::MessageParser<DecreaseStorageItemsReq> _parser = new pb::MessageParser<DecreaseStorageItemsReq>(() => new DecreaseStorageItemsReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DecreaseStorageItemsReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[79]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DecreaseStorageItemsReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DecreaseStorageItemsReq(DecreaseStorageItemsReq other) : this() {
    storageType_ = other.storageType_;
    storageOwnerId_ = other.storageOwnerId_;
    weightLimit_ = other.weightLimit_;
    slotLimit_ = other.slotLimit_;
    dataId_ = other.dataId_;
    amount_ = other.amount_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DecreaseStorageItemsReq Clone() {
    return new DecreaseStorageItemsReq(this);
  }

  /// <summary>Field number for the "storage_type" field.</summary>
  public const int StorageTypeFieldNumber = 1;
  private global::EStorageType storageType_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::EStorageType StorageType {
    get { return storageType_; }
    set {
      storageType_ = value;
    }
  }

  /// <summary>Field number for the "storage_owner_id" field.</summary>
  public const int StorageOwnerIdFieldNumber = 2;
  private string storageOwnerId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string StorageOwnerId {
    get { return storageOwnerId_; }
    set {
      storageOwnerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "weight_limit" field.</summary>
  public const int WeightLimitFieldNumber = 3;
  private int weightLimit_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int WeightLimit {
    get { return weightLimit_; }
    set {
      weightLimit_ = value;
    }
  }

  /// <summary>Field number for the "slot_limit" field.</summary>
  public const int SlotLimitFieldNumber = 4;
  private int slotLimit_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int SlotLimit {
    get { return slotLimit_; }
    set {
      slotLimit_ = value;
    }
  }

  /// <summary>Field number for the "data_id" field.</summary>
  public const int DataIdFieldNumber = 5;
  private int dataId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int DataId {
    get { return dataId_; }
    set {
      dataId_ = value;
    }
  }

  /// <summary>Field number for the "amount" field.</summary>
  public const int AmountFieldNumber = 6;
  private int amount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Amount {
    get { return amount_; }
    set {
      amount_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DecreaseStorageItemsReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DecreaseStorageItemsReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (StorageType != other.StorageType) return false;
    if (StorageOwnerId != other.StorageOwnerId) return false;
    if (WeightLimit != other.WeightLimit) return false;
    if (SlotLimit != other.SlotLimit) return false;
    if (DataId != other.DataId) return false;
    if (Amount != other.Amount) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (StorageType != 0) hash ^= StorageType.GetHashCode();
    if (StorageOwnerId.Length != 0) hash ^= StorageOwnerId.GetHashCode();
    if (WeightLimit != 0) hash ^= WeightLimit.GetHashCode();
    if (SlotLimit != 0) hash ^= SlotLimit.GetHashCode();
    if (DataId != 0) hash ^= DataId.GetHashCode();
    if (Amount != 0) hash ^= Amount.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (StorageType != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) StorageType);
    }
    if (StorageOwnerId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(StorageOwnerId);
    }
    if (WeightLimit != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(WeightLimit);
    }
    if (SlotLimit != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(SlotLimit);
    }
    if (DataId != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(DataId);
    }
    if (Amount != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(Amount);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (StorageType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) StorageType);
    }
    if (StorageOwnerId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(StorageOwnerId);
    }
    if (WeightLimit != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(WeightLimit);
    }
    if (SlotLimit != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(SlotLimit);
    }
    if (DataId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(DataId);
    }
    if (Amount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Amount);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DecreaseStorageItemsReq other) {
    if (other == null) {
      return;
    }
    if (other.StorageType != 0) {
      StorageType = other.StorageType;
    }
    if (other.StorageOwnerId.Length != 0) {
      StorageOwnerId = other.StorageOwnerId;
    }
    if (other.WeightLimit != 0) {
      WeightLimit = other.WeightLimit;
    }
    if (other.SlotLimit != 0) {
      SlotLimit = other.SlotLimit;
    }
    if (other.DataId != 0) {
      DataId = other.DataId;
    }
    if (other.Amount != 0) {
      Amount = other.Amount;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          StorageType = (global::EStorageType) input.ReadEnum();
          break;
        }
        case 18: {
          StorageOwnerId = input.ReadString();
          break;
        }
        case 24: {
          WeightLimit = input.ReadInt32();
          break;
        }
        case 32: {
          SlotLimit = input.ReadInt32();
          break;
        }
        case 40: {
          DataId = input.ReadInt32();
          break;
        }
        case 48: {
          Amount = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class DecreaseStorageItemsResp : pb::IMessage<DecreaseStorageItemsResp> {
  private static readonly pb::MessageParser<DecreaseStorageItemsResp> _parser = new pb::MessageParser<DecreaseStorageItemsResp>(() => new DecreaseStorageItemsResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DecreaseStorageItemsResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[80]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DecreaseStorageItemsResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DecreaseStorageItemsResp(DecreaseStorageItemsResp other) : this() {
    error_ = other.error_;
    storageCharacterItems_ = other.storageCharacterItems_.Clone();
    decreasedItems_ = other.decreasedItems_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DecreaseStorageItemsResp Clone() {
    return new DecreaseStorageItemsResp(this);
  }

  /// <summary>Field number for the "error" field.</summary>
  public const int ErrorFieldNumber = 1;
  private uint error_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Error {
    get { return error_; }
    set {
      error_ = value;
    }
  }

  /// <summary>Field number for the "storage_character_items" field.</summary>
  public const int StorageCharacterItemsFieldNumber = 2;
  private static readonly pb::FieldCodec<pb::ByteString> _repeated_storageCharacterItems_codec
      = pb::FieldCodec.ForBytes(18);
  private readonly pbc::RepeatedField<pb::ByteString> storageCharacterItems_ = new pbc::RepeatedField<pb::ByteString>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<pb::ByteString> StorageCharacterItems {
    get { return storageCharacterItems_; }
  }

  /// <summary>Field number for the "decreased_items" field.</summary>
  public const int DecreasedItemsFieldNumber = 3;
  private static readonly pb::FieldCodec<global::ItemIndexAmountMap> _repeated_decreasedItems_codec
      = pb::FieldCodec.ForMessage(26, global::ItemIndexAmountMap.Parser);
  private readonly pbc::RepeatedField<global::ItemIndexAmountMap> decreasedItems_ = new pbc::RepeatedField<global::ItemIndexAmountMap>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::ItemIndexAmountMap> DecreasedItems {
    get { return decreasedItems_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DecreaseStorageItemsResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DecreaseStorageItemsResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Error != other.Error) return false;
    if(!storageCharacterItems_.Equals(other.storageCharacterItems_)) return false;
    if(!decreasedItems_.Equals(other.decreasedItems_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Error != 0) hash ^= Error.GetHashCode();
    hash ^= storageCharacterItems_.GetHashCode();
    hash ^= decreasedItems_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Error != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(Error);
    }
    storageCharacterItems_.WriteTo(output, _repeated_storageCharacterItems_codec);
    decreasedItems_.WriteTo(output, _repeated_decreasedItems_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Error != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Error);
    }
    size += storageCharacterItems_.CalculateSize(_repeated_storageCharacterItems_codec);
    size += decreasedItems_.CalculateSize(_repeated_decreasedItems_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DecreaseStorageItemsResp other) {
    if (other == null) {
      return;
    }
    if (other.Error != 0) {
      Error = other.Error;
    }
    storageCharacterItems_.Add(other.storageCharacterItems_);
    decreasedItems_.Add(other.decreasedItems_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Error = input.ReadUInt32();
          break;
        }
        case 18: {
          storageCharacterItems_.AddEntriesFrom(input, _repeated_storageCharacterItems_codec);
          break;
        }
        case 26: {
          decreasedItems_.AddEntriesFrom(input, _repeated_decreasedItems_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Mail
/// </summary>
public sealed partial class MailListReq : pb::IMessage<MailListReq> {
  private static readonly pb::MessageParser<MailListReq> _parser = new pb::MessageParser<MailListReq>(() => new MailListReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MailListReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[81]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MailListReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MailListReq(MailListReq other) : this() {
    userId_ = other.userId_;
    onlyNewMails_ = other.onlyNewMails_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MailListReq Clone() {
    return new MailListReq(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "only_new_mails" field.</summary>
  public const int OnlyNewMailsFieldNumber = 2;
  private bool onlyNewMails_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool OnlyNewMails {
    get { return onlyNewMails_; }
    set {
      onlyNewMails_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MailListReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MailListReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (OnlyNewMails != other.OnlyNewMails) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (OnlyNewMails != false) hash ^= OnlyNewMails.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (OnlyNewMails != false) {
      output.WriteRawTag(16);
      output.WriteBool(OnlyNewMails);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (OnlyNewMails != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MailListReq other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    if (other.OnlyNewMails != false) {
      OnlyNewMails = other.OnlyNewMails;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
        case 16: {
          OnlyNewMails = input.ReadBool();
          break;
        }
      }
    }
  }

}

public sealed partial class MailListResp : pb::IMessage<MailListResp> {
  private static readonly pb::MessageParser<MailListResp> _parser = new pb::MessageParser<MailListResp>(() => new MailListResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MailListResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[82]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MailListResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MailListResp(MailListResp other) : this() {
    list_ = other.list_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MailListResp Clone() {
    return new MailListResp(this);
  }

  /// <summary>Field number for the "list" field.</summary>
  public const int ListFieldNumber = 1;
  private static readonly pb::FieldCodec<pb::ByteString> _repeated_list_codec
      = pb::FieldCodec.ForBytes(10);
  private readonly pbc::RepeatedField<pb::ByteString> list_ = new pbc::RepeatedField<pb::ByteString>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<pb::ByteString> List {
    get { return list_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MailListResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MailListResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!list_.Equals(other.list_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= list_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    list_.WriteTo(output, _repeated_list_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += list_.CalculateSize(_repeated_list_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MailListResp other) {
    if (other == null) {
      return;
    }
    list_.Add(other.list_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          list_.AddEntriesFrom(input, _repeated_list_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class UpdateReadMailStateReq : pb::IMessage<UpdateReadMailStateReq> {
  private static readonly pb::MessageParser<UpdateReadMailStateReq> _parser = new pb::MessageParser<UpdateReadMailStateReq>(() => new UpdateReadMailStateReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateReadMailStateReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[83]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateReadMailStateReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateReadMailStateReq(UpdateReadMailStateReq other) : this() {
    mailId_ = other.mailId_;
    userId_ = other.userId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateReadMailStateReq Clone() {
    return new UpdateReadMailStateReq(this);
  }

  /// <summary>Field number for the "mail_id" field.</summary>
  public const int MailIdFieldNumber = 1;
  private string mailId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string MailId {
    get { return mailId_; }
    set {
      mailId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 2;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateReadMailStateReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateReadMailStateReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (MailId != other.MailId) return false;
    if (UserId != other.UserId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (MailId.Length != 0) hash ^= MailId.GetHashCode();
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (MailId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(MailId);
    }
    if (UserId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(UserId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (MailId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(MailId);
    }
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateReadMailStateReq other) {
    if (other == null) {
      return;
    }
    if (other.MailId.Length != 0) {
      MailId = other.MailId;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          MailId = input.ReadString();
          break;
        }
        case 18: {
          UserId = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class UpdateReadMailStateResp : pb::IMessage<UpdateReadMailStateResp> {
  private static readonly pb::MessageParser<UpdateReadMailStateResp> _parser = new pb::MessageParser<UpdateReadMailStateResp>(() => new UpdateReadMailStateResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateReadMailStateResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[84]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateReadMailStateResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateReadMailStateResp(UpdateReadMailStateResp other) : this() {
    error_ = other.error_;
    mail_ = other.mail_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateReadMailStateResp Clone() {
    return new UpdateReadMailStateResp(this);
  }

  /// <summary>Field number for the "error" field.</summary>
  public const int ErrorFieldNumber = 1;
  private uint error_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Error {
    get { return error_; }
    set {
      error_ = value;
    }
  }

  /// <summary>Field number for the "mail" field.</summary>
  public const int MailFieldNumber = 2;
  private pb::ByteString mail_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Mail {
    get { return mail_; }
    set {
      mail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateReadMailStateResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateReadMailStateResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Error != other.Error) return false;
    if (Mail != other.Mail) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Error != 0) hash ^= Error.GetHashCode();
    if (Mail.Length != 0) hash ^= Mail.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Error != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(Error);
    }
    if (Mail.Length != 0) {
      output.WriteRawTag(18);
      output.WriteBytes(Mail);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Error != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Error);
    }
    if (Mail.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Mail);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateReadMailStateResp other) {
    if (other == null) {
      return;
    }
    if (other.Error != 0) {
      Error = other.Error;
    }
    if (other.Mail.Length != 0) {
      Mail = other.Mail;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Error = input.ReadUInt32();
          break;
        }
        case 18: {
          Mail = input.ReadBytes();
          break;
        }
      }
    }
  }

}

public sealed partial class UpdateClaimMailItemsStateReq : pb::IMessage<UpdateClaimMailItemsStateReq> {
  private static readonly pb::MessageParser<UpdateClaimMailItemsStateReq> _parser = new pb::MessageParser<UpdateClaimMailItemsStateReq>(() => new UpdateClaimMailItemsStateReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateClaimMailItemsStateReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[85]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateClaimMailItemsStateReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateClaimMailItemsStateReq(UpdateClaimMailItemsStateReq other) : this() {
    mailId_ = other.mailId_;
    userId_ = other.userId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateClaimMailItemsStateReq Clone() {
    return new UpdateClaimMailItemsStateReq(this);
  }

  /// <summary>Field number for the "mail_id" field.</summary>
  public const int MailIdFieldNumber = 1;
  private string mailId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string MailId {
    get { return mailId_; }
    set {
      mailId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 2;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateClaimMailItemsStateReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateClaimMailItemsStateReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (MailId != other.MailId) return false;
    if (UserId != other.UserId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (MailId.Length != 0) hash ^= MailId.GetHashCode();
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (MailId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(MailId);
    }
    if (UserId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(UserId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (MailId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(MailId);
    }
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateClaimMailItemsStateReq other) {
    if (other == null) {
      return;
    }
    if (other.MailId.Length != 0) {
      MailId = other.MailId;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          MailId = input.ReadString();
          break;
        }
        case 18: {
          UserId = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class UpdateClaimMailItemsStateResp : pb::IMessage<UpdateClaimMailItemsStateResp> {
  private static readonly pb::MessageParser<UpdateClaimMailItemsStateResp> _parser = new pb::MessageParser<UpdateClaimMailItemsStateResp>(() => new UpdateClaimMailItemsStateResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateClaimMailItemsStateResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[86]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateClaimMailItemsStateResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateClaimMailItemsStateResp(UpdateClaimMailItemsStateResp other) : this() {
    error_ = other.error_;
    mail_ = other.mail_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateClaimMailItemsStateResp Clone() {
    return new UpdateClaimMailItemsStateResp(this);
  }

  /// <summary>Field number for the "error" field.</summary>
  public const int ErrorFieldNumber = 1;
  private uint error_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Error {
    get { return error_; }
    set {
      error_ = value;
    }
  }

  /// <summary>Field number for the "mail" field.</summary>
  public const int MailFieldNumber = 2;
  private pb::ByteString mail_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Mail {
    get { return mail_; }
    set {
      mail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateClaimMailItemsStateResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateClaimMailItemsStateResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Error != other.Error) return false;
    if (Mail != other.Mail) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Error != 0) hash ^= Error.GetHashCode();
    if (Mail.Length != 0) hash ^= Mail.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Error != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(Error);
    }
    if (Mail.Length != 0) {
      output.WriteRawTag(18);
      output.WriteBytes(Mail);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Error != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Error);
    }
    if (Mail.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Mail);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateClaimMailItemsStateResp other) {
    if (other == null) {
      return;
    }
    if (other.Error != 0) {
      Error = other.Error;
    }
    if (other.Mail.Length != 0) {
      Mail = other.Mail;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Error = input.ReadUInt32();
          break;
        }
        case 18: {
          Mail = input.ReadBytes();
          break;
        }
      }
    }
  }

}

public sealed partial class UpdateDeleteMailStateReq : pb::IMessage<UpdateDeleteMailStateReq> {
  private static readonly pb::MessageParser<UpdateDeleteMailStateReq> _parser = new pb::MessageParser<UpdateDeleteMailStateReq>(() => new UpdateDeleteMailStateReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateDeleteMailStateReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[87]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateDeleteMailStateReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateDeleteMailStateReq(UpdateDeleteMailStateReq other) : this() {
    mailId_ = other.mailId_;
    userId_ = other.userId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateDeleteMailStateReq Clone() {
    return new UpdateDeleteMailStateReq(this);
  }

  /// <summary>Field number for the "mail_id" field.</summary>
  public const int MailIdFieldNumber = 1;
  private string mailId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string MailId {
    get { return mailId_; }
    set {
      mailId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 2;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateDeleteMailStateReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateDeleteMailStateReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (MailId != other.MailId) return false;
    if (UserId != other.UserId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (MailId.Length != 0) hash ^= MailId.GetHashCode();
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (MailId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(MailId);
    }
    if (UserId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(UserId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (MailId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(MailId);
    }
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateDeleteMailStateReq other) {
    if (other == null) {
      return;
    }
    if (other.MailId.Length != 0) {
      MailId = other.MailId;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          MailId = input.ReadString();
          break;
        }
        case 18: {
          UserId = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class UpdateDeleteMailStateResp : pb::IMessage<UpdateDeleteMailStateResp> {
  private static readonly pb::MessageParser<UpdateDeleteMailStateResp> _parser = new pb::MessageParser<UpdateDeleteMailStateResp>(() => new UpdateDeleteMailStateResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateDeleteMailStateResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[88]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateDeleteMailStateResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateDeleteMailStateResp(UpdateDeleteMailStateResp other) : this() {
    error_ = other.error_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateDeleteMailStateResp Clone() {
    return new UpdateDeleteMailStateResp(this);
  }

  /// <summary>Field number for the "error" field.</summary>
  public const int ErrorFieldNumber = 1;
  private uint error_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Error {
    get { return error_; }
    set {
      error_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateDeleteMailStateResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateDeleteMailStateResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Error != other.Error) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Error != 0) hash ^= Error.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Error != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(Error);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Error != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Error);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateDeleteMailStateResp other) {
    if (other == null) {
      return;
    }
    if (other.Error != 0) {
      Error = other.Error;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Error = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class SendMailReq : pb::IMessage<SendMailReq> {
  private static readonly pb::MessageParser<SendMailReq> _parser = new pb::MessageParser<SendMailReq>(() => new SendMailReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SendMailReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[89]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SendMailReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SendMailReq(SendMailReq other) : this() {
    mail_ = other.mail_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SendMailReq Clone() {
    return new SendMailReq(this);
  }

  /// <summary>Field number for the "mail" field.</summary>
  public const int MailFieldNumber = 1;
  private pb::ByteString mail_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Mail {
    get { return mail_; }
    set {
      mail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SendMailReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SendMailReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Mail != other.Mail) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Mail.Length != 0) hash ^= Mail.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Mail.Length != 0) {
      output.WriteRawTag(10);
      output.WriteBytes(Mail);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Mail.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Mail);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SendMailReq other) {
    if (other == null) {
      return;
    }
    if (other.Mail.Length != 0) {
      Mail = other.Mail;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Mail = input.ReadBytes();
          break;
        }
      }
    }
  }

}

public sealed partial class SendMailResp : pb::IMessage<SendMailResp> {
  private static readonly pb::MessageParser<SendMailResp> _parser = new pb::MessageParser<SendMailResp>(() => new SendMailResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SendMailResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[90]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SendMailResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SendMailResp(SendMailResp other) : this() {
    error_ = other.error_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SendMailResp Clone() {
    return new SendMailResp(this);
  }

  /// <summary>Field number for the "error" field.</summary>
  public const int ErrorFieldNumber = 1;
  private uint error_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Error {
    get { return error_; }
    set {
      error_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SendMailResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SendMailResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Error != other.Error) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Error != 0) hash ^= Error.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Error != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(Error);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Error != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Error);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SendMailResp other) {
    if (other == null) {
      return;
    }
    if (other.Error != 0) {
      Error = other.Error;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Error = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class GetMailReq : pb::IMessage<GetMailReq> {
  private static readonly pb::MessageParser<GetMailReq> _parser = new pb::MessageParser<GetMailReq>(() => new GetMailReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetMailReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[91]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMailReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMailReq(GetMailReq other) : this() {
    mailId_ = other.mailId_;
    userId_ = other.userId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMailReq Clone() {
    return new GetMailReq(this);
  }

  /// <summary>Field number for the "mail_id" field.</summary>
  public const int MailIdFieldNumber = 1;
  private string mailId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string MailId {
    get { return mailId_; }
    set {
      mailId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 2;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetMailReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetMailReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (MailId != other.MailId) return false;
    if (UserId != other.UserId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (MailId.Length != 0) hash ^= MailId.GetHashCode();
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (MailId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(MailId);
    }
    if (UserId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(UserId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (MailId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(MailId);
    }
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetMailReq other) {
    if (other == null) {
      return;
    }
    if (other.MailId.Length != 0) {
      MailId = other.MailId;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          MailId = input.ReadString();
          break;
        }
        case 18: {
          UserId = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class GetMailResp : pb::IMessage<GetMailResp> {
  private static readonly pb::MessageParser<GetMailResp> _parser = new pb::MessageParser<GetMailResp>(() => new GetMailResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetMailResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[92]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMailResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMailResp(GetMailResp other) : this() {
    mail_ = other.mail_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMailResp Clone() {
    return new GetMailResp(this);
  }

  /// <summary>Field number for the "mail" field.</summary>
  public const int MailFieldNumber = 1;
  private pb::ByteString mail_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Mail {
    get { return mail_; }
    set {
      mail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetMailResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetMailResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Mail != other.Mail) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Mail.Length != 0) hash ^= Mail.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Mail.Length != 0) {
      output.WriteRawTag(10);
      output.WriteBytes(Mail);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Mail.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Mail);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetMailResp other) {
    if (other == null) {
      return;
    }
    if (other.Mail.Length != 0) {
      Mail = other.Mail;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Mail = input.ReadBytes();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Custom
/// </summary>
public sealed partial class CustomReq : pb::IMessage<CustomReq> {
  private static readonly pb::MessageParser<CustomReq> _parser = new pb::MessageParser<CustomReq>(() => new CustomReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CustomReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[93]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CustomReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CustomReq(CustomReq other) : this() {
    type_ = other.type_;
    data_ = other.data_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CustomReq Clone() {
    return new CustomReq(this);
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 1;
  private int type_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  /// <summary>Field number for the "data" field.</summary>
  public const int DataFieldNumber = 2;
  private pb::ByteString data_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Data {
    get { return data_; }
    set {
      data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CustomReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CustomReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Type != other.Type) return false;
    if (Data != other.Data) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Type != 0) hash ^= Type.GetHashCode();
    if (Data.Length != 0) hash ^= Data.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Type != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Type);
    }
    if (Data.Length != 0) {
      output.WriteRawTag(18);
      output.WriteBytes(Data);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Type != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
    }
    if (Data.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CustomReq other) {
    if (other == null) {
      return;
    }
    if (other.Type != 0) {
      Type = other.Type;
    }
    if (other.Data.Length != 0) {
      Data = other.Data;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Type = input.ReadInt32();
          break;
        }
        case 18: {
          Data = input.ReadBytes();
          break;
        }
      }
    }
  }

}

public sealed partial class CustomResp : pb::IMessage<CustomResp> {
  private static readonly pb::MessageParser<CustomResp> _parser = new pb::MessageParser<CustomResp>(() => new CustomResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CustomResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseServiceReflection.Descriptor.MessageTypes[94]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CustomResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CustomResp(CustomResp other) : this() {
    type_ = other.type_;
    data_ = other.data_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CustomResp Clone() {
    return new CustomResp(this);
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 1;
  private int type_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  /// <summary>Field number for the "data" field.</summary>
  public const int DataFieldNumber = 2;
  private pb::ByteString data_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Data {
    get { return data_; }
    set {
      data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CustomResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CustomResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Type != other.Type) return false;
    if (Data != other.Data) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Type != 0) hash ^= Type.GetHashCode();
    if (Data.Length != 0) hash ^= Data.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Type != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Type);
    }
    if (Data.Length != 0) {
      output.WriteRawTag(18);
      output.WriteBytes(Data);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Type != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
    }
    if (Data.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CustomResp other) {
    if (other == null) {
      return;
    }
    if (other.Type != 0) {
      Type = other.Type;
    }
    if (other.Data.Length != 0) {
      Data = other.Data;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Type = input.ReadInt32();
          break;
        }
        case 18: {
          Data = input.ReadBytes();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
